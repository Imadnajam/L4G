#<AdxTL>@(#)4.0.0.0 $Revision$
#Local Integer WRESULT : WRESULT = 0
#Local Char INFO(250) : INFO = ""
#Call CREATE_DELIVERY("EP1405-020019",INFO,WRESULT)
#  Local Char W1(250)(0..299)
#  Local Char W2(250)(0..299)
#  Local Char W3(250)(0..299)
#  Local Char W4(250)(0..299)
#  Local Char W5(250)(0..299)
#  Local Char W6(250)(0..299)
#  Dbgaff
#Call RECUP_ART_EPALIS("00001",W1,W2,W3,W4,W5,W6)
#  Local Char W1(250)(0..499)
#  Local Char W2(250)(0..499)
#  Local Decimal W3(0..499)
#  Local Decimal W4(0..499)
#  Local Decimal W5(0..499)
#  Dbgaff
#Call GET_STOCK_EPI("02","00001",W1,W2,W3,W4,W5)

#**
#* Documentation de la procédure RECUP_ART_EPALIS
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>26 mai 2014</td>
#* <tr><td><b>Nom de la requête</b></td><td>WSEPALIA</td>
#* <tr><td><b>Nom de la publication</b></td><td>RCP_ART_COL</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Cette méthode permet la récupération des articles EPALIS d'un chargeur
#* </td></table>
#* @public
#* @param NUM_CHARGEUR (<font color="#7F0055"><b>Char</b></font>) Code client du chargeur
#* @param ART_COLL (<font color="#7F0055"><b>Char</b></font>) Tableau des articles de collecte
#* @param LIBARTCOL (<font color="#7F0055"><b>Char</b></font>) Tableau des désignations articles de collecte
#* @param ART_PT (<font color="#7F0055"><b>Char</b></font>) Tableau des articles de pré-tri
#* @param LIBARTPTRI (<font color="#7F0055"><b>Char</b></font>) Tableau des désignations articles de pré-tri
#* @param ART_T (<font color="#7F0055"><b>Char</b></font>) Tableau des articles de tri
#* @param LIBARTTRI (<font color="#7F0055"><b>Char</b></font>) Tableau des désignations articles de tri
#* @param CODARTCH (<font color="#7F0055"><b>Char</b></font>) Tableau des nomenclatures articles du chargeur
#* @param CODARTCHOLD (<font color="#7F0055"><b>Char</b></font>) Tableau des nomenclatures articles anciennes du chargeur
#* @param ART_T_EN (<font color="#7F0055"><b>Char</b></font>) Tableau des articles transformés en
#* @param LIBARTEN (<font color="#7F0055"><b>Char</b></font>) Tableau des désignations articles de tri
#* @since <font color="green">Version 6</font>
#*!
Subprog RECUP_ART_EPALIS(NUM_CHARGEUR,ART_COLL,LIBARTCOL,ART_PT,LIBARTPTRI,ART_T,LIBARTTRI,CODARTCH,CODARTCHOLD,ART_T_EN,LIBARTEN
&,CZTYPARTEPI,CZCLASSEPI,CZAFFICHEPI,CZRANGEPI,CZDESEPI,CZGESEPI,CZLARG,CZLONG,CZHAUT,CZUNEPI,CZPOIDSEPI,CZUNPEPI,CZSTDEPI,CZNEUEPI,CZOKEPI,CZKCEPI,CZHSEPI,CZTREPI
&,PZTYPARTEPI,PZCLASSEPI,PZAFFICHEPI,PZRANGEPI,PZDESEPI,PZGESEPI,PZLARG,PZLONG,PZHAUT,PZUNEPI,PZPOIDSEPI,PZUNPEPI,PZSTDEPI,PZNEUEPI,PZOKEPI,PZKCEPI,PZHSEPI,PZTREPI
&,TZTYPARTEPI,TZCLASSEPI,TZAFFICHEPI,TZRANGEPI,TZDESEPI,TZGESEPI,TZLARG,TZLONG,TZHAUT,TZUNEPI,TZPOIDSEPI,TZUNPEPI,TZSTDEPI,TZNEUEPI,TZOKEPI,TZKCEPI,TZHSEPI,TZTREPI
&)
  Variable Char NUM_CHARGEUR
  Variable Char ART_COLL()(0..299)
  Variable Char LIBARTCOL()(0..299)
  Variable Char ART_PT()(0..299)
  Variable Char LIBARTPTRI()(0..299)
  Variable Char ART_T()(0..299)
  Variable Char LIBARTTRI()(0..299)
  Variable Char CODARTCH()(0..299)
  Variable Char CODARTCHOLD()(0..299)
  Variable Char ART_T_EN()(0..299)
  Variable Char LIBARTEN()(0..299)

  Variable Integer CZTYPARTEPI(0..299)
  Variable Integer CZCLASSEPI(0..299)
  Variable Integer CZAFFICHEPI(0..299)
  Variable Decimal CZRANGEPI(0..299)
  Variable Char CZDESEPI()(0..299)
  Variable Integer CZGESEPI(0..299)
  Variable Decimal CZLARG(0..299)
  Variable Decimal CZLONG(0..299)
  Variable Decimal CZHAUT(0..299)
  Variable Integer CZUNEPI(0..299)
  Variable Decimal CZPOIDSEPI(0..299)
  Variable Integer CZUNPEPI(0..299)
  Variable Integer CZSTDEPI(0..299)
  Variable Integer CZNEUEPI(0..299)
  Variable Decimal CZOKEPI(0..299)
  Variable Decimal CZKCEPI(0..299)
  Variable Decimal CZHSEPI(0..299)
  Variable Decimal CZTREPI(0..299)
  Variable Integer PZTYPARTEPI(0..299)
  Variable Integer PZCLASSEPI(0..299)
  Variable Integer PZAFFICHEPI(0..299)
  Variable Decimal PZRANGEPI(0..299)
  Variable Char PZDESEPI()(0..299)
  Variable Integer PZGESEPI(0..299)
  Variable Decimal PZLARG(0..299)
  Variable Decimal PZLONG(0..299)
  Variable Decimal PZHAUT(0..299)
  Variable Integer PZUNEPI(0..299)
  Variable Decimal PZPOIDSEPI(0..299)
  Variable Integer PZUNPEPI(0..299)
  Variable Integer PZSTDEPI(0..299)
  Variable Integer PZNEUEPI(0..299)
  Variable Decimal PZOKEPI(0..299)
  Variable Decimal PZKCEPI(0..299)
  Variable Decimal PZHSEPI(0..299)
  Variable Decimal PZTREPI(0..299)
  Variable Integer TZTYPARTEPI(0..299)
  Variable Integer TZCLASSEPI(0..299)
  Variable Integer TZAFFICHEPI(0..299)
  Variable Decimal TZRANGEPI(0..299)
  Variable Char TZDESEPI()(0..299)
  Variable Integer TZGESEPI(0..299)
  Variable Decimal TZLARG(0..299)
  Variable Decimal TZLONG(0..299)
  Variable Decimal TZHAUT(0..299)
  Variable Integer TZUNEPI(0..299)
  Variable Decimal TZPOIDSEPI(0..299)
  Variable Integer TZUNPEPI(0..299)
  Variable Integer TZSTDEPI(0..299)
  Variable Integer TZNEUEPI(0..299)
  Variable Decimal TZOKEPI(0..299)
  Variable Decimal TZKCEPI(0..299)
  Variable Decimal TZHSEPI(0..299)
  Variable Decimal TZTREPI(0..299)

If clalev([F:ZIE2])=0 : Local File ZEPALIS2 [ZIE2] : Endif
Local Integer WLIG : WLIG = 0
For [F:ZIE2]ZIE20 Where CODE_CHARGEU=NUM_CHARGEUR
  ART_COLL(WLIG) = [F:ZIE2]ART_COLLECTE
  LIBARTCOL(WLIG) = [F:ZIE2]LIB_ART_COLL
  ART_PT(WLIG) = [F:ZIE2]ART_PRETRI
  LIBARTPTRI(WLIG) = [F:ZIE2]LIB_ART_PTRI
  ART_T(WLIG) = [F:ZIE2]ART_TRI
  LIBARTTRI(WLIG) = [F:ZIE2]LIB_ART_TRI
  CODARTCH(WLIG) = [F:ZIE2]CODARTCH
  CODARTCHOLD(WLIG) = [F:ZIE2]CODARTCHOLD
  ART_T_EN(WLIG) = [F:ZIE2]ART_T_EN
  LIBARTEN(WLIG) = [F:ZIE2]LIB_ART_T_EN
  CZTYPARTEPI(WLIG) = [F:ZIE2]CZTYPARTEPI
  CZCLASSEPI(WLIG) = [F:ZIE2]CZCLASSEPI
  CZAFFICHEPI(WLIG) = [F:ZIE2]CZAFFICHEPI
  CZRANGEPI(WLIG) = [F:ZIE2]CZRANGEPI
  CZDESEPI(WLIG) = [F:ZIE2]CZDESEPI
  CZGESEPI(WLIG) = [F:ZIE2]CZGESEPI
  CZLARG(WLIG) = [F:ZIE2]CZLARG
  CZLONG(WLIG) = [F:ZIE2]CZLONG
  CZHAUT(WLIG) = [F:ZIE2]CZHAUT
  CZUNEPI(WLIG) = [F:ZIE2]CZUNEPI
  CZPOIDSEPI(WLIG) = [F:ZIE2]CZPOIDSEPI
  CZUNPEPI(WLIG) = [F:ZIE2]CZUNPEPI
  CZSTDEPI(WLIG) = [F:ZIE2]CZSTDEPI
  CZNEUEPI(WLIG) = [F:ZIE2]CZNEUEPI
  CZOKEPI(WLIG) = [F:ZIE2]CZOKEPI
  CZKCEPI(WLIG) = [F:ZIE2]CZKCEPI
  CZHSEPI(WLIG) = [F:ZIE2]CZHSEPI
  CZTREPI(WLIG) = [F:ZIE2]CZTREPI
  PZTYPARTEPI(WLIG) = [F:ZIE2]PZTYPARTEPI
  PZCLASSEPI(WLIG) = [F:ZIE2]PZCLASSEPI
  PZAFFICHEPI(WLIG) = [F:ZIE2]PZAFFICHEPI
  PZRANGEPI(WLIG) = [F:ZIE2]PZRANGEPI
  PZDESEPI(WLIG) = [F:ZIE2]PZDESEPI
  PZGESEPI(WLIG) = [F:ZIE2]PZGESEPI
  PZLARG(WLIG) = [F:ZIE2]PZLARG
  PZLONG(WLIG) = [F:ZIE2]PZLONG
  PZHAUT(WLIG) = [F:ZIE2]PZHAUT
  PZUNEPI(WLIG) = [F:ZIE2]PZUNEPI
  PZPOIDSEPI(WLIG) = [F:ZIE2]PZPOIDSEPI
  PZUNPEPI(WLIG) = [F:ZIE2]PZUNPEPI
  PZSTDEPI(WLIG) = [F:ZIE2]PZSTDEPI
  PZNEUEPI(WLIG) = [F:ZIE2]PZNEUEPI
  PZOKEPI(WLIG) = [F:ZIE2]PZOKEPI
  PZKCEPI(WLIG) = [F:ZIE2]PZKCEPI
  PZHSEPI(WLIG) = [F:ZIE2]PZHSEPI
  PZTREPI(WLIG) = [F:ZIE2]PZTREPI
  TZTYPARTEPI(WLIG) = [F:ZIE2]TZTYPARTEPI
  TZCLASSEPI(WLIG) = [F:ZIE2]TZCLASSEPI
  TZAFFICHEPI(WLIG) = [F:ZIE2]TZAFFICHEPI
  TZRANGEPI(WLIG) = [F:ZIE2]TZRANGEPI
  TZDESEPI(WLIG) = [F:ZIE2]TZDESEPI
  TZGESEPI(WLIG) = [F:ZIE2]TZGESEPI
  TZLARG(WLIG) = [F:ZIE2]TZLARG
  TZLONG(WLIG) = [F:ZIE2]TZLONG
  TZHAUT(WLIG) = [F:ZIE2]TZHAUT
  TZUNEPI(WLIG) = [F:ZIE2]TZUNEPI
  TZPOIDSEPI(WLIG) = [F:ZIE2]TZPOIDSEPI
  TZUNPEPI(WLIG) = [F:ZIE2]TZUNPEPI
  TZSTDEPI(WLIG) = [F:ZIE2]TZSTDEPI
  TZNEUEPI(WLIG) = [F:ZIE2]TZNEUEPI
  TZOKEPI(WLIG) = [F:ZIE2]TZOKEPI
  TZKCEPI(WLIG) = [F:ZIE2]TZKCEPI
  TZHSEPI(WLIG) = [F:ZIE2]TZHSEPI
  TZTREPI(WLIG) = [F:ZIE2]TZTREPI
  WLIG += 1
Next
End

#**
#* Documentation de la procédure RECUP_NBLIG_SOHNUM
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>27 mai 2014</td>
#* <tr><td><b>Nom de la requête</b></td><td>WSTEPALIA</td>
#* <tr><td><b>Nom de la publication</b></td><td>RCP_NBLIG_SOH</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Récupère le nombre de ligne d'une commande
#* </td></table>
#* @public
#* @param NUMCODE (<font color="#7F0055"><b>Char</b></font>) N° de la commande
#* @param NBLIG (<font color="#7F0055"><b>Integer</b></font>) Nombre de ligne de la commande
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 5</font>
#*!
Subprog RECUP_NBLIG_SOHNUM(NUMCDE,NBLIG,RESULT)
  Value Char NUMCDE
  Variable Integer NBLIG
  Variable Integer RESULT
  #Ouverture du fichier des lignes de commandes
  If clalev([F:SOQ])=0 : Local File SORDERQ [SOQ] : Endif
  Filter [F:SOQ] Where [F:SOQ]SOHNUM=NUMCDE
    NBLIG = rowcount([F:SOQ])
  Filter [F:SOQ] : # annulation de la sélection
  RESULT = 1
End

#**
#* Documentation de la procédure RECUP_LIG_SOHNUM
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>27 mai 2014</td>
#* <tr><td><b>Nom de la requête</b></td><td>WSTEPALIA</td>
#* <tr><td><b>Nom de la publication</b></td><td>RCP_LIG_SOH</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Récupère le n° de ligne d'une commande en fonction d'un code article et d'un type d'article
#* </td></table>
#* @public
#* @param NUMCDE (<font color="#7F0055"><b>Char</b></font>) N° de la commande
#* @param NUMART (<font color="#7F0055"><b>Char</b></font>) code de l'article
#* @param TYPART (<font color="#7F0055"><b>Integer</b></font>) Code type de l'article (1 : Collecte, 2 : Pré-tri et 3 : Tri)
#* @param LIG (<font color="#7F0055"><b>Integer</b></font>) Nombre de ligne de la commande
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 5</font>
#*!
Subprog RECUP_LIG_SOHNUM(NUMCDE,NUMART,TYPART,LIG,RESULT)
  Value Char NUMCDE
  Value Char NUMART
  Value Integer TYPART
  Variable Integer LIG
  Variable Integer RESULT
  Local Integer WLIG : WLIG = 0
  LIG = WLIG
  #Ouverture du fichier des lignes de commandes
  If clalev([F:SOP])=0 : Local File SORDERP [SOP] : Endif
  For [F:SOP]SOP0 Where [F:SOP]SOHNUM=NUMCDE
    WLIG = WLIG + 1
    If([F:SOP]ZTYPART=TYPART and [F:SOP]ITMREF=NUMART)Then
      LIG = WLIG
      Break
    Endif
  Next
  RESULT = 1
End

#**
#* Documentation de la procédure RECUP_AXE2_EPI
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>06 Novembre 2014</td>
#* <tr><td><b>Nom de la requête</b></td><td>WSTEPALIA</td>
#* <tr><td><b>Nom de la publication</b></td><td>RCP_AXE_EPI</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Récupère le code de l'axe analytique n°2 pour l'interface EPALIS
#* </td></table>
#* @public
#* @param RESULT (<font color="#7F0055"><b>Char</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 5</font>
#*!
Subprog RECUP_AXE2_EPI(RESULT)
  Variable Char RESULT
  RESULT = GZAXEEPI
End

#**
#* Documentation de la procédure CREATE_DELIVERY
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>28 mai 2014</td>
#* <tr><td><b>Nom de la requête</b></td><td>WSTEPALIA</td>
#* <tr><td><b>Nom de la publication</b></td><td>CRE_DELIV</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Cette méthode permet la création d'une livraison depuis le logiciel EPALIS
#* La variable INFO contient du texte représentant le déroulement du traitement
#* La variable RESULT contient 1 si tout est OK sinon elle vaut 1
#* </td></table>
#* @public
#* @param NUMCDE (<font color="#7F0055"><b>Char</b></font>) N) de la commande
#* @param INFO (<font color="#7F0055"><b>Char</b></font>) Information de retour
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 5</font>
#*!
Subprog CREATE_DELIVERY(NUMCDE,INFO,RESULT)
  Value Char NUMCDE
  Variable Char INFO
  Variable Integer RESULT
  Local Char WCODFOURNRACHAT(50) : WCODFOURNRACHAT = ""
  Local Char WCODADRFOURNRACHAT(50) : WCODADRFOURNRACHAT = ""


  If clalev([F:ZTE2])=0 : Local File ZTEMPEPI   [F:ZTE2] : Endif
  If clalev([F:ZPS])=0  : Local File ZPSORDER   [F:ZPS]  : Endif
  If clalev([F:ZPD])=0  : Local File ZPSORDERD  [F:ZPD]  : Endif
  If clalev([F:ZSE])=0  : Local File ZPSEPALIS  [F:ZSE]  : Endif
  If clalev([F:SOH2])=0 : Local File SORDER     [F:SOH2] : Endif
  If clalev([F:SOQ2])=0 : Local File SORDERQ    [F:SOQ2] : Endif
  If clalev([F:SOP2])=0 : Local File SORDERP    [F:SOP2] : Endif
  If clalev([F:SDH])=0  : Local File SDELIVERY  [F:SDH]  : Endif
  If clalev([F:SDD])=0  : Local File SDELIVERYD [F:SDD]  : Endif
  Trbegin [F:ZTE2],[F:ZPS],[F:ZPD],[F:ZSE],[F:SOH2],[F:SOQ2],[F:SOP2],[F:SDH],[F:SDD]

  #----Modif JBS du 31/05/2017----
  #Nous allons regarder si des lignes de la commandes ont le champ ZCREEPI = 3
  #Dans ce cas, on va les mettre à 2 pour pouvoir les synchroniser avec le site web EPALIS
  For[F:SOP2]SOP0 Where [F:SOP2]SOHNUM=NUMCDE and [F:SOP2]ZCREEPI=3
    [F:SOP2]ZCREEPI = 1
    Rewrite[F:SOP2]
  Next
  #-------------------------------
  #----Modif JBS du 13/10/2017----
  #Modification à la demande SLB  pour cocher systématiquement la case ZLIVEPI
  If(GWEBSERV)Then
    Read[F:SOH2]SOH0=NUMCDE
    If(fstat=0)Then
      [F:SOH2]ZLIVEPI=2
      [F:SOH2]ZDATVAL=date$
      Rewrite[F:SOH2]
    Endif
  Endif
  #-------------------------------
  RESULT = 1
  INFO = "Traitement terminé avec succès"
  #Nous allons travailler par Import/Export.
  #Nous disposons du modèle d'import : ZEPALIS
  #Nous disposons également de la variable globale GZREPLIV qui contient le répertoire de création des fichiers d'import
#Ouverture du fichier Trace
Local Char TIT(30) :[L]TIT ="Livraison commande EPALIS"
If !GSERVEUR : Call OUVRE_TRACE(TIT) From LECFIC : Endif
  If dim(GZECREPSOH)<=0
    RESULT = 0
    INFO = "[2] - Paramètre Chemin import pour création de la livraison inexistant. Vérifiez."
    Rollback
    Gosub CLOSE_LECFIC
    End
  Elsif GZECREPSOH=""
    RESULT = 0
    INFO = "[3] - Paramètre Chemin import pour création de la livraison non renseigné. Vérifiez."
    Rollback
    Gosub CLOSE_LECFIC
    End
  Endif
  If dim(GZECMODIMP)<=0
    RESULT = 0
    INFO = "[4] - Paramètre Modèle import pour création de la livraison inexistant. Vérifiez."
    Rollback
    Gosub CLOSE_LECFIC
    End
  Elsif GZECMODIMP=""
    RESULT = 0
    INFO = "[5] - Paramètre Modèle import pour création de la livraison non renseigné. Vérifiez."
    Rollback
    Gosub CLOSE_LECFIC
    End
  Endif

  Local Char ZNOMFIC(250), WMESS(250)
  Local Integer WERR

  If clalev([F:AOE])=0 : Local File AOBJEXT : Endif

  Read [F:AOE]AOE0="ZEPALIS"
  If fstat
    RESULT = 0
    INFO = "[6] - Modèle import pour création du règlement inexistant. Vérifiez."
    Rollback
    Gosub CLOSE_LECFIC
    End
  Endif

  # Définition complète du nom du fichier
  ZNOMFIC=GZREPLIV
  If right$(GZREPLIV,len(GZREPLIV))<>"\"
      ZNOMFIC += "\"
  Endif

  #Nous allons maintenant récupérer l'enregistrement de la commande
  #Ouverture du fichier des commandes
  Call ECR_TRACE("Ouverture du fichier des commandes\",0) From GESECRAN
  If clalev([F:SOH2])=0 : Local File SORDER  [F:SOH2] : Endif
  If clalev([F:SOP2])=0 : Local File SORDERP [F:SOP2] : Endif
  If clalev([F:SOQ2])=0 : Local File SORDERQ [F:SOQ2] : Endif
  If clalev([F:BPC])=0 : Local File BPCUSTOMER [F:BPC] : Endif
  If clalev([F:BPS])=0 : Local File BPSUPPLIER [F:BPS] : Endif
  #Lecture de l'enregistrement
  Call ECR_TRACE("Lecture de l'enregistrement " + NUMCDE,0) From GESECRAN
  Read [F:SOH2]SOH0=NUMCDE
  If(fstat=0)Then
    #<---------------Modification JBS du 21/02/2017 pour prendre en compte le paramétrage client chargeur ------
    #On va commencer par regarder si les tables sont ouvertes. Si c'est le cas, on les ferme
    If clalev([F:ZIE])<>0 : Close File [F:ZIE] : Endif
    If clalev([F:ZIE3])<>0 : Close File [F:ZIE3] : Endif
    #Nous disposons de 2 informations à ce stade :
    # - Le code du chargeur        : [F:SOH2]BPCORD
    # - Le code du client chargeur : [F:SOH2]ZCODCLT
    #Nous allons regarder si le client chargeur du chargeur possède un paramétrage spécifique
    Local Char WFILTRESUPP(100) : WFILTRESUPP = "1=1"
    Local Char WCODCLT(30) : WCODCLT = ""
    Local Integer WPARAMSPE : WPARAMSPE = 0
    If clalev([F:ZT2])=0 : Local File ZARTTRICC [F:ZT2] : Endif
    For [F:ZT2]ZT25 Where [F:ZT2]ZCODCHARG=[F:SOH2]BPCORD and [F:ZT2]ZCODCLTCHARG=[F:SOH2]ZCODCLT
      WPARAMSPE = 1
      Break
    Next
    If(WPARAMSPE=0)Then
      If clalev([F:ZIE])=0 : Local File ZEPALIS [F:ZIE] : Endif
      If clalev([F:ZIE3])=0 : Local File ZEPALIS [F:ZIE3] : Endif
    Else
      If clalev([F:ZIE])=0 : Local File ZEPALIS3 [F:ZIE] : Endif
      If clalev([F:ZIE3])=0 : Local File ZEPALIS3 [F:ZIE3] : Endif
      WFILTRESUPP = " CODE_CLTCHG='" + [F:SOH2]ZCODCLT + "'"
      WCODCLT = [F:SOH2]ZCODCLT
    Endif
    #---------------------------------------------------------------------------------------------------------->
    #Les articles de tri sont attachés à un tiers payeur, il faudra faire autant de livraison que de tiers payeur
    Local Char ZBPCNUM(20)(299)
    Local Char ZLBPCNUM(250)
    Local Integer ZIND : ZIND = 0
    Local Integer ZARTTRIOK : ZARTTRIOK = 0
    Local Integer ZARTACHOK : ZARTACHOK = 0
    Local Char ZTARTACH(30)(499)
    Local Integer ZTTPACH(499)
    Local Decimal ZTQTEACH(499)
    Local Decimal ZTPRIACH(499)
    Local Integer ZNBARTACH : ZNBARTACH = 0 #Cette variable servira à sauvegarder le nombre d'article à racheter
    #-----------------------------MODIFICATION JBS DU 13/10/2017--------------------------------
    #Local Char WCOMPTREC(30) : WCOMPTREC = format$("D:YYYYMMDDhhmmsssss",date$)
    Local Char WCOMPTREC(30) : WCOMPTREC = func SPE_GET_COMPTEUR()
    #-------------------------------------------------------------------------------------------
    #On va récupérer le pays du client chargeur--------------------
    If clalev([F:ZAI])=0 : Local File ZADREPI [F:ZAI] : Endif
    Local Char WPAYS(15) : WPAYS = "FR"
    If([F:SOH2]ZCODCLT<>"")Then
      Read[F:ZAI]ZAI0=[F:SOH2]BPCORD;[F:SOH2]ZCODCLT
      If(fstat=0)Then
        If([F:ZAI]ZPAYSISO<>"")Then
          WPAYS = [F:ZAI]ZPAYSISO
        Endif
      Endif
    Endif
    #--------------------------------------------------------------
    For [F:SOP2]SOP0 Where [F:SOP2]SOHNUM=NUMCDE
      #On va récupérer le tiers payeur de l'article de tri
      Local Integer WARTPRESTOK : WARTPRESTOK = 0
      If([F:SOP2]ZTYPART=3)Then
        #L'article est de type TRI
        #-----------------------------MODIFICATION DU 21/04/2016--------------------------------
        #Nous allons alimenter la table ZTEMPEPI pour alimenter la table des actions EPALIS
        If clalev([F:ZTE2])=0 : Local File ZTEMPEPI [F:ZTE2] : Endif
        Read[F:SOQ2]SOQ0=NUMCDE;[F:SOP2]SOPLIN;[F:SOP2]SOPSEQ
        #-----------------------------MODIFICATION DU 27/02/2018--------------------------------
        If([F:SOQ2]ZQTYOK>0)Then
          Raz [F:ZTE2]
          [F:ZTE2]ZFCY       = [F:SOH2]STOFCY
          [F:ZTE2]ZBPCORD    = [F:SOH2]BPCORD
          [F:ZTE2]ZUSER      = [F:SOH2]CREUSR
          [F:ZTE2]ZITMREF    = [F:SOP2]ITMREF
          [F:ZTE2]ZQTY       = [F:SOQ2]ZQTYOK
          [F:ZTE2]ZDATACT    = [F:SOH2]ORDDAT
          [F:ZTE2]ZREFERENCE = [F:SOH2]CUSORDREF
          [F:ZTE2]ZBPAADD    = [F:SOH2]BPAADD
          [F:ZTE2]ZCHAUFFEUR = [F:SOH2]ZCHAUFEPI
          [F:ZTE2]VCRNUM     = [F:SOH2]SOHNUM
          [F:ZTE2]VCRTYP     = "SOH"
          [F:ZTE2]ZCOMPTEUR  = WCOMPTREC
          [F:ZTE2]ZACT       = 10
          [F:ZTE2]ZACTOK     = 2
          [F:ZTE2]ZACTNUM    = [F:SOH2]SOHNUM
          [F:ZTE2]ZTYPPAL    = 1
          [F:ZTE2]ZEXEACT    = date$
          [F:ZTE2]ZEXEACTH   = time$
          [F:ZTE2]ZNUMLIG    = [F:SOP2]SOPLIN
          Write [F:ZTE2]
        Endif
        If([F:SOQ2]ZQTYAREP>0)Then
          Raz [F:ZTE2]
          [F:ZTE2]ZFCY       = [F:SOH2]STOFCY
          [F:ZTE2]ZBPCORD    = [F:SOH2]BPCORD
          [F:ZTE2]ZUSER      = [F:SOH2]CREUSR
          [F:ZTE2]ZITMREF    = [F:SOP2]ITMREF
          [F:ZTE2]ZQTY       = [F:SOQ2]ZQTYAREP
          [F:ZTE2]ZDATACT    = [F:SOH2]ORDDAT
          [F:ZTE2]ZREFERENCE = [F:SOH2]CUSORDREF
          [F:ZTE2]ZBPAADD    = [F:SOH2]BPAADD
          [F:ZTE2]ZCHAUFFEUR = [F:SOH2]ZCHAUFEPI
          [F:ZTE2]VCRNUM     = [F:SOH2]SOHNUM
          [F:ZTE2]VCRTYP     = "SOH"
          [F:ZTE2]ZCOMPTEUR  = WCOMPTREC
          [F:ZTE2]ZACT       = 10
          [F:ZTE2]ZACTOK     = 2
          [F:ZTE2]ZACTNUM    = [F:SOH2]SOHNUM
          [F:ZTE2]ZTYPPAL    = 2
          [F:ZTE2]ZEXEACT    = date$
          [F:ZTE2]ZEXEACTH   = time$
          [F:ZTE2]ZNUMLIG    = [F:SOP2]SOPLIN + 100
          Write [F:ZTE2]
        Endif
        If([F:SOQ2]ZQTYHS>0)Then
          Raz [F:ZTE2]
          [F:ZTE2]ZFCY       = [F:SOH2]STOFCY
          [F:ZTE2]ZBPCORD    = [F:SOH2]BPCORD
          [F:ZTE2]ZUSER      = [F:SOH2]CREUSR
          [F:ZTE2]ZITMREF    = [F:SOP2]ITMREF
          [F:ZTE2]ZQTY       = [F:SOQ2]ZQTYHS
          [F:ZTE2]ZDATACT    = [F:SOH2]ORDDAT
          [F:ZTE2]ZREFERENCE = [F:SOH2]CUSORDREF
          [F:ZTE2]ZBPAADD    = [F:SOH2]BPAADD
          [F:ZTE2]ZCHAUFFEUR = [F:SOH2]ZCHAUFEPI
          [F:ZTE2]VCRNUM     = [F:SOH2]SOHNUM
          [F:ZTE2]VCRTYP     = "SOH"
          [F:ZTE2]ZCOMPTEUR  = WCOMPTREC
          [F:ZTE2]ZACT       = 10
          [F:ZTE2]ZACTOK     = 2
          [F:ZTE2]ZACTNUM    = [F:SOH2]SOHNUM
          [F:ZTE2]ZTYPPAL    = 3
          [F:ZTE2]ZEXEACT    = date$
          [F:ZTE2]ZEXEACTH   = time$
          [F:ZTE2]ZNUMLIG    = [F:SOP2]SOPLIN + 200
          Write [F:ZTE2]
        Endif
        #---------------------------------------------------------------------------------------
        ZARTTRIOK = 1
        #Avant toute chose, on va regarder si cet article de tri possède des articles de prestation
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:SOH2]BPCORD and [F:ZIE]ART_TRI=[F:SOP2]ITMREF and [F:ZIE]TYPE_PREST=1
& and (instr(1,";"+[F:ZIE]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0 or ([F:ZIE]ZSITE="" and instr(1,";"+[F:ZIE]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0))
& and (instr(1,";"+[F:ZIE]ZPAYS+";",";"+WPAYS+";")>0 or ([F:ZIE]ZPAYS="" and instr(1,";"+[F:ZIE]ZOTHERPAYS+";",";"+WPAYS+";")=0))
& and evalue(WFILTRESUPP)
          WARTPRESTOK = 1
        Next
        #On va en profiter pour regarder s'il existe des articles à racheter
        For [F:ZIE]ZIE0 Where [F:ZIE]CODE_CHARGEU=[F:SOH2]BPCORD and [F:ZIE]ART_TRI=[F:SOP2]ITMREF and [F:ZIE]TYPE_PREST=5
& and (instr(1,";"+[F:ZIE]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0 or ([F:ZIE]ZSITE="" and instr(1,";"+[F:ZIE]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0))
& and (instr(1,";"+[F:ZIE]ZPAYS+";",";"+WPAYS+";")>0 or ([F:ZIE]ZPAYS="" and instr(1,";"+[F:ZIE]ZOTHERPAYS+";",";"+WPAYS+";")=0))
& and evalue(WFILTRESUPP)
          ZARTACHOK = 1
          #Nous sommes dans le cas ou l'article de type tri possède des article de prestations dont le type est rachat.
          #On va donc alimenter un tableau permettant de créer un fichier d'import de réception des article à racheter.
          #Nous disposons de 4 tableaux qui vont permettre de sauvegarder les informations
          #    Local Char ZTARTACH(30)(499)   tableau des codes articles
          #    Local Integer ZTTPACH(499)     tableau des types de palettes
          #    Local Decimal ZTQTEACH(499)    tableau des quantités
          #    Local Decimal ZTPRIACH(499)    tableau des prix de rachat
          #On va d'abord chercher dans nos tableaux pour voir si l'article n'y est pas déjà présent
          Local Integer WCPTACH : WCPTACH = 0
          Local Integer WACHTRV : WACHTRV = 0
          #<---------MODIFICATION JBS DU 05-07-2019----------
          # Commentaire : Pour les rachat de palettes, il faut également faire appel à la fonction tarif
          Local Decimal WPRIRACHAT
          Local Integer WNBPAL
          If([F:ZIE]TYPE_PAL=1)Then
            WNBPAL = [F:SOQ2]ZQTYOK
          Elsif([F:ZIE]TYPE_PAL=2)Then
            WNBPAL = [F:SOQ2]ZQTYAREP
          Elsif([F:ZIE]TYPE_PAL=3)Then
            WNBPAL = [F:SOQ2]ZQTYHS
          Endif
          WPRIRACHAT = func GET_TARIF_RELOC([F:ZIE]ART_PREST,[F:ZIE]CODE_CHARGEU,[F:SOH2]BPAADD,[F:SOH2]SALFCY,WNBPAL,[F:SOH2]SALFCY,WPAYS,[F:ZIE]TYPE_PAL,[F:ZIE]ART_TRI,[F:SOH2]ZCODCLT,[F:SOH2]
& ZDATTRI)
          #------------------------------------------------->
          While(ZTARTACH(WCPTACH)<>"")
            #<---------MODIFICATION JBS DU 05-07-2019----------
            # Commentaire : Pour les rachat de palettes, il faut également faire appel à la fonction tarif
            #If(ZTARTACH(WCPTACH)=[F:ZIE]ART_PREST and ZTTPACH(WCPTACH)=[F:ZIE]TYPE_PAL and ZTPRIACH(WCPTACH)=[F:ZIE]PRIX)Then
            If(ZTARTACH(WCPTACH)=[F:ZIE]ART_PREST and ZTTPACH(WCPTACH)=[F:ZIE]TYPE_PAL and ZTPRIACH(WCPTACH)=WPRIRACHAT)Then
            #------------------------------------------------->
              #On est dans le cas où on a trouvé une entrée dans notre tableau
              #On va donc augmenter la quantité et signifie qu'une entrée existe
              #On va lire l'enregistrement SOQ2
              Read[F:SOQ2]SOQ0=NUMCDE;[F:SOP2]SOPLIN;[F:SOP2]SOPSEQ
              If(fstat=0)Then
                If([F:ZIE]TYPE_PAL=1)Then
                  #Si le type de palette est : bonnes
                  ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]ZQTYOK
                Elsif([F:ZIE]TYPE_PAL=2)Then
                  #Si le type de palette est : à réparer
                  ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]ZQTYAREP
                Elsif([F:ZIE]TYPE_PAL=3)Then
                  #Si le type de palette est : HS
                  ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]ZQTYHS
                Endif
                WACHTRV = 1
              Endif
            Endif
            #On augmente le compteur
            WCPTACH = WCPTACH+1
          Wend
          #On regarde maintenant la variable WACHTRV
          #Si cette variable vaut 0 alors il n'y a pas d'entrée déjà existante, il va falloir créer l'entrée
          If(WACHTRV=0)Then
            #On va sauvegarder le code du fourniseur qui va racheter les palettes.
            WCODFOURNRACHAT = [F:ZIE]COD_FOURN
            WCODADRFOURNRACHAT = [F:ZIE]COD_ADR_FOUR
            #la variable WCPTACH contient l'index de la prochaine entrée à créer
            ZTARTACH(WCPTACH)=[F:ZIE]ART_PREST
            ZTTPACH(WCPTACH)=[F:ZIE]TYPE_PAL
            #---------MODIFICATION JBS du 13/12/2016 pour prendre en compte les chargeur géré avec modèle de tri---------
            #On va regarder si le chargeur est géré avec modèle de tri. Dans ce cas, on va récupérer le prix moyen du
            #modèle de tri stocké dans la collecte directement
            Local Decimal WBPCOK : WBPCOK = 0
            #<---------MODIFICATION JBS DU 05-07-2019----------
            # Commentaire : Pour les rachat de palettes, il faut également faire appel à la fonction tarif
            #ZTPRIACH(WCPTACH)=[F:ZIE]PRIX
            ZTPRIACH(WCPTACH)=WPRIRACHAT
            #------------------------------------------------->
            Read[F:BPC]BPC0=[F:SOH2]BPCORD
            If(fstat=0)Then
              If([F:BPC]ZGESTMODTRI=2 and [F:SOH2]ZMTPRXMOYCOL>0)Then
                ZTPRIACH(WCPTACH)=[F:SOH2]ZMTPRXMOYCOL
                WBPCOK = 1
              Endif
            Endif
            #------------------------------------------------------------------------------------------------------------
            Read[F:SOQ2]SOQ0=NUMCDE;[F:SOP2]SOPLIN;[F:SOP2]SOPSEQ
            If(fstat=0)Then
              If(WBPCOK=1)Then
                ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]QTY
              Else
                If([F:ZIE]TYPE_PAL=1)Then
                  #Si le type de palette est : bonnes
                  ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]ZQTYOK
                Elsif([F:ZIE]TYPE_PAL=2)Then
                  #Si le type de palette est : à réparer
                  ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]ZQTYAREP
                Elsif([F:ZIE]TYPE_PAL=3)Then
                  #Si le type de palette est : HS
                  ZTQTEACH(WCPTACH)=ZTQTEACH(WCPTACH)+[F:SOQ2]ZQTYHS
                Endif
              Endif
            Endif
            #On renseigne la variable ZNBARTACH
            ZNBARTACH = WCPTACH+1
            #<----- MODIF JBS du 14/03/2017 -------
            #On va regarder la qté et si elle vaut 0 alors on va effacer l'entrée
            # et diminuer la varaibla ZNBARTACH
            If(ZTQTEACH(WCPTACH)=0)Then
              ZTARTACH(WCPTACH)=""
              ZTTPACH(WCPTACH)=0
              ZTPRIACH(WCPTACH)=0
              ZTQTEACH(WCPTACH)=0
              ZNBARTACH -= 1
            Endif
            #------------------------------------->
          Endif
        Next
        If(WARTPRESTOK=1)Then
          #On va lire le code payeur de cette article
          #<---------------Modification JBS du 21/02/2017 pour prendre en compte le paramétrage client chargeur ------
          If(WPARAMSPE=0)Then
            Read[F:ZIE]ZIE1=[F:SOH2]BPCORD;[F:SOP2]ITMREF
          Else
            Read[F:ZIE]ZIE6=[F:SOH2]BPCORD;[F:SOH2]ZCODCLT;[F:SOP2]ITMREF
          Endif
          #--------------------------------------------------------------------------------------------------------->
          If(fstat=0)Then
            If(instr(0,ZLBPCNUM,";" + [F:ZIE]CODE_PAYEUR + ";")=0)Then
              ZBPCNUM(ZIND) = [F:ZIE]CODE_PAYEUR
              If(ZLBPCNUM="")Then
                ZLBPCNUM = ";"
              Endif
              ZLBPCNUM = ZLBPCNUM + [F:ZIE]CODE_PAYEUR + ";"
              ZIND = ZIND + 1
            Endif
          Endif
        Endif
      Endif
    Next
    If(ZIND<>0)Then
      #On va parcourir le tableau des code payeur
      Local Char WFICHIER(250)
      For I=0 To ZIND-1
#        ZNOMFIC += "ZREGL_CEC_"+GUSER+".TXT"
#        ZNOMFIC += "ZREGL_CEC_"+format$("D:hhmmss",date$)+".TXT"
        WFICHIER = ZNOMFIC + "ZLIV_CEPI_" + NUMCDE + "_" + ZBPCNUM(I) + ".TXT"
        Call ECR_TRACE("Création du fichier d'import livraison pour le client " + ZBPCNUM(I),0) From GESECRAN
        # Création du fichier
        Onerrgo PBCREATFICTXT
        Openo WFICHIER,0
        Onerrgo
        If WERR>0
          Case WERR
            When 20
              RESULT = 0
              INFO = "[7] - Répertoire inexistant. Arrêt du traitement."
              Rollback
            When 27
              RESULT = 0
              INFO = "[8] - Accès impossible (permission refusée) au répertoire. Arrêt du traitement."
              Rollback
            When 44
              RESULT = 0
              INFO = "[9] - Problème de place disque sur le répertoire. Arrêt du traitement."
              Rollback
            When Default
              RESULT = 0
              INFO = "[10] - Problème système rencontré lors de la création du fichier ("+errmes$(WERR)+"). Arrêt du traitement."
              Rollback
          Endcase
        Gosub CLOSE_LECFIC
        End
      Endif
      adxirs = chr$(13)+chr$(10)
      adxifs = ";"
      # Entête de la livraison
      # E, No livraison, Site vente, Site expédition, Client commande, Devise, Date expédition, Code chauffeur, No commande EPALIS, No export EPALIS
#      Wrseq "E","",[F:SOH2]SALFCY,[F:SOH2]STOFCY,[F:SOH2]BPCORD,[F:SOH2]CUR,date$,ZBPCNUM(I),NUMCDE,num$(I+1)
#      Wrseq "E","",[F:SOH2]SALFCY,[F:SOH2]STOFCY,ZBPCNUM(I),[F:SOH2]CUR,date$,"EPALI",NUMCDE,num$(I+1),[F:SOH2]CCE(0),[F:SOH2]CCE(1)
#      Wrseq "E","",[F:SOH2]SALFCY,[F:SOH2]STOFCY,ZBPCNUM(I),[F:SOH2]CUR,[F:SOH2]ZDATTRI,"EPALI",NUMCDE,num$(I+1),[F:SOH2]CCE(0),[F:SOH2]CCE(1)
      Local Char WSITE(30) : WSITE = [F:SOH2]SALFCY
      If clalev([F:ZBPC])=0 : Local File BPCUSTOMER [F:ZBPC] : Endif
        #Lecture de l'enregistrement
        Read [F:ZBPC]BPC0=[F:SOH2]BPCORD
        If(fstat=0)Then
          If([F:ZBPC]ZFACTURATION=2)Then
            WSITE = "E"    #Facturation gmobale
          Endif
        Endif
        #----------MODIFICATION JBS DU 14/11/2017----------
        Local Date WDATEFFET : WDATEFFET = func ZWSEPALISB.SPE_GET_DATEFFET([F:SOH2]ZDATTRI,1)
        If(WDATEFFET=[0/0/0])Then
          WDATEFFET = [F:SOH2]ZDATTRI
        Endif
#        Wrseq "E","",WSITE,[F:SOH2]STOFCY,ZBPCNUM(I),[F:SOH2]CUR,[F:SOH2]ZDATTRI,"00001",NUMCDE,num$(I+1),[F:SOH2]CCE(0),[F:SOH2]CCE(1)
        #<---------MODIFICATION JBS DU 17/05/2018----------
        #Il faut maintenant passer dans le modèle d'import le champ DLVDAT
        Wrseq "E","",WSITE,[F:SOH2]STOFCY,ZBPCNUM(I),[F:SOH2]CUR,WDATEFFET,WDATEFFET,"00001",NUMCDE,num$(I+1),[F:SOH2]CCE(0),[F:SOH2]CCE(1),[F:SOH2]ZDATTRI
        #Wrseq "E","",WSITE,[F:SOH2]STOFCY,ZBPCNUM(I),[F:SOH2]CUR,WDATEFFET,"00001",NUMCDE,num$(I+1),[F:SOH2]CCE(0),[F:SOH2]CCE(1),[F:SOH2]ZDATTRI
        #------------------------------------------------->
        #--------------------------------------------------
        #Déclaration de tableaux permettant de cumuler les article figurant sur le BL
        Local Char ZTABITMREF(30)(0..299) #Code article
        Local Decimal ZTABQTELIV(0..299) #Quantité livrée
        Local Decimal ZTABPBRUT(0..299) #Prix brut
        Local Integer ZTABNBLIG : ZTABNBLIG = 0
        Local Integer ZITMPRES : ZITMPRES = -1
        For [F:SOP2]SOP0 Where [F:SOP2]SOHNUM=NUMCDE
          If([F:SOP2]ZTYPART=3)Then
            #L'article est de type TRI
            #On va lire le code payeur de cette article
            #<---------------Modification JBS du 21/02/2017 pour prendre en compte le paramétrage client chargeur ------
            If(WPARAMSPE=0)Then
              Read[F:ZIE]ZIE1=[F:SOH2]BPCORD;[F:SOP2]ITMREF
            Else
              Read[F:ZIE]ZIE6=[F:SOH2]BPCORD;[F:SOH2]ZCODCLT;[F:SOP2]ITMREF
            Endif
            #--------------------------------------------------------------------------------------------------------->
            If(fstat=0)Then
              If([F:ZIE]CODE_PAYEUR=ZBPCNUM(I))Then
                # Ligne de la livraison
                # L, Code article, Quantité livrée, Prix brut, Valeur1 remise/frais, Valeur2 remise/frais, Valeur3 remise/frais,Code art tri, qualité article
                #On va lire l'enregistrement SOQ2
                Read[F:SOQ2]SOQ0=NUMCDE;[F:SOP2]SOPLIN;[F:SOP2]SOPSEQ
                If(fstat=0)Then
                  If([F:SOQ2]ZQTYOK<>0)Then
#                  Read[F:ZIE3]ZIE2=[F:SOH2]BPCORD;[F:SOQ2]ITMREF;1
#                  If(fstat=0)Then
                    For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=[F:SOH2]BPCORD and [F:ZIE3]ART_TRI=[F:SOQ2]ITMREF and [F:ZIE3]TYPE_PAL=1 and [F:ZIE3]TYPE_PREST=1
& and evalue(WFILTRESUPP)
#                      Local Decimal WPRIX : WPRIX = [F:ZIE3]PRIX
#                      Infbox "[1] - " + [F:SOH2]ZDATTRI
                      WPRIX = func GET_TARIF_RELOC([F:ZIE3]ART_PREST,[F:ZIE3]CODE_CHARGEU,[F:SOH2]BPAADD,[F:SOH2]SALFCY,[F:SOQ2]ZQTYOK,[F:SOH2]SALFCY,WPAYS,1,[F:ZIE3]ART_TRI,WCODCLT,[F:SOH2]ZDATTRI)
                      #Pour chaque article de prestation je traite l'article si
                      #([F:ZIE3]ZTYPARTEPI=1 ou [F:ZIE3]ZTYPARTEPI=2) et ([F:ZIE3]TSTTRSP<>2 ou ([F:ZIE3]TSTTRSP=2 et [F:SOH2]ZTYPTRSP=2))
                      If(([F:ZIE3]ZTYPARTEPI=1 or [F:ZIE3]ZTYPARTEPI=2) and ([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=2)))Then
                        If(([F:ZIE3]ZCODCLTCHARG="" or instr(1,";"+[F:ZIE3]ZCODCLTCHARG+";",";"+[F:SOH2]ZCODCLT+";"))
& and (([F:ZIE3]ZSITE="" and instr(1,";"+[F:ZIE3]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0) or instr(1,";"+[F:ZIE3]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0)
& and (([F:ZIE3]ZPAYS="" and instr(1,";"+[F:ZIE3]ZOTHERPAYS+";",";"+WPAYS+";")=0) or instr(1,";"+[F:ZIE3]ZPAYS+";",";"+WPAYS+";")>0)
&)Then
                          If([F:ZIE3]TYPE_PRIX=2)Then
                            WPRIX = WPRIX/[F:SOQ2]ZQTYOK
                          Endif
                          #--------------------------------------------------------------------------------------------------------------------------
                          #Wrseq "L",[F:ZIE3]ART_PREST,[F:SOQ2]ZQTYOK,WPRIX,[F:SOP2]DISCRGVAL1,[F:SOP2]DISCRGVAL2,[F:SOP2]DISCRGVAL3,[F:SOQ2]ITMREF,1
                          #On va regarder s'il existe déjà dans notre tableau une entrée pour cet  article
                          ZITMPRES = -1
                          For ZCOMPT=0 To ZTABNBLIG-1
                              If(ZTABITMREF(ZCOMPT)=[F:ZIE3]ART_PREST and ZTABPBRUT(ZCOMPT)=WPRIX)Then
                                  ZITMPRES = ZCOMPT
                                  Break #On arrete la boucle
                              Endif
                          Next
                          If(ZITMPRES<>-1)Then
                              #L'article est déjà présent dans le tableau
                              #On ajoute la quantité
                              ZTABQTELIV(ZITMPRES) = ZTABQTELIV(ZITMPRES) + [F:SOQ2]ZQTYOK
                          Else
                              #L'article n'est pas présent dans le tableau
                              #On ajoute une ligne dans le tableau
                              ZTABNBLIG  = ZTABNBLIG + 1
                              ZTABITMREF(ZTABNBLIG-1) = [F:ZIE3]ART_PREST
                              ZTABQTELIV(ZTABNBLIG-1) = [F:SOQ2]ZQTYOK
                              ZTABPBRUT(ZTABNBLIG-1) = WPRIX
                          Endif
                          #--------------------------------------------------------------------------------------------------------------------------
                        Endif
                      Endif
                    Next
#                  Endif
                  Endif
                  If([F:SOQ2]ZQTYAREP<>0)Then
#                  Read[F:ZIE3]ZIE2=[F:SOH2]BPCORD;[F:SOQ2]ITMREF;2
#                  If(fstat=0)Then
                    For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=[F:SOH2]BPCORD and [F:ZIE3]ART_TRI=[F:SOQ2]ITMREF and [F:ZIE3]TYPE_PAL=2 and [F:ZIE3]TYPE_PREST=1
& and evalue(WFILTRESUPP)
#                      Local Decimal WPRIX : WPRIX = [F:ZIE3]PRIX
#                      Infbox "[2] - " + [F:SOH2]ZDATTRI
                      WPRIX = func GET_TARIF_RELOC([F:ZIE3]ART_PREST,[F:ZIE3]CODE_CHARGEU,[F:SOH2]BPAADD,[F:SOH2]SALFCY,[F:SOQ2]ZQTYOK,[F:SOH2]SALFCY,WPAYS,2,[F:ZIE3]ART_TRI,WCODCLT,[F:SOH2]ZDATTRI)
                      If(([F:ZIE3]ZTYPARTEPI=1 or [F:ZIE3]ZTYPARTEPI=2) and ([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=2)))Then
                        If(([F:ZIE3]ZCODCLTCHARG="" or instr(1,";"+[F:ZIE3]ZCODCLTCHARG+";",";"+[F:SOH2]ZCODCLT+";"))
& and (([F:ZIE3]ZSITE="" and instr(1,";"+[F:ZIE3]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0) or instr(1,";"+[F:ZIE3]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0)
& and (([F:ZIE3]ZPAYS="" and instr(1,";"+[F:ZIE3]ZOTHERPAYS+";",";"+WPAYS+";")=0) or instr(1,";"+[F:ZIE3]ZPAYS+";",";"+WPAYS+";")>0)
&)Then
                          If([F:ZIE3]TYPE_PRIX=2)Then
                            WPRIX = WPRIX/[F:SOQ2]ZQTYAREP
                          Endif
                          #--------------------------------------------------------------------------------------------------------------------------
                          #Wrseq "L",[F:ZIE3]ART_PREST,[F:SOQ2]ZQTYAREP,WPRIX,[F:SOP2]DISCRGVAL1,[F:SOP2]DISCRGVAL2,[F:SOP2]DISCRGVAL3,[F:SOQ2]ITMREF,2
                          #On va regarder s'il existe déjà dans notre tableau une entrée pour cet article
                          ZITMPRES = -1
                          For ZCOMPT=0 To ZTABNBLIG-1
                              If(ZTABITMREF(ZCOMPT)=[F:ZIE3]ART_PREST and ZTABPBRUT(ZCOMPT)=WPRIX)Then
                                  ZITMPRES = ZCOMPT
                                  Break #On arrete la boucle
                              Endif
                          Next
                          If(ZITMPRES<>-1)Then
                              #L'article est déjà présent dans le tableau
                              #On ajoute la quantité
                              ZTABQTELIV(ZITMPRES) = ZTABQTELIV(ZITMPRES) + [F:SOQ2]ZQTYAREP
                          Else
                              #L'article n'est pas présent dans le tableau
                              #On ajoute une ligne dans le tableau
                              ZTABNBLIG  = ZTABNBLIG + 1
                              ZTABITMREF(ZTABNBLIG-1) = [F:ZIE3]ART_PREST
                              ZTABQTELIV(ZTABNBLIG-1) = [F:SOQ2]ZQTYAREP
                              ZTABPBRUT(ZTABNBLIG-1) = WPRIX
                          Endif
                          #--------------------------------------------------------------------------------------------------------------------------
                        Endif
                      Endif
                    Next
#                  Endif
                  Endif
                  If([F:SOQ2]ZQTYHS<>0)Then
#                  Read[F:ZIE3]ZIE2=[F:SOH2]BPCORD;[F:SOQ2]ITMREF;3
#                  If(fstat=0)Then
                    For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=[F:SOH2]BPCORD and [F:ZIE3]ART_TRI=[F:SOQ2]ITMREF and [F:ZIE3]TYPE_PAL=3 and [F:ZIE3]TYPE_PREST=1
& and evalue(WFILTRESUPP)
#                      Local Decimal WPRIX : WPRIX = [F:ZIE3]PRIX
#                      Infbox "[3] - " + [F:SOH2]ZDATTRI
                      WPRIX = func GET_TARIF_RELOC([F:ZIE3]ART_PREST,[F:ZIE3]CODE_CHARGEU,[F:SOH2]BPAADD,[F:SOH2]SALFCY,[F:SOQ2]ZQTYOK,[F:SOH2]SALFCY,WPAYS,3,[F:ZIE3]ART_TRI,WCODCLT,[F:SOH2]ZDATTRI)
                      If(([F:ZIE3]ZTYPARTEPI=1 or [F:ZIE3]ZTYPARTEPI=2) and ([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=2)))Then
                        If(([F:ZIE3]ZCODCLTCHARG="" or instr(1,";"+[F:ZIE3]ZCODCLTCHARG+";",";"+[F:SOH2]ZCODCLT+";"))
& and (([F:ZIE3]ZSITE="" and instr(1,";"+[F:ZIE3]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0) or instr(1,";"+[F:ZIE3]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0)
& and (([F:ZIE3]ZPAYS="" and instr(1,";"+[F:ZIE3]ZOTHERPAYS+";",";"+WPAYS+";")=0) or instr(1,";"+[F:ZIE3]ZPAYS+";",";"+WPAYS+";")>0)
&)Then
                          If([F:ZIE3]TYPE_PRIX=2)Then
                            WPRIX = WPRIX/[F:SOQ2]ZQTYHS
                          Endif
                          #--------------------------------------------------------------------------------------------------------------------------
                          #Wrseq "L",[F:ZIE3]ART_PREST,[F:SOQ2]ZQTYHS,WPRIX,[F:SOP2]DISCRGVAL1,[F:SOP2]DISCRGVAL2,[F:SOP2]DISCRGVAL3,[F:SOQ2]ITMREF,3
                          #On va regarder s'il existe déjà dans notre tableau une entrée pour cet article
                          ZITMPRES = -1
                          For ZCOMPT=0 To ZTABNBLIG-1
                              If(ZTABITMREF(ZCOMPT)=[F:ZIE3]ART_PREST and ZTABPBRUT(ZCOMPT)=WPRIX)Then
                                  ZITMPRES = ZCOMPT
                                  Break #On arrete la boucle
                              Endif
                          Next
                          If(ZITMPRES<>-1)Then
                              #L'article est déjà présent dans le tableau
                              #On ajoute la quantité
                              ZTABQTELIV(ZITMPRES) = ZTABQTELIV(ZITMPRES) + [F:SOQ2]ZQTYHS
                          Else
                              #L'article n'est pas présent dans le tableau
                              #On ajoute une ligne dans le tableau
                              ZTABNBLIG  = ZTABNBLIG + 1
                              ZTABITMREF(ZTABNBLIG-1) = [F:ZIE3]ART_PREST
                              ZTABQTELIV(ZTABNBLIG-1) = [F:SOQ2]ZQTYHS
                              ZTABPBRUT(ZTABNBLIG-1) = WPRIX
                          Endif
                          #--------------------------------------------------------------------------------------------------------------------------
                        Endif
                      Endif
                    Next
#                  Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
        Next
#        #<-------- MODIF JBS du 14/03/2017 ---------
#        #A ce stade nous avons un tableau qu'il va falloir compacter.
#        #En effet plusieurs lignes font référence au même article et au même prix
#        #Dans ce cas, nous allons condenser les lignes
#        Local Char ZTTABITMREF(60)(0..99)   # Tableau des articles
#        Local Decimal ZTTABQTELIV(0..99)    # Tableau des quantités
#        Local Decimal ZTTABPBRUT(0..99)     # Tableau des prix
#        Local Integer ZTTABNBLIG            # Index du tableau temporaire
#        For ZCOMPT=0 To ZTABNBLIG-1
#          #On va rechercher dans notre tableau temportaire si l'entrée n'existe pas déjà
#          Local Integer WLIGEXIST : WLIGEXIST = 0
#          For H=0 To ZTTABNBLIG-1
#            If(ZTTABITMREF(H)=ZTABITMREF(ZCOMPT) and ZTTABPBRUT(H)=ZTABPBRUT(ZCOMPT))Then
#              #Nous sommes dans le cas où une entrée existe dans notre tableau temporaire
#              #On va donc juste ajouter la quantité
#              ZTTABQTELIV(H) += ZTABQTELIV(ZCOMPT)
#              WLIGEXIST = 1
#              Break
#            Endif
#          Next
#          If(WLIGEXIST=0)Then
#            #On n'a pas trouvé une ligne, on va donc en ajouter une
#            #dans notre tableau temporaire
#            ZTTABITMREF(ZTTABNBLIG) = ZTABITMREF(ZCOMPT)
#            ZTTABPBRUT(ZTTABNBLIG)  = ZTABPBRUT(ZCOMPT)
#            ZTTABQTELIV(ZTTABNBLIG) = ZTABQTELIV(ZCOMPT)
#            ZTTABNBLIG += 1
#          Endif
#        Next
#        #On va maintenant écrire dans le fichier texte qui sera importé et y mettre le contenu du tableau
#        For ZCOMPT=0 To ZTTABNBLIG-1
#            Wrseq "L",ZTTABITMREF(ZCOMPT),ZTTABQTELIV(ZCOMPT),ZTTABPBRUT(ZCOMPT),0,0,0,"",0,[F:SOH2]CCE(0),[F:SOH2]CCE(1)
#        Next
#        #------------------------------------------>
        #On va maintenant écrire dans le fichier texte qui sera importé et y mettre le contenu du tableau
        For ZCOMPT=0 To ZTABNBLIG-1
            Wrseq "L",ZTABITMREF(ZCOMPT),ZTABQTELIV(ZCOMPT),ZTABPBRUT(ZCOMPT),0,0,0,"",0,[F:SOH2]CCE(0),[F:SOH2]CCE(1)
        Next
        # Fermeture du fichier
        Openo
        #Modification du 30/11/2016, on importe que si ZTABNBLIG>0----------------------------------------
        If clalev([F:SDH2])=0 : Local File SDELIVERY [F:SDH2] : Endif
        If(ZTABNBLIG>0)Then
          # Import du fichier
          #Call ECR_TRACE("Début de l'importation du fichier : |" + WFICHIER + "|",0) from GESECRAN
          Gosub OUVRE From GIMPOBJ
          [M:IMP2]MODIMP="ZEPALIS"
          [M:IMP2]TYPEXP=2
          [M:IMP2]NOMIMP=WFICHIER
          GSERVEUR=1
          Gosub EXEC From GIMPOBJ
          GSERVEUR=0
          #Call ECR_TRACE("Fin de l'importation du fichier",0) from GESECRAN
          # On va maintenant rechercher la livraison pour savoir si tout c'est bien passé
          Filter [F:SDH2] Where [F:SDH2]ZSOHNUMEPI=NUMCDE and [F:SDH2]ZNUMEPI=(I+1)
          Read [F:SDH2]SDH0 First
          If fstat
            #        Call ERREUR("[13] - Erreur de création de la livraison depuis la commande.") From GESECRAN
            INFO = "[13] - Erreur de création de la livraison depuis la commande."
            RESULT = 0
            Call ECR_TRACE("[13] - Erreur de création de la livraison depuis la commande.",1) From GESECRAN
            Rollback
            Gosub CLOSE_LECFIC
            End
          Else
            #        Call MESSAGE("Livraison numéro "+[F:SDH2]SDHNUM+" correctement créé.") From GESECRAN
            INFO = "Livraison numéro "+[F:SDH2]SDHNUM+" correctement créé."
            Call ECR_TRACE("La livraison " + [F:SDH2]SDHNUM + " a été correctement crée.",0) From GESECRAN
          Endif
          Filter [F:SDH2]
        Endif
        #-------------------------------------------------------------------------------------------------
      Next
      #On vient de faire les différent BL de prestation
      #Nous allons maintenant alimenter une précommande de vente pour matérialiser le stock physique.
      #Ce traitement ne se fait que si l'axe métier défini sur l'onglet EPALIS du client est différent de GD
      Local Char WCLIENT(30) : WCLIENT = [F:SOH2]BPCORD
      Local Char WAXEANA(30) : WAXEANA = "GD"
      #On va lire l'axe analytique EPALIS métier du client
      Read [F:BPC]BPC0=WCLIENT
      If(fstat=0)Then
        WAXEANA = [F:BPC]ZAXEMETEPI
      Endif
      #On force la varaible WAXEANA à "ST" pour signifier que l'on met en stock quelque soit l'axe analytique du client
      WAXEANA = "ST"
      If(WAXEANA<>"GD")Then
        #----------------------------------------------------------------------------------------------------------
        #--------------ALIMENTATION D'UNE PRECOMMANDE POUR LES ARTICLES PRESTATION DE TYPE PRESTATION--------------
        #----------------------------------------------------------------------------------------------------------
        Local Integer WPREST : WPREST = 0
        Local Char WBPCORD(30)
        Local Char WSITE(30)
        Read [F:SOH2]SOH0=NUMCDE
        If(fstat=0)Then
          WBPCORD = [F:SOH2]BPCORD
          WSITE = [F:SOH2]SALFCY
        Endif
        For [F:SOP2]SOP0 Where [F:SOP2]SOHNUM=NUMCDE
          If([F:SOP2]ZTYPART=3)Then
            #L'article est de type Tri
            For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=WBPCORD and [F:ZIE3]ART_TRI=[F:SOP2]ITMREF and [F:ZIE3]TYPE_PREST=1
& and (instr(1,";"+[F:ZIE3]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0 or ([F:ZIE3]ZSITE="" and instr(1,";"+[F:ZIE3]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0))
& and (instr(1,";"+[F:ZIE3]ZPAYS+";",";"+WPAYS+";")>0 or ([F:ZIE3]ZPAYS="" and instr(1,";"+[F:ZIE3]ZOTHERPAYS+";",";"+WPAYS+";")=0))
& and evalue(WFILTRESUPP)
              WPREST = 1
            Next
          Endif
        Next
        If(WPREST=1)Then
          Call ECR_TRACE("La commande EPALIS contient des articles prestation de type prestation",0) From GESECRAN
          If clalev([F:BPC])=0 : Local File BPCUSTOMER [BPC]: Endif
          If clalev([F:BPR])=0 : Local File BPARTNER [BPR]  : Endif
          If clalev([F:BPD])=0 : Local File BPDLVCUST [BPD] : Endif
          If clalev([F:TCU])=0 : Local File TABCUR [TCU]    : Endif
          If clalev([F:FCY])=0 : Local File FACILITY [FCY]  : Endif
          If clalev([F:ZPD])=0 : Local File ZPSORDERD [ZPD] : Endif
          If clalev([F:ITM])=0 : Local File ITMMASTER [ITM] : Endif
          If clalev([F:ZSE])=0 : Local File ZPSEPALIS [ZSE] : Endif
          #On est dans le cas ou on a des articles de prestation de type prestation
          #On va maintenant regarder s'il existe déjà une précommande de vente pour ce client
          #ce site et de type EPALIS et que cette precommande est ouverte
          Local Integer WPCENTETE : WPCENTETE = 0
          Local Integer WENTETEOK : WENTETEOK = 0
          Local Char WYPSNUM(15)
          If clalev([F:ZPS])=0 : Local File ZPSORDER [F:ZPS] : Endif
          For [F:ZPS]ZPS0 Where [F:ZPS]BPCORD=WBPCORD and [F:ZPS]STOFCY=WSITE and [F:ZPS]ZFLGEPALIS=2 and [F:ZPS]ZPSDAT<=date$ and [F:ZPS]ZDATVAL=[0/0/0] and [F:ZPS]ZFLGSOLDE<>2 and [F:ZPS]ZFLGSOLMAN
& <>2
            WPCENTETE = 1
            WYPSNUM = [F:ZPS]ZPSNUM
            Call ECR_TRACE("Une précommande ouverte pour le chargeur " + WBPCORD + " existe déja (" + WYPSNUM + ")",0) From GESECRAN
          Next
          If(WPCENTETE=0)Then
            #Création de l'entête de la précommande
            Call ECR_TRACE("Aucune précommande ouverte n'existe pour ce chargeur",0) From GESECRAN
            Local Integer WSTAT
            Call NUMERO("ZEPP",WSITE,date$,"",WYPSNUM,WSTAT) From SUBANM
            If GOK<0 : Return : Endif
            If WSTAT=0
              Raz [F:ZPS]
              [F:ZPS]ZPSNUM = WYPSNUM
              Read [F:BPC]BPC0=WBPCORD
              If fstat=0
                [F:ZPS]BPCORD = WBPCORD
                [F:ZPS]BPCNAM = [F:BPC]BPCNAM
                [F:ZPS]BPCINV = [F:BPC]BPCINV
                [F:ZPS]BPCPYR = [F:BPC]BPCPYR
                [F:ZPS]CHGTYP = [F:BPC]CHGTYP
                [F:ZPS]VACBPR = [F:BPC]VACBPR
                [F:ZPS]PTE    = [F:BPC]PTE
              Endif
              # Récup infos depuis BPDLVCUST
              Filter [F:BPD] Where [F:BPD]BPCNUM=WBPCORD
              Read [F:BPD]BPD0 First
              If fstat=0
                [F:ZPS]BPAADD = [F:BPD]BPAADD
                [F:ZPS]BPTNUM = [F:BPD]BPTNUM
                [F:ZPS]MDL    = [F:BPD]MDL
              Endif
              Filter [F:BPD]
              # Récup infos depuis BPARTNER
              Read [F:BPR]BPR0=WBPCORD
              If fstat=0
                [F:ZPS]CUR = [F:BPR]CUR
                # On se place dans TABCUR pour le calcul du prix total ligne
                Read [F:TCU]TCU0=[F:BPR]CUR
                If fstat
                    Raz [F:TCU]
                Endif
                [F:ZPS]LAN = [F:BPR]LAN
              Endif
              [F:ZPS]ZCUSORDREF = ""
              [F:ZPS]ZPSDAT = date$
              [F:ZPS]DEMDLVDAT = date$
              [F:ZPS]CREUSR = GUSER
              [F:ZPS]CREDAT = date$
              [F:ZPS]UPDUSR = GUSER
              [F:ZPS]UPDDAT = date$
              [F:ZPS]STOFCY = WSITE
              Read [F:FCY]FCY0=WSITE
              If fstat=0
                [F:ZPS]ZFCYAREA = [F:FCY]ZFCYAREA
              Endif
              [F:ZPS]ZPCNAT = 1
              [F:ZPS]ZFLGSOLDE = 1
              [F:ZPS]ZFLGVALIDE = 1
              [F:ZPS]ZFLGSOLMAN = 1
              [F:ZPS]ZFLGEPALIS = 2
              Read [F:SOH2]SOH0=NUMCDE
              If(fstat=0)Then
                [F:ZPS]ZAXE1=[F:SOH2]CCE(0)
                [F:ZPS]ZAXE2=[F:SOH2]CCE(1)
              Endif
              Write [F:ZPS]
              If(fstat=0)Then
                WENTETEOK = 1
                Call ECR_TRACE("Une précommande ouverte vient d'être créée pour ce chargeur (" + WYPSNUM + ")",0) From GESECRAN
              Endif
            Else
              GERR=1
              GMESSAGE=mess(60,199,1)
              GOK=0
              Return
            Endif
          Endif
          #On va maintenant créer les lignes de la précommande
          If(WPCENTETE=1 or WENTETEOK=1)Then
            #On dispose de la variable WYPSNUM contenant le N° de la précommande
            #On va récupérer le dernier N° de ligne de la précommande
            Local Integer WNUMLIG : WNUMLIG = 0
            For [F:ZPD]ZPD0 Where [F:ZPD]ZPSNUM=WYPSNUM
              If([F:ZPD]ZPDLIN>WNUMLIG)Then
                WNUMLIG = [F:ZPD]ZPDLIN
              Endif
            Next
            WNUMLIG = WNUMLIG + 1000
            Call ECR_TRACE("Alimentation des lignes de la précommande",0) From GESECRAN
            #On va parcourir maintenant les lignes de la commandes
            For [F:SOQ2]SOQ0 Where [F:SOQ2]SOHNUM=NUMCDE
              #On va lire l'enregistrement de la table SORDERP
              Read [F:SOP2]SOP0=NUMCDE;[F:SOQ2]SOPLIN;[F:SOQ2]SOQSEQ
              If([F:SOP2]ZTYPART=3)Then
                #L'article est de type Tri
                #On regarde si l'article de type tri a des articles de prestation dont le type est égal à prestation
                For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=WBPCORD and [F:ZIE3]ART_TRI=[F:SOQ2]ITMREF and [F:ZIE3]TYPE_PREST=1
& and evalue(WFILTRESUPP)
                  If(([F:ZIE3]ZCODCLTCHARG="" or instr(1,";"+[F:ZIE3]ZCODCLTCHARG+";",";"+[F:SOH2]ZCODCLT+";"))
& and (([F:ZIE3]ZSITE="" and instr(1,";"+[F:ZIE3]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0) or instr(1,";"+[F:ZIE3]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0)
& and (([F:ZIE3]ZPAYS="" and instr(1,";"+[F:ZIE3]ZOTHERPAYS+";",";"+WPAYS+";")=0) or instr(1,";"+[F:ZIE3]ZPAYS+";",";"+WPAYS+";")>0)
&)Then
                    WPREST = 1
      #              Read [F:ZPD]ZPD1=WYPSNUM;[F:ZIE3]ART_PREST;[F:ZIE3]ZARNUM
                    Read [F:ZPD]ZPD2=WYPSNUM;[F:ZIE3]ART_PREST
                    If(fstat=0)Then
                      #La ligne existe, on va donc mettre à jour la quantité
                      Local Decimal WQTE : WQTE = 0
                      If([F:ZIE3]TYPE_PAL=1)Then
                        WQTE = [F:SOQ2]ZQTYOK
                        [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
    # MODIFICATION du 19/03/2015, on alimente la quantité sur la ligne de précommande que pour les palettes bonnes
    #                  Elsif([F:ZIE3]TYPE_PAL=2)Then
    #                    WQTE = [F:SOQ2]ZQTYAREP
    #                    [F:ZPD]QTYKC = [F:ZPD]QTYKC + WQTE
    #                  Elsif([F:ZIE3]TYPE_PAL=3)Then
    #                    WQTE = [F:SOQ2]ZQTYHS
                      Endif
                      #On ne met à jour la qté que pour les article dont le type est différent de Transformation
                      If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                        [F:ZPD]QTY = [F:ZPD]QTY + WQTE
                      Endif
                      [F:ZPD]GROPRI = 0
                      [F:ZPD]NETPRI = 0
                      [F:ZPD]AMTNOTLIN = 0
      #                [F:ZPD]ZARNUM = [F:ZIE3]ZARNUM
                      #On va enregistrer les modifications uniquement si
                      #soit l'art de prest n'est pas soumis au test trsp ou s'il l'est, il faut que letransport soit interne
                      #[F:ZIE3]TSTTRSP<>2 ou ([F:ZIE3]TSTTRSP=2 et [F:SOH2]ZTYPTRSP=1)
                      If([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=1))Then
                        Rewrite [F:ZPD]
                        If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                          Call ECR_TRACE("Une ligne pour l'article " + [F:ZIE3]ART_PREST + " existe déjà. Ajout de la quantité : " + num$(WQTE),0) From GESECRAN
                        Else
                          Call ECR_TRACE("Une ligne pour l'article " + [F:ZIE3]ART_PREST + " existe déjà. L'article est de type transformation, on n'ajoute pas de quantité.",0) From GESECRAN
                        Endif
                      Endif
                    Else
                      #La ligne n'existe pas, on va la crééer
                      Raz [F:ZPD]
                      [F:ZPD]ZPSNUM = WYPSNUM
                      [F:ZPD]ZPDLIN = WNUMLIG
                      WNUMLIG = WNUMLIG + 1000
                      [F:ZPD]ITMREF = [F:ZIE3]ART_PREST
                      Read [F:ITM]ITM0=[F:ZIE3]ART_PREST
                      If(fstat=0)Then
                        [F:ZPD]ITMDES1 = [F:ITM]ITMDES1
                        [F:ZPD]VACITM = [F:ITM]VACITM
                        [F:ZPD]SAU = [F:ITM]SAU
                      Endif
                      Local Decimal WQTE : WQTE = 0
                      If([F:ZIE3]TYPE_PAL=1)Then
                        WQTE = [F:SOQ2]ZQTYOK
                        [F:ZPD]QTYOK = WQTE
    # MODIFICATION du 19/03/2015, on alimente la quantité sur la ligne de précommande que pour les palettes bonnes
    #                  Elsif([F:ZIE3]TYPE_PAL=2)Then
    #                    WQTE = [F:SOQ2]ZQTYAREP
    #                    [F:ZPD]QTYKC = WQTE
    #                  Elsif([F:ZIE3]TYPE_PAL=3)Then
    #                    WQTE = [F:SOQ2]ZQTYHS
                      Endif
                      #On ne met à jour la qté que pour les articles dont le type est différent de Transformation
                      If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                        [F:ZPD]QTY = WQTE
                      Else
                        [F:ZPD]QTY = 0
                      Endif
                      [F:ZPD]QTYCDE = 0
                      [F:ZPD]GROPRI = 0
                      [F:ZPD]NETPRI = 0
                      [F:ZPD]AMTNOTLIN = 0
      #                [F:ZPD]ZARNUM = [F:ZIE3]ZARNUM
                      #On va enregistrer les modifications uniquement si
                      #soit l'art de prest n'est pas soumis au test trsp ou s'il l'est, il faut que le transport soit interne
                      #[F:ZIE3]TSTTRSP<>2 ou ([F:ZIE3]TSTTRSP=2 et [F:SOH2]ZTYPTRSP=2)
                      If([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=2))Then
                        Write [F:ZPD]
                        If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                          Call ECR_TRACE("Création d'une ligne pour l'article " + [F:ZIE3]ART_PREST + " avec une quantité de : " + num$(WQTE),0) From GESECRAN
                        Else
                          Call ECR_TRACE("Création d'une ligne pour l'article " + [F:ZIE3]ART_PREST + " avec une quantité de 0 car c'est un article de type Transformation.",0) From GESECRAN
                        Endif
                      Endif
                    Endif
                    #On va maintenant alimenter la table ZPSEPALIS pour le tableau des commandes EPALIS dans la précommande de vente
                    Raz [F:ZSE]
                    [F:ZSE]ZDATE = [F:SOH2]ZDATTRI
                    [F:ZSE]ZSOHNUM = [F:SOQ2]SOHNUM
                    [F:ZSE]ZNUMLIG = [F:SOQ2]SOPLIN
                    If([F:ZIE3]TYPE_PAL=1)Then
                      [F:ZSE]ZQTY = [F:SOQ2]ZQTYOK
                    Elsif([F:ZIE3]TYPE_PAL=2)Then
                      [F:ZSE]ZQTY = [F:SOQ2]ZQTYAREP
                    Elsif([F:ZIE3]TYPE_PAL=3)Then
                      [F:ZSE]ZQTY = [F:SOQ2]ZQTYHS
                    Endif
                    [F:ZSE]ZTYPPAL = [F:ZIE3]TYPE_PAL
                    [F:ZSE]ZARTTRI = [F:ZIE3]ART_TRI
                    [F:ZSE]ZARTPREST = [F:ZIE3]ART_PREST
                    [F:ZSE]ZPSNUM = WYPSNUM
                    [F:ZSE]ZPSLIG = [F:ZPD]ZPDLIN
                    [F:ZSE]ZART = [F:ZIE3]ZART
                    If(([F:ZIE3]ART_TRI<>[F:ZIE3]ZART)and([F:ZIE3]TYPE_PREST=3 or [F:ZIE3]TYPE_PREST=6))Then
                      #On est dans le cas ou c'est une prestation de transformation
                      If([F:ZIE3]TYPE_PAL=1)Then
                        [F:ZSE]ZQTEATRANSF = [F:SOQ2]ZQTYOK
                      Elsif([F:ZIE3]TYPE_PAL=2)Then
                        [F:ZSE]ZQTEATRANSF = [F:SOQ2]ZQTYAREP
                      Endif
                    Else
                      If([F:ZIE3]TYPE_PAL=1)Then
                        [F:ZSE]ZQTEOK = [F:SOQ2]ZQTYOK
                      Elsif([F:ZIE3]TYPE_PAL=2)Then
                        [F:ZSE]ZQTEKC = [F:SOQ2]ZQTYAREP
                      Endif
                    Endif
                    [F:ZSE]ZDATEACT = date$
                    [F:ZSE]ZSAVDATACT = date$
                    [F:ZSE]ZFACTRELOC = 1
                    [F:ZSE]ZTYPPREST = [F:ZIE3]TYPE_PREST
                    #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
                    [F:ZSE]ZSITECOLL = [F:SOH2]SALFCY
                    #--------------------------------------------------------------------------------------
                    #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPaysCOLL dans ZPSEPALIS---
                    [F:ZSE]ZPAYSCOLL = WPAYS
                    #--------------------------------------------------------------------------------------
                    #---Le 20/02/2017 - Ajout suite à la mise en place du champ ZNONSTOCK dans ZARTTRI ----
                    #A ce stade si [F:ZIE3]TYPE_PAL=1 (Bonne) et [F:ZIE3]TYPE_PREST=1 (collecte - directe) et [F:ZIE3]ZARTSTOCKE=1 (non)
                    #Le 21/03/2017 on ne fait pas cela que pour les bonnes
                    #TODO
                    If([F:ZIE3]TYPE_PREST=1 and [F:ZIE3]ZARTSTOCKE=1)Then
                      If([F:ZIE3]TYPE_PAL=1) Then
                        [F:ZSE]ZQTYLIV=[F:ZSE]ZQTEOK
                      Elsif([F:ZIE3]TYPE_PAL=2) Then
                        [F:ZSE]ZQTYLIV=[F:ZSE]ZQTEKC
                      Else
                        [F:ZSE]ZQTYLIV=[F:ZSE]ZQTEATRANSF
                      Endif
                      [F:ZSE]ZSDHNUM="Art non reloc"
                      [F:ZSE]ZSDDLIN=1000
                    Endif
                    #--------------------------------------------------------------------------------------
                    Local Integer WSTAT
                    Local Char WSEQ(15)
                    Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
                    If WSTAT=0
                      [F:ZSE]ZSEQ = WSEQ
                    Endif
                    #On ecrit la ligne que si [F:ZSE]ZQTY<>0
                    If([F:ZSE]ZQTY)Then
                      #On ne sauvegarde l'enregistrement que s'il n'existe pas pour cet article de tri, un article de prestation
                      #de type rachat pour ce type de palette.
                      #Dans ce cas, on ne doit pas alimenter le stock
                      #<---------------Modification JBS du 21/02/2017 pour prendre en compte le paramétrage client chargeur ------
                      If clalev([F:ZIE4])<>0 : Close File [F:ZIE4] : Endif
                      If(WPARAMSPE=0)Then
                        If clalev([F:ZIE4])=0 : Local File ZEPALIS [F:ZIE4] : Endif
                      Else
                        If clalev([F:ZIE4])=0 : Local File ZEPALIS3 [F:ZIE4] : Endif
                      Endif
                      #------------------------------------------------------------------------------------------------------->
                      Local Integer WRACHAT : WRACHAT = 0
                      For [F:ZIE4]ZIE2 Where [F:ZIE4]CODE_CHARGEU=WBPCORD and [F:ZIE4]ART_TRI=[F:SOQ2]ITMREF and [F:ZIE4]TYPE_PREST=5 and [F:ZIE4]TYPE_PAL=[F:ZIE3]TYPE_PAL
& and (instr(1,";"+[F:ZIE4]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0 or ([F:ZIE4]ZSITE="" and instr(1,";"+[F:ZIE4]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0))
& and (instr(1,";"+[F:ZIE4]ZPAYS+";",";"+WPAYS+";")>0 or ([F:ZIE4]ZPAYS="" and instr(1,";"+[F:ZIE4]ZOTHERPAYS+";",";"+WPAYS+";")=0))
& and evalue(WFILTRESUPP)
                        WRACHAT = 1
                      Next
                      #On va enregistrer les modifications uniquement si
                      #soit l'art de prest n'est pas soumis au test trsp ou s'il l'est, il faut que letransport soit interne
                      #[F:ZIE3]TSTTRSP<>2 ou ([F:ZIE3]TSTTRSP=2 et [F:SOH2]ZTYPTRSP=2)
                      If([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=2))Then
                        If(WRACHAT=0)Then
                          Write [F:ZSE]
                          Local Char WCOMPT(30) : WCOMPT = ""
                          Call SET_HISTO_STOCK(WSEQ,WCOMPT,"C") From ZWSEPALISB
                        Endif
                        Call ECR_TRACE("      --> Alimentation de la table d'historisation des quantités ajoutées à la précommande",0) From GESECRAN
                      Endif
                    Endif
                  Endif
                Next
              Endif
            Next
          Endif
        Endif
        #----------------------------------------------------------------------------------------------------------
        #----------------------------------------------------------------------------------------------------------
      Endif
    Else
      If(ZARTTRIOK=1)Then
        Call ECR_TRACE("Pas de création de livraison EPALIS car aucun article de type PRESTATION",0) From GESECRAN
      Else
        #Il n'y a rien a traiter
        RESULT = 0
        INFO = "[12] - Rien a traiter aucun article de tri ou pas d'article de type prestation dans cette commande."
      Endif
    Endif
    #-----------------------------------------------RACHAT DE PALETTES---------------------------------------------------------
    #On va maintenant regarder s'il y a des articles à racheter.
    #On le sait si la variable ZNBARTACH est supérieure à 0
    If(ZNBARTACH>0)Then
      #On va récupérer les informations de la commande de vente
      Read[F:SOH2]SOH0=NUMCDE
      If(fstat=0)Then
        #Avant toute chose, on va regarder si le client est bien fournisseur chez EPALIA
        If(WCODFOURNRACHAT<>"")Then
          Read[F:BPS]BPS0=WCODFOURNRACHAT
        Else
          Read[F:BPS]BPS0=[F:SOH2]BPCORD
        Endif
        If(fstat=0)Then
          #Ecrire de l'entête de réception
          Local Char WFICHIER(250)
          WFICHIER = ZNOMFIC + "ZREC_CEPI_" + NUMCDE + "_" + [F:SOH2]BPCORD + ".TXT"
          Call ECR_TRACE("Création du fichier d'import réception pour le fournisseur " + [F:SOH2]BPCORD,0) From GESECRAN
          # Création du fichier
          Onerrgo PBCREATFICTXT
          Openo WFICHIER,0
          Onerrgo
          If WERR>0
            Case WERR
              When 20
                RESULT = 0
                INFO = "[7] - Répertoire inexistant. Arrêt du traitement."
                Rollback
              When 27
                RESULT = 0
                INFO = "[8] - Accès impossible (permission refusée) au répertoire. Arrêt du traitement."
                Rollback
              When 44
                RESULT = 0
                INFO = "[9] - Problème de place disque sur le répertoire. Arrêt du traitement."
                Rollback
              When Default
                RESULT = 0
                INFO = "[10] - Problème système rencontré lors de la création du fichier ("+errmes$(WERR)+"). Arrêt du traitement."
                Rollback
            Endcase
            Gosub CLOSE_LECFIC
            End
          Endif
          adxirs = chr$(13)+chr$(10)
          adxifs = ";"
          #Ex d'entête : E;69;;20151023;010235;F03;00001
          #Mise en place du compteur qui va nous permettre de savoir si la réception a bien été importé
          #-----------------------------MODIFICATION JBS DU 13/10/2017--------------------------------
          #Local Char WCOMPTREC(30) : WCOMPTREC = format$("D:YYYYMMDDhhmmsssss",date$)
          Local Char WCOMPTREC(30) : WCOMPTREC = func SPE_GET_COMPTEUR()
          #-------------------------------------------------------------------------------------------
          #Modification de la date du bon de réception JBS le 04/10/2016.
          #Par défaut Sage X3 ne tolère pas l'ajout dun bon à une date > à la date du jour
          #Il va donc falloir regarder si [F:SOH2]ZDATTRI n'est pas supérieure à la date du jour
          #si c'est le cas, il faut mettre la date du jour
          Local Date ZWDATEREC : ZWDATEREC = [F:SOH2]ZDATTRI
          If(ZWDATEREC>date$)Then
            ZWDATEREC = date$
          Endif
          #dans le cas d'un chargeur géré avec modèle de tri, il faut récupérer l'axe métier rachat qu'il faudra mettre dans la réception
          #ATTENTION le modèle d'import pour les réceptions est : ZEPIPTH
          #Il faudra faire apparaitre les axes analytiques
          #------Modification JBS du 14/12/2016 / Rachat avec modèle de tri-----
          #On va regarder si le chargeur est géré avec modèle de tri
          Local Char WBPAADD(10) : WBPAADD = [F:SOH2]BPAADD
          Local Char WBPCORD(20) : WBPCORD = [F:SOH2]BPCORD
          Local Char WREFERENCE(40) : WREFERENCE = [F:SOH2]CUSORDREF
          Local Integer WNBPALETOT : WNBPALETOT = 0
          WAXEANAACH = [F:SOH2]CCE(0)
          If([F:BPC]ZGESTMODTRI=2)Then
            #Si la case à cocher [F:BPC]ZAXEANAFCY n'est pas cochée alors on prend le champ [F:BPC]ZAXEANAEPIA
            #sinon, on prend le champ [F:FCY2]CCE(0)
            WAXEANAACH = [F:BPC]ZAXEANAEPIA
            If([F:BPC]ZAXEANAFCY=2)Then
              If clalev([F:FCY2])=0 : Local File FACILITY [FCY2] : Endif
              Read[F:FCY2]FCY0=[F:SOH2]SALFCY
              If(fstat=0)Then
                WAXEANAACH = [FCY2]CCE(0)
              Endif
            Endif
            WREFERENCE = [F:SOH2]CUSORDREF
            #On calcule la quantité totale de palettes du modèle de tri
            If clalev([F:ZMT])=0 : Local File ZMODTRIEPI [ZMT] : Endif
            For[F:ZMT]ZMT0 Where [F:ZMT]SOHNUM=[F:SOH2]SOHNUM
              WNBPALETOT += [F:ZMT]ZQTY
            Next
            #Si le chargeur est géré avec modèle de tri, il faut que l'adresse du bon de réception
            #soit celle de la fiche du client chargeur champ [F:ZAI]ZTRIADR
            If clalev([F:ZAI])=0 : Local File ZADREPI [F:ZAI] : Endif
            If([F:SOH2]ZCODCLT<>"")Then
              Read[F:ZAI]ZAI0=[F:SOH2]BPCORD;[F:SOH2]ZCODCLT
              If(fstat=0)Then
                WBPAADD = [F:ZAI]ZTRIADR
                WBPCORD = [F:ZAI]ZTRIFR
              Endif
            Endif
          Endif
          #---------------------------------------------------------------------
#          Wrseq "E",[F:SOH2]STOFCY,"",[F:SOH2]ZDATTRI,[F:SOH2]BPCORD,[F:SOH2]BPAADD,"00001",WCOMPTREC,NUMCDE
#          Wrseq "E",[F:SOH2]STOFCY,"",ZWDATEREC,[F:SOH2]BPCORD,[F:SOH2]BPAADD,"00001",WCOMPTREC,NUMCDE
          #--------------Modification JBS du 13/07/2017-------------------------
          If(WCODFOURNRACHAT<>"")Then
            WBPCORD = WCODFOURNRACHAT
            WBPAADD = WCODADRFOURNRACHAT
          Endif
          #---------------------------------------------------------------------
          #<-------------Modification JBS du 13/07/2017-------------------------
          #Wrseq "E",[F:SOH2]STOFCY,"",ZWDATEREC,WBPCORD,WBPAADD,"00001",WCOMPTREC,WREFERENCE,WNBPALETOT
          Wrseq "E",[F:SOH2]STOFCY,"",ZWDATEREC,WBPCORD,WBPAADD,"00001",WCOMPTREC,WREFERENCE,WNBPALETOT,1,NUMCDE
          #-------------------------------------------------------------------->

          #TODO Dans le cas d'un chargeur géré avec modèle de tri, il faut transférer dans le bon de réception les lignes du modèle de tri
          #se trouvant dans la collecte

          #Nous allons récupérer l'axe métier pour le rachat au niveau de la fiche EPALIS du client
          #--------------Modification JBS du 18/09/2017-------------------------
          #si WBPCORD=[F:SOH2]BPCORD alors le bon de réception est attaché au chargeur
          #dans ce cas, l'axe métier achat est à prendre dans la fiche client du chargeur, champ ZAXEMETEPIA
          #par contre si WBPCORD<>[F:SOH2]BPCORD alors le bon de réception est attaché à un autre fournisseur
          #dans ce cas, il faut récupérer les champ ZAXEMETST de la fiche fournisseur de WBPCORD
          Local Char WZAXEMETEPIA(5) : WZAXEMETEPIA = "P"
          If(WBPCORD=[F:SOH2]BPCORD)Then
            Read[F:BPC]BPC0=[F:SOH2]BPCORD
            If(fstat=0)Then
              WZAXEMETEPIA = [F:BPC]ZAXEMETEPIA
            Endif
          Else
            If clalev([F:BPS2])=0 : Local File BPSUPPLIER [F:BPS2] : Endif
            Read[F:BPS2]BPS0=WBPCORD
            If(fstat=0)Then
              WZAXEMETEPIA = [F:BPS2]ZAXEMETST
            Endif
          Endif
          #---------------------------------------------------------------------
          If([F:BPC]ZGESTMODTRI<>2)Then
            #On est dans le cas où le chargeur n'est pas géré avec modèle de tri
            #On va maintenant parcourir notre tableau
            Local Integer WCPTACH : WCPTACH = 0
            For WCPTACH=0 To ZNBARTACH-1
              #Nous allons écrire dans le fichier uniquement si la quantité est >0
              If(ZTQTEACH(WCPTACH)>0)Then
                #Ecriture d'une ligne de réception
                #Ex de ligne : L;01DL100120E;2;4;0.7;T810;P
  #              Wrseq "L",ZTARTACH(WCPTACH),ZTTPACH(WCPTACH),ZTQTEACH(WCPTACH),ZTPRIACH(WCPTACH),[F:SOH2]CCE(0),WZAXEMETEPIA
                Wrseq "L",ZTARTACH(WCPTACH),ZTTPACH(WCPTACH),ZTQTEACH(WCPTACH),ZTPRIACH(WCPTACH),WAXEANAACH,WZAXEMETEPIA
              Endif
            Next
          Else
            #On est dans le cas où le chargeur est géré avec modèle de tri
            #Dans ce cas, on va récupérer les lignes de la table ZMODTRIEPI (ZMT)
            If clalev([F:ZMT])=0 : Local File ZMODTRIEPI [ZMT] : Endif
            For [F:ZMT]ZMT0 Where [F:ZMT]SOHNUM=[F:SOH2]SOHNUM
              #Nous allons écrire dans le fichier uniquement si la quantité est >0
              If([F:ZMT]ZQTY>0)Then
                #Ecriture d'une ligne de réception
                Wrseq "L",[F:ZMT]ZITMREF,[F:ZMT]ZTYPPAL,[F:ZMT]ZQTY,[F:ZMT]ZPRIXACHAT,WAXEANAACH,WZAXEMETEPIA
              Endif
            Next
          Endif
          # Fermeture du fichier
          Openo
          Local Char WSAVGFLAG(30) : WSAVGFLAG = GFLAG
          #Nous allons importer le fichier pour la création d'une réception uniquement si le champ
          #ZRECEPI est vide
          Read[F:SOH2]SOH0=NUMCDE
          If(fstat=0)Then
            If([F:SOH2]ZRECEPI="")Then
              # Import du fichier
              Gosub OUVRE From GIMPOBJ
              [M:IMP2]MODIMP="ZEPIPTH"
              [M:IMP2]TYPEXP=2
              [M:IMP2]NOMIMP=WFICHIER
              GSERVEUR=1
              Gosub EXEC From GIMPOBJ
              GSERVEUR=0
              # On va maintenant rechercher la réception pour savoir si tout c'est bien passé
              If clalev([F:PTH2])=0 : Local File PRECEIPT [F:PTH2] : Endif
              Filter [F:PTH2] Where [F:PTH2]ZNUMEPI=WCOMPTREC
              Read [F:PTH2]PTH0 First
              If fstat
                #        Call ERREUR("[13] - Erreur de création de la réception depuis la commande.") From GESECRAN
                INFO = "[13] - Erreur de création de la réception depuis la commande."
                RESULT = 0
                Call ECR_TRACE("[13] - Erreur de création de la réception depuis la commande.",1) From GESECRAN
                Rollback
                Gosub CLOSE_LECFIC
                End
              Else
                #        Call MESSAGE("Réception numéro "+[F:PTH2]PTHNUM+" correctement créé.") From GESECRAN
                INFO = "Réception numéro "+[F:PTH2]PTHNUM+" correctement créé."
                Call ECR_TRACE("La réception " + [F:PTH2]PTHNUM + " a été correctement crée.",0) From GESECRAN
                #La réception a correctement été créée, on va donc renseigner le n° dans la commande (collecte) EPALIS
                Read[F:SOH2]SOH0=NUMCDE
                If(fstat=0)Then
                  [F:SOH2]ZRECEPI = [F:PTH2]PTHNUM
                  Rewrite [F:SOH2]
                Endif
              Endif
              Filter [F:PTH2]
            Else
                Call ECR_TRACE("Pas de création de réception car la collecte est déjà liée à une réception.",0) From GESECRAN
            Endif
          Endif
          GFLAG = WSAVGFLAG
        Else
          #Impossible de lire la fiche du fourniseur ou le client n'est pas fournisseur
          RESULT = 0
          If(WCODFOURNRACHAT<>"")Then
            Call ECR_TRACE("Rachat de palettes : Impossible de récupérer les informations du fournisseur " + WCODFOURNRACHAT,1) From GESECRAN
          Else
            Call ECR_TRACE("Rachat de palettes : Impossible de récupérer les informations du fournisseur " + [F:SOH]BPCORD,1) From GESECRAN
          Endif
          Rollback
          Gosub CLOSE_LECFIC
          End
        Endif
      Else
        #Impossible de lire la commande
        RESULT = 0
        Call ECR_TRACE("Rachat de palettes : Impossible de récupérer les informations de la commande " + NUMCDE,1) From GESECRAN
        Rollback
        Gosub CLOSE_LECFIC
        End
      Endif
    Endif
    #--------------------------------------------------------------------------------------------------------------------------
    #On va maintenant Alimenter une précommande de vente ouverte avec les articles prestations
    #de type relocalisation
    Local Integer WPREST : WPREST = 0
    Local Char WBPCORD(30)
    Local Char WSITE(30)
    Read [F:SOH2]SOH0=NUMCDE
    If(fstat=0)Then
      WBPCORD = [F:SOH2]BPCORD
      WSITE = [F:SOH2]SALFCY
    Endif
    For [F:SOP2]SOP0 Where [F:SOP2]SOHNUM=NUMCDE
      If([F:SOP2]ZTYPART=3)Then
        #L'article est de type Tri
        For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=WBPCORD and [F:ZIE3]ART_TRI=[F:SOP2]ITMREF and [F:ZIE3]TYPE_PREST<>1 and [F:ZIE3]TYPE_PREST<>5
& and evalue(WFILTRESUPP)
          WPREST = 1
        Next
      Endif
    Next
    If(WPREST=1)Then
      Call ECR_TRACE("La commande EPALIS contient des articles prestation dont le type est différent de prestation ou achat",0) From GESECRAN
      If clalev([F:BPC])=0 : Local File BPCUSTOMER [BPC]: Endif
      If clalev([F:BPR])=0 : Local File BPARTNER [BPR]  : Endif
      If clalev([F:BPD])=0 : Local File BPDLVCUST [BPD] : Endif
      If clalev([F:TCU])=0 : Local File TABCUR [TCU]    : Endif
      If clalev([F:FCY])=0 : Local File FACILITY [FCY]  : Endif
      If clalev([F:ZPD])=0 : Local File ZPSORDERD [ZPD] : Endif
      If clalev([F:ITM])=0 : Local File ITMMASTER [ITM] : Endif
      If clalev([F:ZSE])=0 : Local File ZPSEPALIS [ZSE] : Endif
      #On est dans le cas ou on a des articles de prestation de type relocalisation
      #On va maintenant regarder s'il existe déjà une précommande de vente pour ce client
      #ce site et de type EPALIS et que cette precommande est ouverte
      Local Integer WPCENTETE : WPCENTETE = 0
      Local Integer WENTETEOK : WENTETEOK = 0
      Local Char WYPSNUM(15)
      If clalev([F:ZPS])=0 : Local File ZPSORDER [F:ZPS] : Endif
      For [F:ZPS]ZPS0 Where [F:ZPS]BPCORD=WBPCORD and [F:ZPS]STOFCY=WSITE and [F:ZPS]ZFLGEPALIS=2 and [F:ZPS]ZPSDAT<=date$ and [F:ZPS]ZDATVAL=[0/0/0] and [F:ZPS]ZFLGSOLDE<>2 and [F:ZPS]ZFLGSOLMAN<>2
        WPCENTETE = 1
        WYPSNUM = [F:ZPS]ZPSNUM
        Call ECR_TRACE("Une précommande ouverte pour le chargeur " + WBPCORD + " existe déja (" + WYPSNUM + ")",0) From GESECRAN
      Next
      If(WPCENTETE=0)Then
        #Création de l'entête de la précommande
        Call ECR_TRACE("Aucune précommande ouverte n'existe pour ce chargeur",0) From GESECRAN
        Local Integer WSTAT
        Call NUMERO("ZEPP",WSITE,date$,"",WYPSNUM,WSTAT) From SUBANM
        If GOK<0 : Return : Endif
        If WSTAT=0
          Raz [F:ZPS]
          [F:ZPS]ZPSNUM = WYPSNUM
          Read [F:BPC]BPC0=WBPCORD
          If fstat=0
            [F:ZPS]BPCORD = WBPCORD
            [F:ZPS]BPCNAM = [F:BPC]BPCNAM
            [F:ZPS]BPCINV = [F:BPC]BPCINV
            [F:ZPS]BPCPYR = [F:BPC]BPCPYR
            [F:ZPS]CHGTYP = [F:BPC]CHGTYP
            [F:ZPS]VACBPR = [F:BPC]VACBPR
            [F:ZPS]PTE    = [F:BPC]PTE
          Endif
          # Récup infos depuis BPDLVCUST
          Filter [F:BPD] Where [F:BPD]BPCNUM=WBPCORD
          Read [F:BPD]BPD0 First
          If fstat=0
            [F:ZPS]BPAADD = [F:BPD]BPAADD
            [F:ZPS]BPTNUM = [F:BPD]BPTNUM
            [F:ZPS]MDL    = [F:BPD]MDL
          Endif
          Filter [F:BPD]
          # Récup infos depuis BPARTNER
          Read [F:BPR]BPR0=WBPCORD
          If fstat=0
            [F:ZPS]CUR = [F:BPR]CUR
            # On se place dans TABCUR pour le calcul du prix total ligne
            Read [F:TCU]TCU0=[F:BPR]CUR
            If fstat
                Raz [F:TCU]
            Endif
            [F:ZPS]LAN = [F:BPR]LAN
          Endif
          [F:ZPS]ZCUSORDREF = ""
          [F:ZPS]ZPSDAT = date$
          [F:ZPS]DEMDLVDAT = date$
          [F:ZPS]CREUSR = GUSER
          [F:ZPS]CREDAT = date$
          [F:ZPS]UPDUSR = GUSER
          [F:ZPS]UPDDAT = date$
          [F:ZPS]STOFCY = WSITE
          Read [F:FCY]FCY0=WSITE
          If fstat=0
            [F:ZPS]ZFCYAREA = [F:FCY]ZFCYAREA
          Endif
          [F:ZPS]ZPCNAT = 1
          [F:ZPS]ZFLGSOLDE = 1
          [F:ZPS]ZFLGVALIDE = 1
          [F:ZPS]ZFLGSOLMAN = 1
          [F:ZPS]ZFLGEPALIS = 2
          Read [F:SOH2]SOH0=NUMCDE
          If(fstat=0)Then
            [F:ZPS]ZAXE1=[F:SOH2]CCE(0)
            [F:ZPS]ZAXE2=[F:SOH2]CCE(1)
          Endif
          Write [F:ZPS]
          If(fstat=0)Then
            WENTETEOK = 1
            Call ECR_TRACE("Une précommande ouverte vient d'être créée pour ce chargeur (" + WYPSNUM + ")",0) From GESECRAN
          Endif
        Else
          GERR=1
          GMESSAGE=mess(60,199,1)
          GOK=0
          Return
        Endif
      Endif
      #On va maintenant créer les lignes de la précommande
      If(WPCENTETE=1 or WENTETEOK=1)Then
        #On dispose de la variable WYPSNUM contenant le N° de la précommande
        #On va récupérer le dernier N° de ligne de la précommande
        Local Integer WNUMLIG : WNUMLIG = 0
        For [F:ZPD]ZPD0 Where [F:ZPD]ZPSNUM=WYPSNUM
          If([F:ZPD]ZPDLIN>WNUMLIG)Then
            WNUMLIG = [F:ZPD]ZPDLIN
          Endif
        Next
        WNUMLIG = WNUMLIG + 1000
        Call ECR_TRACE("Alimentation des lignes de la précommande",0) From GESECRAN
        #On va parcourir maintenant les lignes de la commandes
        For [F:SOQ2]SOQ0 Where [F:SOQ2]SOHNUM=NUMCDE
          #On va lire l'enregistrement de la table SORDERP
          Read [F:SOP2]SOP0=NUMCDE;[F:SOQ2]SOPLIN;[F:SOQ2]SOQSEQ
          If([F:SOP2]ZTYPART=3)Then
            #L'article est de type Tri
            #On regarde si l'article de type tri a des articles de prestation dont le type est différent de prestation (Relocalisation ou transformation)
            For [F:ZIE3]ZIE2 Where [F:ZIE3]CODE_CHARGEU=WBPCORD and [F:ZIE3]ART_TRI=[F:SOQ2]ITMREF and [F:ZIE3]TYPE_PREST<>1
& and evalue(WFILTRESUPP)

              If(([F:ZIE3]ZTYPARTEPI=2) or [F:ZIE3]ZTYPARTEPI=3 or ([F:ZIE3]ZTYPARTEPI=1 and ([F:ZIE3]TSTTRSP<>2 or ([F:ZIE3]TSTTRSP=2 and [F:SOH2]ZTYPTRSP=2))))Then
                If(([F:ZIE3]ZCODCLTCHARG="" or instr(1,";"+[F:ZIE3]ZCODCLTCHARG+";",";"+[F:SOH2]ZCODCLT+";"))
& and (([F:ZIE3]ZSITE="" and instr(1,";"+[F:ZIE3]ZOTHERSITE+";",";"+[F:SOH2]SALFCY+";")=0) or instr(1,";"+[F:ZIE3]ZSITE+";",";"+[F:SOH2]SALFCY+";")>0)
& and (([F:ZIE3]ZPAYS="" and instr(1,";"+[F:ZIE3]ZOTHERPAYS+";",";"+WPAYS+";")=0) or instr(1,";"+[F:ZIE3]ZPAYS+";",";"+WPAYS+";")>0)
&)Then
                  WPREST = 1
    #              Read [F:ZPD]ZPD1=WYPSNUM;[F:ZIE3]ART_PREST;[F:ZIE3]ZARNUM
                  Read [F:ZPD]ZPD2=WYPSNUM;[F:ZIE3]ART_PREST
                  If(fstat=0)Then
                    #La ligne existe, on va donc mettre à jour la quantité
                    Local Decimal WQTE : WQTE = 0
                    If([F:ZIE3]TYPE_PAL=1)Then
                      WQTE = [F:SOQ2]ZQTYOK
                      [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
                    # MODIFICATION du 13/07/2015 Pour les articles de type Destruction, on cumul les OK, les KC et les HS
                    Elsif([F:ZIE3]TYPE_PAL=2 and [F:ZIE3]TYPE_PREST=4)Then
                      WQTE = [F:SOQ2]ZQTYAREP
                      [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
                    Elsif([F:ZIE3]TYPE_PAL=3 and [F:ZIE3]TYPE_PREST=4)Then
                      WQTE = [F:SOQ2]ZQTYHS
                      [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
                    Endif
                    #-------------------------------------------------------------------------------------------------
                    #On ne met à jour la qté que pour les article dont le type est différent de Transformation
                    If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                      [F:ZPD]QTY = [F:ZPD]QTY + WQTE
                    Endif
                    [F:ZPD]GROPRI = 0
                    [F:ZPD]NETPRI = 0
                    [F:ZPD]AMTNOTLIN = 0
    #                [F:ZPD]ZARNUM = [F:ZIE3]ZARNUM
                    Rewrite [F:ZPD]
                    If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                      Call ECR_TRACE("Une ligne pour l'article " + [F:ZIE3]ART_PREST + " existe déjà. Ajout de la quantité : " + num$(WQTE),0) From GESECRAN
                    Else
                      Call ECR_TRACE("Une ligne pour l'article " + [F:ZIE3]ART_PREST + " existe déjà. L'article est de type transformation, on n'ajoute pas de quantité.",0) From GESECRAN
                    Endif
                  Else
                    #La ligne n'existe pas, on va la crééer
                    Raz [F:ZPD]
                    [F:ZPD]ZPSNUM = WYPSNUM
                    [F:ZPD]ZPDLIN = WNUMLIG
                    WNUMLIG = WNUMLIG + 1000
                    [F:ZPD]ITMREF = [F:ZIE3]ART_PREST
                    Read [F:ITM]ITM0=[F:ZIE3]ART_PREST
                    If(fstat=0)Then
                      [F:ZPD]ITMDES1 = [F:ITM]ITMDES1
                      [F:ZPD]VACITM = [F:ITM]VACITM
                      [F:ZPD]SAU = [F:ITM]SAU
                    Endif
                    Local Decimal WQTE : WQTE = 0
                    If([F:ZIE3]TYPE_PAL=1)Then
                      WQTE = [F:SOQ2]ZQTYOK
                      [F:ZPD]QTYOK = WQTE
                    # MODIFICATION du 13/07/2015 Pour les articles de type Destruction, on cumul les OK, les KC et les HS
                    Elsif([F:ZIE3]TYPE_PAL=2 and [F:ZIE3]TYPE_PREST=4)Then
                      WQTE = [F:SOQ2]ZQTYAREP
                      [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
                    Elsif([F:ZIE3]TYPE_PAL=3 and [F:ZIE3]TYPE_PREST=4)Then
                      WQTE = [F:SOQ2]ZQTYHS
                      [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
                    #-------------------------------------------------------------------------------------------------
                    Endif
                    #On ne met à jour la qté que pour les articles dont le type est différent de Transformation
                    If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                      [F:ZPD]QTY = WQTE
                    Else
                      [F:ZPD]QTY = 0
                    Endif
                    [F:ZPD]QTYCDE = 0
                    [F:ZPD]GROPRI = 0
                    [F:ZPD]NETPRI = 0
                    [F:ZPD]AMTNOTLIN = 0
    #                [F:ZPD]ZARNUM = [F:ZIE3]ZARNUM
                    Write [F:ZPD]
                    If([F:ZIE3]TYPE_PREST<>3 and [F:ZIE3]TYPE_PREST<>6)Then
                      Call ECR_TRACE("Création d'une ligne pour l'article " + [F:ZIE3]ART_PREST + " avec une quantité de : " + num$(WQTE),0) From GESECRAN
                    Else
                      Call ECR_TRACE("Création d'une ligne pour l'article " + [F:ZIE3]ART_PREST + " avec une quantité de 0 car c'est un article de type Transformation.",0) From GESECRAN
                    Endif
                  Endif
                  #On va maintenant alimenter la table ZPSEPALIS pour le tableau des commandes EPALIS dans la précommande de vente
                  Raz [F:ZSE]
                  [F:ZSE]ZDATE = [F:SOH2]ZDATTRI
                  [F:ZSE]ZSOHNUM = [F:SOQ2]SOHNUM
                  [F:ZSE]ZNUMLIG = [F:SOQ2]SOPLIN
                  If([F:ZIE3]TYPE_PAL=1)Then
                    [F:ZSE]ZQTY = [F:SOQ2]ZQTYOK
                  Elsif([F:ZIE3]TYPE_PAL=2)Then
                    [F:ZSE]ZQTY = [F:SOQ2]ZQTYAREP
                  Elsif([F:ZIE3]TYPE_PAL=3)Then
                    [F:ZSE]ZQTY = [F:SOQ2]ZQTYHS
                  Endif
                  [F:ZSE]ZTYPPAL = [F:ZIE3]TYPE_PAL
                  [F:ZSE]ZARTTRI = [F:ZIE3]ART_TRI
                  [F:ZSE]ZARTPREST = [F:ZIE3]ART_PREST
                  [F:ZSE]ZPSNUM = WYPSNUM
                  [F:ZSE]ZPSLIG = [F:ZPD]ZPDLIN
                  [F:ZSE]ZART = [F:ZIE3]ZART
                  If(([F:ZIE3]ART_TRI<>[F:ZIE3]ZART)and([F:ZIE3]TYPE_PREST=3 or [F:ZIE3]TYPE_PREST=6))Then
                    #On est dans le cas ou c'est une prestation de transformation
                    If([F:ZIE3]TYPE_PAL=1)Then
                      [F:ZSE]ZQTEATRANSF = [F:SOQ2]ZQTYOK
                    Elsif([F:ZIE3]TYPE_PAL=2)Then
                      [F:ZSE]ZQTEATRANSF = [F:SOQ2]ZQTYAREP
                    Endif
                  Else
                    If([F:ZIE3]TYPE_PAL=1)Then
                      [F:ZSE]ZQTEOK = [F:SOQ2]ZQTYOK
                    Elsif([F:ZIE3]TYPE_PAL=2)Then
                      If([F:ZIE3]TYPE_PREST<>4)Then
                        [F:ZSE]ZQTEKC = [F:SOQ2]ZQTYAREP
                      Else
                        #Dans le cas d'une destruction, on cumul les KC avec les bonnes
                        [F:ZSE]ZQTEOK += [F:SOQ2]ZQTYAREP
                      Endif
                    Elsif([F:ZIE3]TYPE_PAL=3 and [F:ZIE3]TYPE_PREST=4)Then
                      [F:ZSE]ZQTEOK += [F:SOQ2]ZQTYHS
                    Endif
                  Endif
                  [F:ZSE]ZDATEACT = date$
                  [F:ZSE]ZSAVDATACT = date$
                  [F:ZSE]ZFACTRELOC = 2
                  [F:ZSE]ZTYPPREST = [F:ZIE3]TYPE_PREST
                  #-----------Le 31/07/2017 - Dans le cas d'un achat direct, on met ZFACRELOC à 1--------
                  If([F:ZSE]ZTYPPREST=5)Then
                    [F:ZSE]ZFACTRELOC = 1
                  Endif
                  #--------------------------------------------------------------------------------------
                  #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
                  [F:ZSE]ZSITECOLL = [F:SOH2]SALFCY
                  #--------------------------------------------------------------------------------------
                  #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
                  [F:ZSE]ZPAYSCOLL = WPAYS
                  #--------------------------------------------------------------------------------------
                  #---Le 20/02/2017 - Ajout suite à la mise en place du champ ZNONSTOCK dans ZARTTRI ----
                  #A ce stade si [F:ZIE3]TYPE_PAL=1 (Bonne) et [F:ZIE3]TYPE_PREST=1 (collecte - directe) et [F:ZIE3]ZARTSTOCKE=1 (non)
                  #Le 21/03/2017 on ne fait pas cela que pour les bonnes
                  #TODO
                  If([F:ZIE3]TYPE_PREST=1 and [F:ZIE3]ZARTSTOCKE=1)Then
                    If([F:ZIE3]TYPE_PAL=1) Then
                      [F:ZSE]ZQTYLIV=[F:ZSE]ZQTEOK
                    Elsif([F:ZIE3]TYPE_PAL=2) Then
                      [F:ZSE]ZQTYLIV=[F:ZSE]ZQTEKC
                    Else
                      [F:ZSE]ZQTYLIV=[F:ZSE]ZQTEATRANSF
                    Endif
                    [F:ZSE]ZSDHNUM="Art non reloc"
                    [F:ZSE]ZSDDLIN=1000
                  Endif
                  #--------------------------------------------------------------------------------------
                  Local Integer WSTAT
                  Local Char WSEQ(15)
                  Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
                  If WSTAT=0
                    [F:ZSE]ZSEQ = WSEQ
                  Endif
                  #On ecrit la ligne que si [F:ZSE]ZQTY<>0
                  If([F:ZSE]ZQTY)Then
                    Write [F:ZSE]
                    Local Char WCOMPT(30) : WCOMPT = ""
                    Call SET_HISTO_STOCK(WSEQ,WCOMPT,"C") From ZWSEPALISB
                    Call ECR_TRACE("      --> Alimentation de la table d'historisation des quantités ajoutées à la précommande",0) From GESECRAN
                  Endif
                Endif

              Endif

            Next
          Endif
        Next
      Endif
    Endif

    #On va maintenant solder la commande
    Local Integer WNBLIG : WNBLIG = 0
    For [F:SOP2]SOP0 Where [F:SOP2]SOHNUM=NUMCDE
      [F:SOP2]SOQSTA = 3
      [F:SOP2]UPDDAT = date$
      [F:SOP2]UPDUSR = GUSER
      WNBLIG = WNBLIG + 1
      Rewrite [F:SOP2]
    Next
    For [F:SOQ2]SOQ0 Where [F:SOQ2]SOHNUM=NUMCDE
      [F:SOQ2]SOQSTA = 3
      [F:SOQ2]UPDDAT = date$
      [F:SOQ2]UPDUSR = GUSER
      [F:SOQ2]CCLDAT = date$
      Rewrite [F:SOQ2]
    Next
    Call ECR_TRACE("On solde les lignes de la commande EPALIS (" + NUMCDE + ")",0) From GESECRAN
    [F:SOH2]ORDSTA = 2
    [F:SOH2]UPDDAT = date$
    [F:SOH2]UPDUSR = GUSER
    [F:SOH2]DLRNOT = 0
    [F:SOH2]DLRATI = 0
    [F:SOH2]CLELINNBR = WNBLIG
    [F:SOH2]CCLDAT = date$
    If(ZIND=1)Then
      [F:SOH2]ZSDHEPI = [F:SDH2]SDHNUM
    Endif
    Rewrite [F:SOH2]
    Call ECR_TRACE("On solde la commande EPALIS (" + NUMCDE + ")",0) From GESECRAN
  Else
    RESULT = 0
    INFO = "[11] - Impossible de lire l'entëte de la commande"
    Rollback
    Gosub CLOSE_LECFIC
    End
  Endif
  Commit
If !GSERVEUR :Call FERME_TRACE From LECFIC : Endif
TRA=1
  If(GWEBSERV=0)Then
    Call LEC_TRACE From LECFIC
  Endif
End

######################################################################### CLOSE_LECFIC
$CLOSE_LECFIC
If !GSERVEUR :Call FERME_TRACE From LECFIC : Endif
TRA=1
  If(GWEBSERV=0)Then
    Call LEC_TRACE From LECFIC
  Endif
Return

######################################################################### PBCREATFICTXT
$PBCREATFICTXT
WERR=errn
Resume

#**
#* Documentation de la fonction min
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>2 févr. 2015</td>
#* <tr><td valign="top"><b>Description de la fonction</b></td><td>
#* Permet de récupérer le tarif de la relocalisation en fonction du code de l'article du client, de l'adresse, du site et de la quantité
#* </td></table>
#* @public
#* @param WITMREF (<font color="#7F0055"><b>Char</b></font>) Code article
#* @param WBPCORD (<font color="#7F0055"><b>Char</b></font>) Code du client
#* @param WBPAADD (<font color="#7F0055"><b>Char</b></font>) Code de l'adresse
#* @param WFCY (<font color="#7F0055"><b>Char</b></font>) Code site expédition
#* @param WQTY (<font color="#7F0055"><b>Decimal</b></font>) Quantité
#* @return
#*Variable de retour : RESULT (<font color="#7F0055"><b>Decimal</b></font>)
#* <br>Explication        : Prix de la palette
#* @since <font color="green">Version 6.5</font>
#*!
Funprog GET_TARIF_RELOC(WITMREF,WBPCORD,WBPAADD,WFCY,WQTY,WSITECOLL,WPAYSCOLL,WTYPPAL,WARTTRI,WCODCLTCHG,WDATE)
  Value Char WITMREF
  Value Char WBPCORD
  Value Char WBPAADD
  Value Char WFCY
  Value Decimal WQTY
  Value Char WSITECOLL
  Value Char WPAYSCOLL
  Value Integer WTYPPAL
  Value Char WARTTRI
  Value Char WCODCLTCHG
  Value Date WDATE
  Local Decimal RESULT
  If clalev([F:ZPP])=0 : Local File ZPRIEPI [F:ZPP]  : Endif
  If clalev([F:ZPP2])=0 : Local File ZPRIEPI2 [F:ZPP2]: Endif
  If clalev([F:BPC2])=0 : Local File BPCUSTOMER [F:BPC2]: Endif
  If clalev([F:ZPP3])=0 : Local File ZPRIEPI3 [F:ZPP3]: Endif

#Dans cette fonction, 3 vues sont utilisées pour récupérer le prix
# - ZPRIEPI  [F:ZPP]  -> cette vue récupère le prix au niveau du dépôt chargeur
# - ZPRIEPI2 [F:ZPP2] -> Cette vue récupère le prix au niveau du paramétrage du chargeur, dans la ligne de l'article de prestation
# - ZPRIEPI3 [F:ZPP3] -> Cette vue récupère le prix au niveau du paramétrage du client chargeur, dans la ligne de l'article de prestation
#On doit prendre en compte les tarifs du modèle de prestation uniquement dans le cas où on utilise la vue ZPRIEPI2
#Dbgaff
  #On va commencer par regarder s'il existe un tarif le plus précis
#  For [F:ZPP]ZPP0 Where [F:ZPP]COD_CHARG=WBPCORD and [F:ZPP]COD_ADR=WBPAADD and [F:ZPP]COD_ART=WITMREF and [F:ZPP]COD_SITE=WFCY
  For [F:ZPP]ZPP0 Where [F:ZPP]COD_CHARG=WBPCORD and [F:ZPP]COD_ADR=WBPAADD and [F:ZPP]COD_ART=WITMREF and instr(1,";"+[F:ZPP]COD_SITE+";",";"+WFCY+";")>0
    If(WQTY>=[F:ZPP]QTY_MIN and WQTY<=[F:ZPP]QTY_MAX)Then
      RESULT = [F:ZPP]PRIX
    Endif
  Next
  If(RESULT=0)Then
    For [F:ZPP]ZPP0 Where [F:ZPP]COD_CHARG=WBPCORD and [F:ZPP]COD_ADR=WBPAADD and [F:ZPP]COD_ART=WITMREF and [F:ZPP]COD_SITE=""
      If(WQTY>=[F:ZPP]QTY_MIN and WQTY<=[F:ZPP]QTY_MAX)Then
        RESULT = [F:ZPP]PRIX
      Endif
    Next
    If(RESULT=0)Then
      For [F:ZPP]ZPP0 Where [F:ZPP]COD_CHARG=WBPCORD and [F:ZPP]COD_ADR="" and [F:ZPP]COD_ART=WITMREF and instr(1,";"+[F:ZPP]COD_SITE+";",";"+WFCY+";")>0
        If(WQTY>=[F:ZPP]QTY_MIN and WQTY<=[F:ZPP]QTY_MAX)Then
          RESULT = [F:ZPP]PRIX
        Endif
      Next
      #A ce niveau là, on considère qu'un prix attaché à un site sans adresse client est plus
      #prioritaire qu'un prix attaché à un code adresse sans site d'expé
      If(RESULT=0)Then
        For [F:ZPP]ZPP0 Where [F:ZPP]COD_CHARG=WBPCORD and [F:ZPP]COD_ADR="" and [F:ZPP]COD_ART=WITMREF and [F:ZPP]COD_SITE=""
          If(WQTY>=[F:ZPP]QTY_MIN and WQTY<=[F:ZPP]QTY_MAX)Then
            RESULT = [F:ZPP]PRIX
          Endif
        Next
        If(RESULT=0)Then
          For [F:ZPP]ZPP0 Where [F:ZPP]COD_CHARG="" and [F:ZPP]COD_ADR="" and [F:ZPP]COD_ART=WITMREF and [F:ZPP]COD_SITE=""
            If(WQTY>=[F:ZPP]QTY_MIN and WQTY<=[F:ZPP]QTY_MAX)Then
              RESULT = [F:ZPP]PRIX
            Endif
          Next
          If(RESULT=0)Then
            For [F:ZPP3]ZPP30 Where [F:ZPP3]COD_CHARG=WBPCORD and [F:ZPP3]COD_ART=WITMREF and [F:ZPP3]CODE_CLTCHG=WCODCLTCHG and [F:ZPP3]ZCODCLTCHARG=WCODCLTCHG
& and (([F:ZPP3]ZSITE="" and instr(1,";"+[F:ZPP3]ZOTHERSITE+";",";"+WSITECOLL+";")=0) or instr(1,";"+[F:ZPP3]ZSITE+";",";"+WSITECOLL+";")>0)
& and [F:ZPP3]TYP_PAL=WTYPPAL and [F:ZPP3]COD_ART_TRI=WARTTRI
& and (([F:ZPP3]ZPAYS="" and instr(1,";"+[F:ZPP3]ZOTHERPAYS+";",";"+WPAYSCOLL+";")=0) or instr(1,";"+[F:ZPP3]ZPAYS+";",";"+WPAYSCOLL+";")>0)
              RESULT = [F:ZPP3]PRIX
            Next
            If(RESULT=0)Then

              #A ce stade nous n'avons pas trouvé de tarif spécifique pour ce client chargeur et pour le client facturé.
              #On va regarder si le client n'est pas rattaché à un chargeur différent et on va réinterroger le prix
              Read[F:BPC2]BPC0=WBPCORD
              If(fstat=0)Then
                If([F:BPC2]ZCLTRAT<>"")Then
                  For [F:ZPP3]ZPP30 Where [F:ZPP3]COD_CHARG=[F:BPC2]ZCLTRAT and [F:ZPP3]COD_ART=WITMREF and [F:ZPP3]CODE_CLTCHG=WCODCLTCHG and [F:ZPP3]ZCODCLTCHARG=WCODCLTCHG
& and (([F:ZPP3]ZSITE="" and instr(1,";"+[F:ZPP3]ZOTHERSITE+";",";"+WSITECOLL+";")=0) or instr(1,";"+[F:ZPP3]ZSITE+";",";"+WSITECOLL+";")>0)
& and [F:ZPP3]TYP_PAL=WTYPPAL and [F:ZPP3]COD_ART_TRI=WARTTRI
& and (([F:ZPP3]ZPAYS="" and instr(1,";"+[F:ZPP3]ZOTHERPAYS+";",";"+WPAYSCOLL+";")=0) or instr(1,";"+[F:ZPP3]ZPAYS+";",";"+WPAYSCOLL+";")>0)
                    RESULT = [F:ZPP3]PRIX
                  Next
                Endif
              Endif
              If(RESULT=0)Then
                Read [F:ZPP2]ZPP20=WBPCORD;WITMREF
                If(fstat=0)Then
                  RESULT = [F:ZPP2]PRIX
                Endif
                For [F:ZPP2]ZPP20 Where [F:ZPP2]COD_CHARG=WBPCORD and [F:ZPP2]COD_ART=WITMREF
& and (([F:ZPP2]ZSITE="" and instr(1,";"+[F:ZPP2]ZOTHERSITE+";",";"+WSITECOLL+";")=0) or instr(1,";"+[F:ZPP2]ZSITE+";",";"+WSITECOLL+";")>0)
& and [F:ZPP2]TYP_PAL=WTYPPAL and [F:ZPP2]COD_ART_TRI=WARTTRI
& and (([F:ZPP2]ZPAYS="" and instr(1,";"+[F:ZPP2]ZOTHERPAYS+";",";"+WPAYSCOLL+";")=0) or instr(1,";"+[F:ZPP2]ZPAYS+";",";"+WPAYSCOLL+";")>0)
                  #--------MODIFICATION JBS du 28/02/2018--------
                  #RESULT = [F:ZPP2]PRIX
                  If([F:ZPP2]COD_MOD_PRET="")Then
                    RESULT = [F:ZPP2]PRIX
                  Else
                    #On est dans le cas où l'article est lié à un modèle de prestation
                    RESULT = func SPEZEPI.SPE_GET_PRIX_A_DATE([F:ZPP2]COD_MOD_PRET,WITMREF,WTYPPAL,[F:ZPP2]ZSITE,[F:ZPP2]ZPAYS,"",WDATE)
                  Endif
                  #----------------------------------------------
                Next
                If(RESULT=0)Then
                  #On n'a pas trouvé de tarif, on va regarder si ce client à un chargeur de rattachament
                  #dans ce cas, on va récupérer son tarif
                  Read[F:BPC2]BPC0=WBPCORD
                  If(fstat=0)Then
                    If([F:BPC2]ZCLTRAT<>"")Then
                      Read [F:ZPP2]ZPP20=[F:BPC2]ZCLTRAT;WITMREF
                      If(fstat=0)Then
                        RESULT = [F:ZPP2]PRIX
                      Endif
                      #--------MODIFICATION JBS du 28/02/2018--------
                      For [F:ZPP2]ZPP20 Where [F:ZPP2]COD_CHARG=[F:BPC2]ZCLTRAT and [F:ZPP2]COD_ART=WITMREF
& and (([F:ZPP2]ZSITE="" and instr(1,";"+[F:ZPP2]ZOTHERSITE+";",";"+WSITECOLL+";")=0) or instr(1,";"+[F:ZPP2]ZSITE+";",";"+WSITECOLL+";")>0)
& and [F:ZPP2]TYP_PAL=WTYPPAL and [F:ZPP2]COD_ART_TRI=WARTTRI
& and (([F:ZPP2]ZPAYS="" and instr(1,";"+[F:ZPP2]ZOTHERPAYS+";",";"+WPAYSCOLL+";")=0) or instr(1,";"+[F:ZPP2]ZPAYS+";",";"+WPAYSCOLL+";")>0)
                        #RESULT = [F:ZPP2]PRIX
                        If([F:ZPP2]COD_MOD_PRET="")Then
                          RESULT = [F:ZPP2]PRIX
                        Else
                          #On est dans le cas où l'article est lié à un modèle de prestation
                          RESULT = func SPEZEPI.SPE_GET_PRIX_A_DATE([F:ZPP2]COD_MOD_PRET,WITMREF,WTYPPAL,[F:ZPP2]ZSITE,[F:ZPP2]ZPAYS,"",WDATE)
                        Endif
                      Next
                      #----------------------------------------------
                    Endif
                  Endif
                Endif
              Endif
            Endif
          Endif
        Endif
      Endif
    Endif
  Endif
End RESULT

#**
#* Documentation de la procédure SET_ACT_EPI
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>18 mars 2015</td>
#* <tr><td><b>Nom de la requête</b></td><td>SET_ACTEPI</td>
#* <tr><td><b>Nom de la publication</b></td><td>WSEPALIA</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Cette procédure permet d'alimenter la table ZTEMPEPI afin de générer ensuite une liste d'action EPALIS
#* </td></table>
#* @public
#* @param WCOMPTEUR (<font color="#7F0055"><b>Char</b></font>) Compteur unique
#* @param WFCY (<font color="#7F0055"><b>Char</b></font>) Code du site
#* @param WBPCORD (<font color="#7F0055"><b>Char</b></font>) Code du client
#* @param WUSER (<font color="#7F0055"><b>Char</b></font>) Explication_du_parametre3
#* @param WITMREF (<font color="#7F0055"><b>Char</b></font>) Code de l'article
#* @param WQTY (<font color="#7F0055"><b>Decimal</b></font>) Quantité
#* @param WACT (<font color="#7F0055"><b>Integer</b></font>) Action 1:Réparation, 2:Relocalisation, 3:Transformation
#* @param WDATACT (<font color="#7F0055"><b>Date</b></font>) Date de l'action
#* @param WREFERENCE (<font color="#7F0055"><b>Référence</b></font>) Référence donnée par le client
#* @param WBPAADD (<font color="#7F0055"><b>Adresse</b></font>) Code adresse du client facturé
#* @param WBPCORDF (<font color="#7F0055"><b>Adresse</b></font>) Code du client facturé
#* @param WFCYF (<font color="#7F0055"><b>Adresse</b></font>) Code du site epalia départ livraison
#* @param WFCYF (<font color="#7F0055"><b>Adresse</b></font>) Code du site epalia départ livraison
#* @param WFCYREC (<font color="#7F0055"><b>Char</b></font>) Code du site epalia de réception
#* @param WCHAUFFEUR (<font color="#7F0055"><b>Char</b></font>) Chauffeur
#* @param WPAYS (<font color="#7F0055"><b>Char</b></font>) Pays collecteur
#* @param WTRANSCHG (<font color="#7F0055"><b>Char</b></font>) Transformation chargeur (oui/non)
#* @param WQTEKCUTIL (<font color="#7F0055"><b>Decimal</b></font>) Quantité KC utilisé
#* @param WQTEHS (<font color="#7F0055"><b>Decimal</b></font>) Quantité HS
#* @param WAPPRO (<font color="#7F0055"><b>Char</b></font>) Appro
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version version</font>
#*!
Subprog SET_ACT_EPI(WCOMPTEUR,WFCY,WBPCORD,WUSER,WITMREF,WQTY,WACT,WDATACT,WREFERENCE,WBPAADD,WBPCORDF,WFCYF,WFCYREC,WCHAUFFEUR,WTRANSCHG,WPAYS,WQTEKCUTIL,WQTEHS,WAPPRO,WTYPPAL,WNUMLIG,RESULT)
  Value Char WCOMPTEUR
  Value Char WFCY
  Value Char WBPCORD
  Value Char WUSER
  Value Char WITMREF
  Value Decimal WQTY
  Value Integer WACT
  Value Date WDATACT
  Value Char WREFERENCE
  Value Char WBPAADD
  Value Char WBPCORDF
  Value Char WFCYF
  Value Char WFCYREC
  Value Char WCHAUFFEUR
  Value Integer WTRANSCHG
  Value Char WPAYS
  Value Decimal WQTEKCUTIL
  Value Decimal WQTEHS
  Value Char WAPPRO
  Value Integer WTYPPAL
  Value Integer WNUMLIG
  Variable Integer RESULT
  # Ouverture des tables
  If clalev([F:ZTE])=0 : Local File ZTEMPEPI   [F:ZTE]: Endif
  #---------MODIFICATION JBS du 26/10/2017-----------
  #Avant de créer l'enregistrement, nous allons regarder s'il existe déjà une ligne dans
  #la table ZTEMPEPI avec le même compteur
  #Si oui et que le champ ZACTNUM est différent de vide, on va récupérer ce n° d'action
  #pour le mettre sur l'action à créer sinon, on va créer un nouveau numéro d'action
  Local Char WAZCTNUM(30) : WAZCTNUM = ""
  Read[F:ZTE]ZTE1=WCOMPTEUR
  If(fstat=0)Then
    If([F:ZTE]ZACTNUM<>"")Then
      WAZCTNUM = [F:ZTE]ZACTNUM
    Else
      WAZCTNUM = func SPEZAEP.SPE_GET_COMPT_ACT
    Endif
  Else
    WAZCTNUM = func SPEZAEP.SPE_GET_COMPT_ACT
  Endif
  #--------------------------------------------------
  Raz [F:ZTE]
  [F:ZTE]ZCOMPTEUR = WCOMPTEUR
  [F:ZTE]ZFCY = WFCY
  [F:ZTE]ZBPCORD = WBPCORD
  [F:ZTE]ZUSER = WUSER
  [F:ZTE]ZITMREF = WITMREF
  [F:ZTE]ZQTY = WQTY
  [F:ZTE]ZACT = WACT
  [F:ZTE]ZDATACT = WDATACT
  [F:ZTE]ZREFERENCE = WREFERENCE
  [F:ZTE]ZBPAADD = WBPAADD
  [F:ZTE]ZBPCORDF = WBPCORDF
  [F:ZTE]ZFCYF = WFCYF
  [F:ZTE]ZFCYREC = WFCYREC
  [F:ZTE]ZCHAUFFEUR = WCHAUFFEUR
  [F:ZTE]ZTRANSCHG = WTRANSCHG
  [F:ZTE]ZQTEKCUTIL = WQTEKCUTIL
  [F:ZTE]ZQTEHS = WQTEHS
  [F:ZTE]ZAPPRO = WAPPRO
  #---------MODIFICATION JBS du 26/10/2017-----------
  [F:ZTE]ZACTNUM = WAZCTNUM
  #--------------------------------------------------
  #---------MODIFICATION JBS du 27/02/2018-----------
  [F:ZTE]ZTYPPAL = WTYPPAL
  #--------------------------------------------------
  If(WPAYS="")Then
    WPAYS = "FR"
  Endif
  [F:ZTE]ZPAYS = WPAYS
  #ZACTOK = 2 -> L'action est effectuée
  #ZACTOK = 3 -> L'action de relocalisation différée
  #ZACTOK = 1 -> L'action non exécutée (Problème de stock si case "Gest act att" ou problème lors de l'exécution de l'action)
  If(WACT=5)Then
    #Dans le cas où l'action est un entrée diverse, on initialise ZACTOK à 2
    [F:ZTE]ZACTOK = 2
  Else
#    If(WDATACT>date$)Then
    If(WACT=2)Then
      [F:ZTE]ZACTOK = 3
    Else
      [F:ZTE]ZACTOK = 1
    Endif
  Endif
  [F:ZTE]ZEXEACT=date$
  [F:ZTE]ZEXEACTH=time$
  [F:ZTE]ZNUMLIG=WNUMLIG
  Write [F:ZTE]
  If(fstat=0)Then
    RESULT = 1
  Else
    RESULT = 0
  Endif
End

#**
#* Documentation de la fonction GET_ZPSNUM
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>18 mars 2015</td>
#* <tr><td valign="top"><b>Description de la fonction</b></td><td>
#* Permet de rechercher la précommande EPALIS en fonction du site et du client
#* </td></table>
#* @public
#* @param WFCY (<font color="#7F0055"><b>Char</b></font>) Code du site
#* @param WBPCNUM (<font color="#7F0055"><b>Char</b></font>) Code client
#* @return
#*Variable de retour : RESULT (<font color="#7F0055"><b>Char</b></font>)
#* <br>Explication        : N° de la précommande
#* @since <font color="green">Version 6.5</font>
#*!
Funprog GET_ZPSNUM(WFCY,WBPCNUM)
  Value Char WFCY
  Value Char WBPCNUM
  Local Char RESULT(30)
  # Ouverture des tables
  If clalev([F:ZPS])=0 : Local File ZPSORDER   [F:ZPS]: Endif
  Read [F:ZPS]ZPS1=WFCY;WBPCNUM;2
  If(fstat=0)Then
    RESULT = [F:ZPS]ZPSNUM
  Endif
End RESULT

#**
#* Documentation de la procédure EXEC_ACT_EPI
#* <table>
#* <tr><td><b>Société</b></td><td><b><u><font color="#046380">MICROFIRST</font></u></b></td>
#* <tr><td><b>Auteur</b></td><td>JBS</td>
#* <tr><td><b>Date de création</b></td><td>18 mars 2015</td>
#* <tr><td><b>Nom de la requête</b></td><td>EXE_ACTEPI</td>
#* <tr><td><b>Nom de la publication</b></td><td>WSEPALIA</td>
#* <tr><td valign="top"><b>Description de la procédure</b></td><td>
#* Exécute une action EPALIS en fonction d'un Compteur. Cette fonction récupère une liste d'action dans la table temporaire ZTEMPEPI
#* </td></table>
#* @public
#* @param WCOMPTEUR (<font color="#7F0055"><b>Char</b></font>) Compteur
#* @param RESULT (<font color="#7F0055"><b>Integer</b></font>) Variable résultat du sous-programme
#* @since <font color="green">Version 6.5</font>
#*!
Subprog EXEC_ACT_EPI(WCOMPTEUR,RESULT)
  Value Char WCOMPTEUR
  Variable Integer RESULT
  #Nous allons déclarer plusieurs tableaux qui contiendront
  #les élements à écrire dans un fichier texte pour l'importation des lignes du BL
  Local Char WITMREF(60)(0..399)   # Tableau des articles de prestation
  Local Decimal WQTY(0..399)       # Tableau des quantités
  Local Char WARTTRI(60)(0..399)   # Tableau des article de tris
  Local Char WZPSNUM(60)(0..399)   # Tableau des n° de précommande
  Local Integer WZPDLIN(0..399)    # Tableau des n° de ligne de la précommande
  Local Integer WTYPPAL(0..399)    # Tableau des type de palettes
  Local Char WPAYSCOLL(150)(0..399)# Tableau des pays collecteurs
  Local Char WSITECOLL(250)(0..399)# Tableau des sites collecteurs
  #<---------------Modification JBS du 21/02/2017 pour prendre en compte le paramétrage client chargeur ------
  Local Char WCODCLTCOLL(30)(0..399)# Tableau des clients chargeurs collecté
  #---------------------------------------------------------------------------------------------------------->
  #Pour l'instant, on ne sauvegarde pas le prix. Le prix sera récupéré au moment d'écrire le fichier texte
  Local Integer WINDTAB : WINDTAB = 0
  # Ouverture des tables
  If clalev([F:ZTE])=0 : Local File ZTEMPEPI   [F:ZTE]: Endif
  If clalev([F:ZAEP])=0 : Local File ZACTEPI   [F:ZAEP]: Endif
  If clalev([F:ZSE])=0 : Local File ZPSEPALIS   [F:ZSE]: Endif
  If clalev([F:ZPD])=0 : Local File ZPSORDERD   [F:ZPD]: Endif
  If clalev([F:SDH])=0 : Local File SDELIVERY   [F:SDH]: Endif
  If clalev([F:SDD])=0 : Local File SDELIVERYD   [F:SDD]: Endif
  If clalev([F:BPC])=0 : Local File BPCUSTOMER [BPC]: Endif
  If clalev([F:BPR])=0 : Local File BPARTNER [BPR]  : Endif
  If clalev([F:BPD])=0 : Local File BPDLVCUST [BPD] : Endif
  If clalev([F:TCU])=0 : Local File TABCUR [TCU]    : Endif
  If clalev([F:FCY])=0 : Local File FACILITY [FCY]  : Endif
  If clalev([F:ITM])=0 : Local File ITMMASTER [ITM] : Endif
  #On crée une transaction pour permettre l'annulation totale de l'action
  Trbegin [F:ZSE],[F:ZPD],[F:SDH],[F:SDD]
  #On va declarer une variable erreur
  Local Integer WERRTRAIT : WERRTRAIT = 0
  Local Char WINFO(250)
  #Ouverture du fichier Trace
  Local Char TIT(30) :[L]TIT ="Action commande EPALIS"
  If !GSERVEUR : Call OUVRE_TRACE(TIT) From LECFIC : Endif

  For [F:ZTE]ZTE1 Where [F:ZTE]ZCOMPTEUR=WCOMPTEUR
    #Composition de l'enregistrement de la table ZTEMPEPI
    # [F:ZTE]ZFCY      -> Code site
    # [F:ZTE]ZBPCORD   -> Code client
    # [F:ZTE]ZUSER     -> Code utilisateur de la demande d'action
    # [F:ZTE]ZITMREF   -> Code de l'article
    # [F:ZTE]ZQTY      -> Quantité
    # [F:ZTE]ZACT      -> Code de l'action 1:Réparation, 2: Relocalisation, 3:Transformation
    # [F:ZTE]ZCOMPTEUR -> Compteur interne de la demande d'action
    # [F:ZTE]ZDATACT   -> Date de l'action
    #-----------------------------------------------------
    #Pour chaque enregistrement résultat, nous allons exécuter l'action
    If([F:ZTE]ZACT=1)Then
      #--------------------REPARATION--------------------
      Call ECR_TRACE("Exécution d'une action : Réparation de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté KC sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      For [F:ZAEP]ZAEP0 Where [F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEKC>0 and [F:ZAEP]ZQTYLIV=0
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à réparer est supérieure à la qté à repérarer de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEKC)Then
            #On passe uniquement la qté à réparer dans la quanité bonne
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK + [F:ZAEP]ZQTEKC
              [F:ZSE]ZQTEKC = 0
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [1] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [1.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif


            #On va maintenant alimenter nos tableaux
            #On regarde si l'article de prestation est déjà présent dans le tableau
            #mais uniquement si la ligne est facturable et que le type de prestation est égal à 7
            If([F:ZAEP]ZFACTRELOC=2 and [F:ZSE]ZTYPPREST=7)Then
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #La ligne existe déjà
                  #On va juste augmenter la quantité
                  WQTY(I) = WQTY(I) + [F:ZSE]ZQTEOK
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                #Nous allons l'ajouter
                WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                WQTY(WINDTAB)      = [F:ZSE]ZQTEOK
                WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                WZPDLIN(WINDTAB)   =  [F:ZSE]ZPSLIG
                WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                #On augmente l'indice du tableau
                WINDTAB = WINDTAB + 1
              Endif
              #On va maintenant repasser le champ ZFACTRELOC à 1
#              Read[F:ZSE]ZSE3=WSEQ
              [F:ZSE]ZFACTRELOC = 1
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [14] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Else
                Call SET_HISTO_STOCK([F:ZSE]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Endif
            Else



#              #On va également augmenter la qté de l'article de prestation associé
#              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
##If(GUSER="MICRO")Then
##    Dbgaff
##Endif
#              If(fstat=0)Then
#                [F:ZPD]QTY = [F:ZPD]QTY + [F:ZAEP]ZQTEKC
#                [F:ZPD]QTYOK = [F:ZPD]QTYOK + [F:ZAEP]ZQTEKC
#                [F:ZPD]QTYKC = [F:ZPD]QTYKC - [F:ZAEP]ZQTEKC
#                Rewrite [F:ZPD]
#                If(fstat<>0)Then
#                  WERRTRAIT = 1
#                  Call ECR_TRACE(" [2] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
#                Endif
#              Else
#                WERRTRAIT = 1
#                Call ECR_TRACE(" [2.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
#              Endif

            Endif

          Else
          #2ème cas : La quantité à réparer est inférieure à la qté à réparer de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEOK = 0
              [F:ZSE]ZQTEKC = [F:ZAEP]ZQTEKC - WQTYATRAITER
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [3] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [3.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la réparation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
            [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            [F:ZSE]ZQTEOK = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTYLIV
            [F:ZSE]ZSDDLIN = [F:ZAEP]ZSDDLIN
            [F:ZSE]ZSDHNUM = [F:ZAEP]ZSDHNUM
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [4] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif


            #On va maintenant alimenter nos tableaux
            #On regarde si l'article de prestation est déjà présent dans le tableau
            #mais uniquement si la ligne est facturable et que le type de prestation est égal à 7
            If([F:ZAEP]ZFACTRELOC=2 and [F:ZSE]ZTYPPREST=7)Then
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #La ligne existe déjà
                  #On va juste augmenter la quantité
                  WQTY(I) = WQTY(I) + [F:ZSE]ZQTEOK
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                #Nous allons l'ajouter
                WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                WQTY(WINDTAB)      = [F:ZSE]ZQTEOK
                WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                #On augmente l'indice du tableau
                WINDTAB = WINDTAB + 1
              Endif
              #On va maintenant repasser le champ ZFACTRELOC à 1
              Read[F:ZSE]ZSE3=WSEQ
              [F:ZSE]ZFACTRELOC = 1
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [14] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Else
                Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Endif
            Else


              #On va également augmenter la qté de l'article de prestation associé
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                [F:ZPD]QTY = [F:ZPD]QTY + WQTYATRAITER
                [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTYATRAITER
                [F:ZPD]QTYKC = [F:ZPD]QTYKC - WQTYATRAITER
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
                #WERRTRAIT = 1
                #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif



            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEKC
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
      #---------- MODIF JBS du 11/04/2017 -----------
      #Dans le cas d'une réparation, on va regarder si l'utilisateur à renseigné une
      #quantité de palettes utilisée pour la réparation et/ou une quantité de palette HS
      If(([F:ZTE]ZQTEKCUTIL + [F:ZTE]ZQTEHS)>0)Then
        #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
        #ce client
        #ce site
        #cet article final dont les Qté KC sont différent de 0
        Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTEKCUTIL + [F:ZTE]ZQTEHS
        Local Integer WCASE : WCASE = 0
        For [F:ZAEP]ZAEP0 Where [F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEKC>0 and [F:ZAEP]ZQTYLIV=0
          #On ne fait le traitement que si WQTYATRAITER>0
          If(WQTYATRAITER>0)Then
            #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
            #concerne les palettes bonnes
            #2 cas peuvent se présenter maintenant
            #1er cas : La quantité à réparer est supérieure à la qté à repérarer de l'enregistrement courant
            If(WQTYATRAITER>=[F:ZAEP]ZQTEKC)Then
              #On passe uniquement la qté à réparer dans la quanité bonne
              #On recherche l'enregistrement correspondant de la table ZPSEPALIS
              WCASE=1
              Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
              If(fstat=0)Then
                [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTEKC
                [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
                [F:ZSE]ZSDHNUM = "Déclass."
                Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
                Rewrite [F:ZSE]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [1] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
                Endif
              Else
                WERRTRAIT = 1
                Call ECR_TRACE(" [1.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
            #2ème cas : La quantité à réparer est inférieure à la qté à réparer de l'enregistrement courant
              #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
              #On recherche l'enregistrement correspondant de la table ZPSEPALIS
              WCASE = 2
              Local Integer WZTYPPREST
              Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
              If(fstat=0)Then
                [F:ZSE]ZQTEOK = 0
                [F:ZSE]ZQTEKC = [F:ZAEP]ZQTEKC - WQTYATRAITER
                WZTYPPREST = [F:ZSE]ZTYPPREST
                Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
                Rewrite [F:ZSE]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [3] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
                Endif
              Else
                WERRTRAIT = 1
                Call ECR_TRACE(" [3.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
              #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la réparation
              Raz [F:ZSE]
              [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
              [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
              [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
              [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
              [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
              [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
              [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
              [F:ZSE]ZQTEATRANSF = 0
              [F:ZSE]ZQTEKC = WQTYATRAITER
              [F:ZSE]ZQTEOK = 0
              [F:ZSE]ZQTY = [F:ZAEP]ZQTY
              [F:ZSE]ZQTYLIV = WQTYATRAITER
              [F:ZSE]ZSDDLIN = 0
              [F:ZSE]ZSDHNUM = "Déclass."
              [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
              [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
              [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
              [F:ZSE]ZTYPPREST = WZTYPPREST
              #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
              [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
              #--------------------------------------------------------------------------------------
              #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
              [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
              #--------------------------------------------------------------------------------------
              Local Integer WSTAT
              Local Char WSEQ(15)
              Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
              If WSTAT=0
                [F:ZSE]ZSEQ = WSEQ
              Endif
              Write [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [4] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Else
                Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
              Endif
            Endif
            If([F:ZAEP]ARTREF=2)Then
              If(WCASE=1)Then
                WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEKC
              Elsif(WCASE=2)Then
                WQTYATRAITER = 0
              Endif
            Endif
          Endif
        Next
      Endif
      #----------------------------------------------
    Elsif([F:ZTE]ZACT=2)Then
      #------------------RELOCALISATION------------------
      Call ECR_TRACE("Exécution d'une action : Relocalisation de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté bonnes sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      Local Char ZCRITERE(250) : ZCRITERE = "[F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEOK>0 and [F:ZAEP]ZQTYLIV=0"
      Local Char WCLIENT(30) : WCLIENT = [F:ZTE]ZBPCORD
      Local Char WAXEANA(30) : WAXEANA = "GD"
      #On va lire l'axe analytique EPALIS métier du client
      Read [F:BPC]BPC0=WCLIENT
      If(fstat=0)Then
        WAXEANA = [F:BPC]ZAXEMETEPI
      Endif
      If(WAXEANA="GD")Then
        ZCRITERE = ZCRITERE + " and [F:ZAEP]ZFACTRELOC<>1"
      Endif
      For [F:ZAEP]ZAEP0 Where evalue(ZCRITERE)
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à relocaliser est supérieure à la qté bonnes de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEOK)Then
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTEOK
              [F:ZSE]ZSDHNUM = WCOMPTEUR    #Pour le moment, on ne connait pas le n° de BL, on va donc mettre le N° du groupe d'action
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [6] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [6.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #On va maintenant alimenter nos tableaux
            #mais uniquement si la ligne est facturable
            If([F:ZAEP]ZFACTRELOC=2)Then
              #On regarde si l'article de prestation est déjà présent dans le tableau
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #Avant d'ajouter l'article dans le tableau destiné à la création du BL
                  #On va regarder si l'article n'est pas de type livraison et si il n'est pas soumis au test du chauffeur
                  Local Integer WARTOK : WARTOK = 0
                  WARTOK = func ZWSEPALISB.GET_ART_OK([F:ZAEP]BPCORD,[F:ZAEP]STOFCY,[F:ZAEP]ZARTTRI,[F:ZAEP]ZARTPREST,[F:ZTE]ZCHAUFFEUR,[F:ZAEP]ZTYPPAL)
                  If(WARTOK=1)Then
                    #La ligne existe déjà
                    #On va juste augmenter la quantité
                    WQTY(I) = WQTY(I) + ([F:ZSE]ZQTEOK*[F:ZAEP]COEFFAC)
                  Endif
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #Avant d'ajouter l'article dans le tableau destiné à la création du BL
                #On va regarder si l'article n'est pas de type livraison et si il n'est pas soumis au test du chauffeur
                Local Integer WARTOK : WARTOK = 0
                WARTOK = func ZWSEPALISB.GET_ART_OK([F:ZAEP]BPCORD,[F:ZAEP]STOFCY,[F:ZAEP]ZARTTRI,[F:ZAEP]ZARTPREST,[F:ZTE]ZCHAUFFEUR,[F:ZAEP]ZTYPPAL)
                If(WARTOK=1)Then
                  #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                  #Nous allons l'ajouter
                  WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                  WQTY(WINDTAB)      = ([F:ZSE]ZQTEOK*[F:ZAEP]COEFFAC)
                  WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                  WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                  WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                  WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                  WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                  WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                  WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                  #On augmente l'indice du tableau
                  WINDTAB = WINDTAB + 1
                Endif
              Endif
            Else
              #Sinon on augmente manuellement la quantité livrée de la ligne de la précommande
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + ([F:ZSE]ZQTEOK*[F:ZAEP]COEFFAC)
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
                #WERRTRAIT = 1
                #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Endif
          Else
          #2ème cas : La quantité à relocaliser est inférieure à la qté bonnes de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK - WQTYATRAITER
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [7] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [7.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la relocalisation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
            [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            [F:ZSE]ZQTEOK = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = WQTYATRAITER
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = WCOMPTEUR
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
            #On va maintenant alimenter nos tableaux
            #On regarde si l'article de prestation est déjà présent dans le tableau
            #mais uniquement si la ligne est facturable
            If([F:ZAEP]ZFACTRELOC=2)Then
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #Avant d'ajouter l'article dans le tableau destiné à la création du BL
                  #On va regarder si l'article n'est pas de type livraison et si il n'est pas soumis au test du chauffeur
                  Local Integer WARTOK : WARTOK = 0
                  WARTOK = func ZWSEPALISB.GET_ART_OK([F:ZAEP]BPCORD,[F:ZAEP]STOFCY,[F:ZAEP]ZARTTRI,[F:ZAEP]ZARTPREST,[F:ZTE]ZCHAUFFEUR,[F:ZAEP]ZTYPPAL)
                  If(WARTOK=1)Then
                    #La ligne existe déjà
                    #On va juste augmenter la quantité
                    WQTY(I) = WQTY(I) + ([F:ZSE]ZQTEOK*[F:ZAEP]COEFFAC)
                  Endif
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #Avant d'ajouter l'article dans le tableau destiné à la création du BL
                #On va regarder si l'article n'est pas de type livraison et si il n'est pas soumis au test du chauffeur
                Local Integer WARTOK : WARTOK = 0
                WARTOK = func ZWSEPALISB.GET_ART_OK([F:ZAEP]BPCORD,[F:ZAEP]STOFCY,[F:ZAEP]ZARTTRI,[F:ZAEP]ZARTPREST,[F:ZTE]ZCHAUFFEUR,[F:ZAEP]ZTYPPAL)
                If(WARTOK=1)Then
                  #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                  #Nous allons l'ajouter
                  WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                  WQTY(WINDTAB)      = ([F:ZSE]ZQTEOK*[F:ZAEP]COEFFAC)
                  WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                  WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                  WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                  WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                  WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                  WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                  WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                  #On augmente l'indice du tableau
                  WINDTAB = WINDTAB + 1
                Endif
              Endif
            Else
              #Sinon on augmente manuellement la quantité livrée de la ligne de la précommande
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEOK
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
                #WERRTRAIT = 1
                #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEOK
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Elsif([F:ZTE]ZACT=8)Then
      #------------------TRANSFERT DE STOCK (DE SITE A SITE)------------------
      Call ECR_TRACE("Exécution d'une action : Transfert de stock de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté bonnes sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      Local Char ZCRITERE(250) : ZCRITERE = "[F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEOK>0 and [F:ZAEP]ZQTYLIV=0"
      Local Char WCLIENT(30) : WCLIENT = [F:ZTE]ZBPCORD
      Local Char WAXEANA(30) : WAXEANA = "GD"
      #On va lire l'axe analytique EPALIS métier du client
      Read [F:BPC]BPC0=WCLIENT
      If(fstat=0)Then
        WAXEANA = [F:BPC]ZAXEMETEPI
      Endif
      If(WAXEANA="GD")Then
#        ZCRITERE = ZCRITERE + " and [F:ZAEP]ZFACTRELOC<>1"
      Endif
      For [F:ZAEP]ZAEP0 Where evalue(ZCRITERE)
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à transférer est supérieure à la qté bonnes de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEOK)Then
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZPSNUM = [M:ZAE1]ZPSNUMFCYREC
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [6] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [6.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
          Else
          #2ème cas : La quantité à transférer est inférieure à la qté bonnes de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK - WQTYATRAITER
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [7] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [7.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la relocalisation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            #Dans un premier temps, nous allons enlever la quantité sur l'ancienne ligne [F:ZAEP]ZPSLIG de la precommande [F:ZAEP]ZPSNUM
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              Local Decimal WQTE : WQTE = 0
              WQTE = WQTYATRAITER
              [F:ZPD]QTYOK = [F:ZPD]QTYOK - WQTE
              [F:ZPD]QTY = [F:ZPD]QTY - WQTE
              Rewrite [F:ZPD]
            Endif
            #Dans un deuxième temps, nous allons récupérer la ligne de la précommande symbolisant le site de réception du transfert
            [F:ZSE]ZPSNUM = [M:ZAE1]ZPSNUMFCYREC
            Local Integer WZPSLIG
            #On va maintenant regarder s'il existe une ligne de la précommande avec l'article de prestation
            Read [F:ZPD]ZPD2=[M:ZAE1]ZPSNUMFCYREC;[F:ZAEP]ZARTPREST
            If(fstat=0)Then
              #Il existe une ligne de la précommande pour cette article de prestation
              Local Decimal WQTE : WQTE = 0
              WQTE = WQTYATRAITER
              [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTE
              [F:ZPD]QTY = [F:ZPD]QTY + WQTE
              Rewrite [F:ZPD]
              WZPSLIG = [F:ZPD]ZPDLIN
            Else
              #Il n'existe pas de ligne dans la précommande pour cet article de prestation
              #On dispose de la variable [M:ZAE1]ZPSNUMFCYREC contenant le N° de la précommande
              #On va récupérer le dernier N° de ligne de la précommande
              WZPSLIG = 0
              For [F:ZPD]ZPD0 Where [F:ZPD]ZPSNUM=[M:ZAE1]ZPSNUMFCYREC
                If([F:ZPD]ZPDLIN>WZPSLIG)Then
                  WZPSLIG = [F:ZPD]ZPDLIN
                Endif
              Next
              WZPSLIG = WZPSLIG + 1000
              #On va maintenant créer la ligne pour la précommande
              Raz [F:ZPD]
              [F:ZPD]ZPSNUM = [M:ZAE1]ZPSNUMFCYREC
              [F:ZPD]ZPDLIN = WZPSLIG
              [F:ZPD]ITMREF = [F:ZAEP]ZARTPREST
              Read [F:ITM]ITM0=[F:ZAEP]ZARTPREST
              If(fstat=0)Then
                [F:ZPD]ITMDES1 = [F:ITM]ITMDES1
                [F:ZPD]VACITM = [F:ITM]VACITM
                [F:ZPD]SAU = [F:ITM]SAU
              Endif
              [F:ZPD]QTYOK = WQTYATRAITER
              [F:ZPD]QTY = WQTYATRAITER
              [F:ZPD]QTYCDE = 0
              [F:ZPD]GROPRI = 0
              [F:ZPD]NETPRI = 0
              [F:ZPD]AMTNOTLIN = 0
              Write [F:ZPD]
            Endif
            [F:ZSE]ZPSLIG = WZPSLIG
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            [F:ZSE]ZQTEOK = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = 0
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = ""
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEOK
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Elsif([F:ZTE]ZACT=12)Then
      #------------------TRANSFERT DE STOCK DE KC (DE SITE A SITE)------------------
      Call ECR_TRACE("Exécution d'une action : Transfert de stock de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " KC",0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté KC sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      Local Char ZCRITERE(250) : ZCRITERE = "[F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEKC>0 and [F:ZAEP]ZQTYLIV=0"
      Local Char WCLIENT(30) : WCLIENT = [F:ZTE]ZBPCORD
      Local Char WAXEANA(30) : WAXEANA = "GD"
      #On va lire l'axe analytique EPALIS métier du client
      Read [F:BPC]BPC0=WCLIENT
      If(fstat=0)Then
        WAXEANA = [F:BPC]ZAXEMETEPI
      Endif
      If(WAXEANA="GD")Then
#        ZCRITERE = ZCRITERE + " and [F:ZAEP]ZFACTRELOC<>1"
      Endif
      For [F:ZAEP]ZAEP0 Where evalue(ZCRITERE)
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à transférer est supérieure à la qté bonnes de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEKC)Then
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZPSNUM = [M:ZAE1]ZPSNUMFCYREC
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [6] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [6.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
          Else
          #2ème cas : La quantité à transférer est inférieure à la qté KC de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEKC = [F:ZAEP]ZQTEKC - WQTYATRAITER
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [7] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [7.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la relocalisation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            #Dans un premier temps, nous allons enlever la quantité sur l'ancienne ligne [F:ZAEP]ZPSLIG de la precommande [F:ZAEP]ZPSNUM
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              Local Decimal WQTE : WQTE = 0
              WQTE = WQTYATRAITER
              [F:ZPD]QTYKC = [F:ZPD]QTYKC - WQTE
              [F:ZPD]QTY = [F:ZPD]QTY - WQTE
              Rewrite [F:ZPD]
            Endif
            #Dans un deuxième temps, nous allons récupérer la ligne de la précommande symbolisant le site de réception du transfert
            [F:ZSE]ZPSNUM = [M:ZAE1]ZPSNUMFCYREC
            Local Integer WZPSLIG
            #On va maintenant regarder s'il existe une ligne de la précommande avec l'article de prestation
            Read [F:ZPD]ZPD2=[M:ZAE1]ZPSNUMFCYREC;[F:ZAEP]ZARTPREST
            If(fstat=0)Then
              #Il existe une ligne de la précommande pour cette article de prestation
              Local Decimal WQTE : WQTE = 0
              WQTE = WQTYATRAITER
              [F:ZPD]QTYKC = [F:ZPD]QTYKC + WQTE
              [F:ZPD]QTY = [F:ZPD]QTY + WQTE
              Rewrite [F:ZPD]
              WZPSLIG = [F:ZPD]ZPDLIN
            Else
              #Il n'existe pas de ligne dans la précommande pour cet article de prestation
              #On dispose de la variable [M:ZAE1]ZPSNUMFCYREC contenant le N° de la précommande
              #On va récupérer le dernier N° de ligne de la précommande
              WZPSLIG = 0
              For [F:ZPD]ZPD0 Where [F:ZPD]ZPSNUM=[M:ZAE1]ZPSNUMFCYREC
                If([F:ZPD]ZPDLIN>WZPSLIG)Then
                  WZPSLIG = [F:ZPD]ZPDLIN
                Endif
              Next
              WZPSLIG = WZPSLIG + 1000
              #On va maintenant créer la ligne pour la précommande
              Raz [F:ZPD]
              [F:ZPD]ZPSNUM = [M:ZAE1]ZPSNUMFCYREC
              [F:ZPD]ZPDLIN = WZPSLIG
              [F:ZPD]ITMREF = [F:ZAEP]ZARTPREST
              Read [F:ITM]ITM0=[F:ZAEP]ZARTPREST
              If(fstat=0)Then
                [F:ZPD]ITMDES1 = [F:ITM]ITMDES1
                [F:ZPD]VACITM = [F:ITM]VACITM
                [F:ZPD]SAU = [F:ITM]SAU
              Endif
              [F:ZPD]QTYKC = WQTYATRAITER
              [F:ZPD]QTY = WQTYATRAITER
              [F:ZPD]QTYCDE = 0
              [F:ZPD]GROPRI = 0
              [F:ZPD]NETPRI = 0
              [F:ZPD]AMTNOTLIN = 0
              Write [F:ZPD]
            Endif
            [F:ZSE]ZPSLIG = WZPSLIG
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEOK = 0
            [F:ZSE]ZQTEKC = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = 0
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = ""
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEKC
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Elsif([F:ZTE]ZACT=7)Then
      #------------------DESTRUCTION------------------
      Call ECR_TRACE("Exécution d'une action : Destruction de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté bonnes sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      For [F:ZAEP]ZAEP0 Where [F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEOK>0 and [F:ZAEP]ZQTYLIV=0
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à détruire est supérieure à la qté bonnes de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEOK)Then
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTEOK
              [F:ZSE]ZSDHNUM = WCOMPTEUR    #Pour le moment, on ne connait pas le n° de BL, on va donc mettre le N° du groupe d'action
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [6] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [6.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #On va maintenant alimenter nos tableaux
            #mais uniquement si la ligne est facturable
            If([F:ZAEP]ZFACTRELOC=2)Then
              #On regarde si l'article de prestation est déjà présent dans le tableau
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #La ligne existe déjà
                  #On va juste augmenter la quantité
                  WQTY(I) = WQTY(I) + [F:ZSE]ZQTEOK
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                #Nous allons l'ajouter
                WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                WQTY(WINDTAB)      = [F:ZSE]ZQTEOK
                WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                #On augmente l'indice du tableau
                WINDTAB = WINDTAB + 1
              Endif
            Else
              #Sinon on augmente manuellement la quantité livrée de la ligne de la précommande
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEOK
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
                #WERRTRAIT = 1
                #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Endif
          Else
          #2ème cas : La quantité à détruire est inférieure à la qté bonnes de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK - WQTYATRAITER
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [7] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [7.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la destruction
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
            [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            [F:ZSE]ZQTEOK = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = WQTYATRAITER
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = WCOMPTEUR
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
            #On va maintenant alimenter nos tableaux
            #On regarde si l'article de prestation est déjà présent dans le tableau
            #mais uniquement si la ligne est facturable
            If([F:ZAEP]ZFACTRELOC=2)Then
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #La ligne existe déjà
                  #On va juste augmenter la quantité
                  WQTY(I) = WQTY(I) + [F:ZSE]ZQTEOK
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                #Nous allons l'ajouter
                WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                WQTY(WINDTAB)      = [F:ZSE]ZQTEOK
                WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                #On augmente l'indice du tableau
                WINDTAB = WINDTAB + 1
              Endif
            Else
              #Sinon on augmente manuellement la quantité livrée de la ligne de la précommande
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEOK
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
                #WERRTRAIT = 1
                #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEOK
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Elsif([F:ZTE]ZACT=5)Then
      #------------------ENTREE DIVERSE------------------
      Local Char INFO(250)
      Local Integer RESULT
      Call ENTREE_DIVERSE(INFO,RESULT) From ZWSEPALISB
      Infbox INFO
      Break #Dans ce cas, on ne parcourt pas la boucle c'est traite dans la procédure
    Elsif([F:ZTE]ZACT=6)Then
      #------------------SORTIE DIVERSE------------------
      #ATTENTION : par défaut une sortie diverse est non facturable
      # si elle doit être facturée, ca s'appelle une relocalisation
      Call ECR_TRACE("Exécution d'une action : Sortie diverse de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté bonnes sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      For [F:ZAEP]ZAEP0 Where [F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEOK>0 and [F:ZAEP]ZQTYLIV=0
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à relocaliser est supérieure à la qté bonnes de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEOK)Then
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTEOK
              [F:ZSE]ZSDHNUM = WCOMPTEUR    #Pour le moment, on ne connait pas le n° de BL, on va donc mettre le N° du groupe d'action
#              [F:ZSE]ZFACTRELOC = 1 #On force la valeur à 1 pour dire que cela n'a pas été facturé car sortie diverse
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [6] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [6.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans le cadre d'une sortie diverse, nous allons considérer que cette sortie n'est pas facturable
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEOK
              Rewrite [F:ZPD]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Else
              #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
              #WERRTRAIT = 1
              #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
            Endif
          Else
          #2ème cas : La quantité à relocaliser est inférieure à la qté bonnes de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            #On sauvegarde la valeur du champ ZFACTRELOC
            Local Integer WSAVFACRELOC
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              WSAVFACRELOC = [F:ZSE]ZFACTRELOC
              If(WSAVFACRELOC=0)Then
                WSAVFACRELOC = 1
              Endif
              [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK - WQTYATRAITER
              [F:ZSE]ZFACTRELOC = WSAVFACRELOC #On récupère la valeur de la ligne splittée
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [7] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [7.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la relocalisation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
            [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            [F:ZSE]ZQTEOK = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = WQTYATRAITER
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = WCOMPTEUR
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
#            [F:ZSE]ZFACTRELOC = 1 #On force la valeur à 1 pour dire que cela n'a pas été facturé car sortie diverse
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
            #Dans le cadre d'une sortie diverse, nous allons considérer que cette sortie n'est pas facturable
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEOK
              Rewrite [F:ZPD]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Else
              #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
              #WERRTRAIT = 1
              #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEOK
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Elsif([F:ZTE]ZACT=11)Then
      #------------------SORTIE DIVERSE KC------------------
      #ATTENTION : par défaut une sortie diverse est non facturable
      # si elle doit être facturée, ca s'appelle une relocalisation
      Call ECR_TRACE("Exécution d'une action : Sortie diverse de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " KC",0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté bonnes sont différent de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      For [F:ZAEP]ZAEP0 Where [F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEKC>0 and [F:ZAEP]ZQTYLIV=0
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à relocaliser est supérieure à la qté bonnes de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEKC)Then
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE=1
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTEKC
              [F:ZSE]ZSDHNUM = WCOMPTEUR    #Pour le moment, on ne connait pas le n° de BL, on va donc mettre le N° du groupe d'action
#              [F:ZSE]ZFACTRELOC = 1 #On force la valeur à 1 pour dire que cela n'a pas été facturé car sortie diverse
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [6] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [6.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans le cadre d'une sortie diverse, nous allons considérer que cette sortie n'est pas facturable
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEKC
              Rewrite [F:ZPD]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Else
              #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
              #WERRTRAIT = 1
              #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
            Endif
          Else
          #2ème cas : La quantité à relocaliser est inférieure à la qté bonnes de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            #On sauvegarde la valeur du champ ZFACTRELOC
            Local Integer WSAVFACRELOC
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              WSAVFACRELOC = [F:ZSE]ZFACTRELOC
              If(WSAVFACRELOC=0)Then
                WSAVFACRELOC = 1
              Endif
              [F:ZSE]ZQTEKC = [F:ZAEP]ZQTEKC - WQTYATRAITER
              [F:ZSE]ZFACTRELOC = WSAVFACRELOC #On récupère la valeur de la ligne splittée
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [7] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [7.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la relocalisation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZART_FINAL
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
            [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEOK = 0
            [F:ZSE]ZQTEKC = WQTYATRAITER
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = WQTYATRAITER
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = WCOMPTEUR
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
#            [F:ZSE]ZFACTRELOC = 1 #On force la valeur à 1 pour dire que cela n'a pas été facturé car sortie diverse
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
            #Dans le cadre d'une sortie diverse, nous allons considérer que cette sortie n'est pas facturable
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEKC
              Rewrite [F:ZPD]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Else
              #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
              #WERRTRAIT = 1
              #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
            Endif
          Endif
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEKC
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Elsif([F:ZTE]ZACT=9)Then
      #------------------ACHAT DE PALETTE-----------------
      Call ECR_TRACE("Exécution d'une action : Achat de palettes par le chargeur : " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN



    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #--------------ALIMENTATION D'UNE PRECOMMANDE POUR LES ARTICLES PRESTATION DE TYPE PRESTATION--------------
    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #On vient de faire les différent BL de prestation
    #Nous allons maintenant alimenter une précommande de vente pour matérialiser le stock physique.
    #Ce traitement ne se fait que si l'axe métier défini sur l'onglet EPALIS du client est différent de GD
    If clalev([F:BPC])=0 : Local File BPCUSTOMER [BPC]: Endif
    If clalev([F:BPR])=0 : Local File BPARTNER [BPR]  : Endif
    If clalev([F:BPD])=0 : Local File BPDLVCUST [BPD] : Endif
    If clalev([F:TCU])=0 : Local File TABCUR [TCU]    : Endif
    If clalev([F:FCY])=0 : Local File FACILITY [FCY]  : Endif
    If clalev([F:ZPD])=0 : Local File ZPSORDERD [ZPD] : Endif
    If clalev([F:ITM])=0 : Local File ITMMASTER [ITM] : Endif
    If clalev([F:ZSE])=0 : Local File ZPSEPALIS [ZSE] : Endif
    Local Char WCLIENT(30) : WCLIENT = [M:ZAE0]ZBPCORD
    Local Char WAXEANA(30) : WAXEANA = "GD"
    #On va lire l'axe analytique EPALIS métier du client
    Read [F:BPC]BPC0=WCLIENT
    If(fstat=0)Then
      WAXEANA = [F:BPC]ZAXEMETEPI
    Endif
    If(WAXEANA<>"GD" or 1=1)Then
      Local Integer WPREST : WPREST = 0
      Local Char WBPCORD(30)
      Local Char WSITE(30)
      WBPCORD = [M:ZAE0]ZBPCORD
      WSITE = [M:ZAE0]ZFCY
      WPREST = 1
      If(WPREST=1)Then
        #On va maintenant regarder s'il existe déjà une précommande de vente pour ce client
        #ce site et de type EPALIS et que cette precommande est ouverte
        Local Integer WPCENTETE : WPCENTETE = 0
        Local Integer WENTETEOK : WENTETEOK = 0
        Local Char WYPSNUM(15)
        If clalev([F:ZPS])=0 : Local File ZPSORDER [F:ZPS] : Endif
        For [F:ZPS]ZPS0 Where [F:ZPS]BPCORD=WBPCORD and [F:ZPS]STOFCY=WSITE and [F:ZPS]ZFLGEPALIS=2 and [F:ZPS]ZPSDAT<=date$ and [F:ZPS]ZDATVAL=[0/0/0] and [F:ZPS]ZFLGSOLDE<>2 and [F:ZPS]ZFLGSOLMAN
& <>2
          WPCENTETE = 1
          WYPSNUM = [F:ZPS]ZPSNUM
          Call ECR_TRACE("Une précommande ouverte pour le chargeur " + WBPCORD + " existe déja (" + WYPSNUM + ")",0) From GESECRAN
        Next
        If(WPCENTETE=0)Then
          #Création de l'entête de la précommande
          Call ECR_TRACE("Aucune précommande ouverte n'existe pour ce chargeur",0) From GESECRAN
          Local Integer WSTAT
          Call NUMERO("ZEPP",WSITE,date$,"",WYPSNUM,WSTAT) From SUBANM
          If GOK<0 : Return : Endif
          If WSTAT=0
            Raz [F:ZPS]
            [F:ZPS]ZPSNUM = WYPSNUM
            Read [F:BPC]BPC0=WBPCORD
            If fstat=0
              [F:ZPS]BPCORD = WBPCORD
              [F:ZPS]BPCNAM = [F:BPC]BPCNAM
              [F:ZPS]BPCINV = [F:BPC]BPCINV
              [F:ZPS]BPCPYR = [F:BPC]BPCPYR
              [F:ZPS]CHGTYP = [F:BPC]CHGTYP
              [F:ZPS]VACBPR = [F:BPC]VACBPR
              [F:ZPS]PTE    = [F:BPC]PTE
            Endif
            # Récup infos depuis BPDLVCUST
            Filter [F:BPD] Where [F:BPD]BPCNUM=WBPCORD
              Read [F:BPD]BPD0 First
              If fstat=0
                [F:ZPS]BPAADD = [F:BPD]BPAADD
                [F:ZPS]BPTNUM = [F:BPD]BPTNUM
                [F:ZPS]MDL    = [F:BPD]MDL
              Endif
            Filter [F:BPD]
            # Récup infos depuis BPARTNER
            Read [F:BPR]BPR0=WBPCORD
            If fstat=0
              [F:ZPS]CUR = [F:BPR]CUR
              # On se place dans TABCUR pour le calcul du prix total ligne
              Read [F:TCU]TCU0=[F:BPR]CUR
              If fstat
                Raz [F:TCU]
              Endif
              [F:ZPS]LAN = [F:BPR]LAN
            Endif
            [F:ZPS]ZCUSORDREF = ""
            [F:ZPS]ZPSDAT = date$
            [F:ZPS]DEMDLVDAT = date$
            [F:ZPS]CREUSR = GUSER
            [F:ZPS]CREDAT = date$
            [F:ZPS]UPDUSR = GUSER
            [F:ZPS]UPDDAT = date$
            [F:ZPS]STOFCY = WSITE
            Read [F:FCY]FCY0=WSITE
            If fstat=0
              [F:ZPS]ZFCYAREA = [F:FCY]ZFCYAREA
            Endif
            [F:ZPS]ZPCNAT = 1
            [F:ZPS]ZFLGSOLDE = 1
            [F:ZPS]ZFLGVALIDE = 1
            [F:ZPS]ZFLGSOLMAN = 1
            [F:ZPS]ZFLGEPALIS = 2
            Local Mask SOH0
            Local Char WSECTION(30)
            [M:SOH0]SALFCY=[M:ZAE0]ZFCY
            Call INISEC([L]WSECTION,"SOH","AX1") From SUBCDE
            [F:ZPS]ZAXE1 = WSECTION
            Local Char WAXEANA(30) : WAXEANA = "GD"
            #On va lire l'axe analytique EPALIS métier du client
            Read [F:BPC]BPC0=WCLIENT
            If(fstat=0)Then
              WAXEANA = [F:BPC]ZAXEMETEPI
            Endif
            [F:ZPS]ZAXE1=WSECTION
            [F:ZPS]ZAXE2=WAXEANA
            Write [F:ZPS]
            If(fstat=0)Then
              WENTETEOK = 1
              Call ECR_TRACE("Une précommande ouverte vient d'être créée pour ce chargeur (" + WYPSNUM + ")",0) From GESECRAN
            Endif
          Else
            GERR=1
            GMESSAGE=mess(60,199,1)
            GOK=0
            Return
          Endif
        Endif
      Endif
    Endif





            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZTE]ZITMREF
            [F:ZSE]ZARTPREST = [F:ZTE]ZITMREF
            [F:ZSE]ZARTTRI = [F:ZTE]ZITMREF
            [F:ZSE]ZDATE = [F:ZTE]ZDATACT
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZTE]ZDATACT
            [F:ZSE]ZNUMLIG = 0
            [F:ZSE]ZPSLIG = 0
            [F:ZSE]ZPSNUM = WYPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            [F:ZSE]ZQTEOK = [F:ZTE]ZQTY
            [F:ZSE]ZQTY = [F:ZTE]ZQTY
            [F:ZSE]ZQTYLIV = 0
            [F:ZSE]ZSDDLIN = 0
            [F:ZSE]ZSDHNUM = WCOMPTEUR
            [F:ZSE]ZSOHNUM = ""
            [F:ZSE]ZTYPPAL = 1
            [F:ZSE]ZFACTRELOC = 1 #On force la valeur à 1 car un achat de palette par le chargeur à l'extérieur ne peut pas être facturé
            [F:ZSE]ZTYPPREST = 0
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZTE]ZFCY
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZTE]ZPAYS
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif



    Elsif([F:ZTE]ZACT=13)Then
      #------------------ACHAT DE PALETTE Interne / Externe par le chargeur-----------------
      Call ECR_TRACE("Exécution d'une action : Achat de palettes par le chargeur : " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN

      #RECH_TARIF_VENTE(WCLIENT,WADRLIVR,WDATE,WSITE,WARTICLE,WUNITE,WMDL,WQUANTITE,WPRIX)
      #Dbgaff
      Local Decimal WPRIXBRUT
      #Call RECH_TARIF_VENTE([M:ZAE0]ZBPCORD,"C01",[M:ZAE1]ZDATACTG,[M:ZAE1]ZFCYREC,"01EUR1CHX","UN","17",1,WPRIXBRUT)
#      Call RECH_TARIF_VENTE([M:ZAE1]WBPCORD,[M:ZAE1]WBPAADD,[M:ZAE1]ZDATACTG,[M:ZAE1]ZFCYREC,[F:ZTE]ZITMREF,"UN",[M:ZAE1]ZMDL,[F:ZTE]ZQTY,WPRIXBRUT)
#      Call ECR_TRACE("Prix de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " -> " + num$(WPRIXBRUT) + "  l'unité",0) From GESECRAN


    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #--------------ALIMENTATION D'UNE PRECOMMANDE POUR LES ARTICLES PRESTATION DE TYPE PRESTATION--------------
    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #----------------------------------------------------------------------------------------------------------
    #On vient de faire les différent BL de prestation
    #Nous allons maintenant alimenter une précommande de vente pour matérialiser le stock physique.
    #Ce traitement ne se fait que si l'axe métier défini sur l'onglet EPALIS du client est différent de GD
    If clalev([F:BPC])=0 : Local File BPCUSTOMER [BPC]: Endif
    If clalev([F:BPR])=0 : Local File BPARTNER [BPR]  : Endif
    If clalev([F:BPD])=0 : Local File BPDLVCUST [BPD] : Endif
    If clalev([F:TCU])=0 : Local File TABCUR [TCU]    : Endif
    If clalev([F:FCY])=0 : Local File FACILITY [FCY]  : Endif
    If clalev([F:ZPD])=0 : Local File ZPSORDERD [ZPD] : Endif
    If clalev([F:ITM])=0 : Local File ITMMASTER [ITM] : Endif
    If clalev([F:ZSE])=0 : Local File ZPSEPALIS [ZSE] : Endif
    Local Char WCLIENT(30) : WCLIENT = [M:ZAE0]ZBPCORD
    Local Char WAXEANA(30) : WAXEANA = "GD"
    #On va lire l'axe analytique EPALIS métier du client
    Read [F:BPC]BPC0=WCLIENT
    If(fstat=0)Then
      WAXEANA = [F:BPC]ZAXEMETEPI
    Endif
    If(WAXEANA<>"GD")Then
      Local Integer WPREST : WPREST = 0
      Local Char WBPCORD(30)
      Local Char WSITE(30)
      WBPCORD = [M:ZAE0]ZBPCORD
      WSITE = [M:ZAE0]ZFCY
      WPREST = 1
      If(WPREST=1)Then
        #On va maintenant regarder s'il existe déjà une précommande de vente pour ce client
        #ce site et de type EPALIS et que cette precommande est ouverte
        Local Integer WPCENTETE : WPCENTETE = 0
        Local Integer WENTETEOK : WENTETEOK = 0
        Local Char WYPSNUM(15)
        If clalev([F:ZPS])=0 : Local File ZPSORDER [F:ZPS] : Endif
        For [F:ZPS]ZPS0 Where [F:ZPS]BPCORD=WBPCORD and [F:ZPS]STOFCY=WSITE and [F:ZPS]ZFLGEPALIS=2 and [F:ZPS]ZPSDAT<=date$ and [F:ZPS]ZDATVAL=[0/0/0] and [F:ZPS]ZFLGSOLDE<>2 and [F:ZPS]ZFLGSOLMAN
& <>2
          WPCENTETE = 1
          WYPSNUM = [F:ZPS]ZPSNUM
          Call ECR_TRACE("Une précommande ouverte pour le chargeur " + WBPCORD + " existe déja (" + WYPSNUM + ")",0) From GESECRAN
        Next
        If(WPCENTETE=0)Then
          #Création de l'entête de la précommande
          Call ECR_TRACE("Aucune précommande ouverte n'existe pour ce chargeur",0) From GESECRAN
          Local Integer WSTAT
          Call NUMERO("ZEPP",WSITE,date$,"",WYPSNUM,WSTAT) From SUBANM
          If GOK<0 : Return : Endif
          If WSTAT=0
            Raz [F:ZPS]
            [F:ZPS]ZPSNUM = WYPSNUM
            Read [F:BPC]BPC0=WBPCORD
            If fstat=0
              [F:ZPS]BPCORD = WBPCORD
              [F:ZPS]BPCNAM = [F:BPC]BPCNAM
              [F:ZPS]BPCINV = [F:BPC]BPCINV
              [F:ZPS]BPCPYR = [F:BPC]BPCPYR
              [F:ZPS]CHGTYP = [F:BPC]CHGTYP
              [F:ZPS]VACBPR = [F:BPC]VACBPR
              [F:ZPS]PTE    = [F:BPC]PTE
            Endif
            # Récup infos depuis BPDLVCUST
            Filter [F:BPD] Where [F:BPD]BPCNUM=WBPCORD
              Read [F:BPD]BPD0 First
              If fstat=0
                [F:ZPS]BPAADD = [F:BPD]BPAADD
                [F:ZPS]BPTNUM = [F:BPD]BPTNUM
                [F:ZPS]MDL    = [F:BPD]MDL
              Endif
            Filter [F:BPD]
            # Récup infos depuis BPARTNER
            Read [F:BPR]BPR0=WBPCORD
            If fstat=0
              [F:ZPS]CUR = [F:BPR]CUR
              # On se place dans TABCUR pour le calcul du prix total ligne
              Read [F:TCU]TCU0=[F:BPR]CUR
              If fstat
                Raz [F:TCU]
              Endif
              [F:ZPS]LAN = [F:BPR]LAN
            Endif
            [F:ZPS]ZCUSORDREF = ""
            [F:ZPS]ZPSDAT = date$
            [F:ZPS]DEMDLVDAT = date$
            [F:ZPS]CREUSR = GUSER
            [F:ZPS]CREDAT = date$
            [F:ZPS]UPDUSR = GUSER
            [F:ZPS]UPDDAT = date$
            [F:ZPS]STOFCY = WSITE
            Read [F:FCY]FCY0=WSITE
            If fstat=0
              [F:ZPS]ZFCYAREA = [F:FCY]ZFCYAREA
            Endif
            [F:ZPS]ZPCNAT = 1
            [F:ZPS]ZFLGSOLDE = 1
            [F:ZPS]ZFLGVALIDE = 1
            [F:ZPS]ZFLGSOLMAN = 1
            [F:ZPS]ZFLGEPALIS = 2
            Local Mask SOH0
            Local Char WSECTION(30)
            [M:SOH0]SALFCY=[M:ZAE0]ZFCY
            Call INISEC([L]WSECTION,"SOH","AX1") From SUBCDE
            [F:ZPS]ZAXE1 = WSECTION
            Local Char WAXEANA(30) : WAXEANA = "GD"
            #On va lire l'axe analytique EPALIS métier du client
            Read [F:BPC]BPC0=WCLIENT
            If(fstat=0)Then
              WAXEANA = [F:BPC]ZAXEMETEPI
            Endif
            [F:ZPS]ZAXE1=WSECTION
            [F:ZPS]ZAXE2=WAXEANA
            Write [F:ZPS]
            If(fstat=0)Then
              WENTETEOK = 1
              Call ECR_TRACE("Une précommande ouverte vient d'être créée pour ce chargeur (" + WYPSNUM + ")",0) From GESECRAN
            Endif
          Else
            GERR=1
            GMESSAGE=mess(60,199,1)
            GOK=0
            Return
          Endif
        Endif
      Endif
    Endif
    #A ce stade, une précommande existe
    #On va maintenant récupérer l'ensemble des lignes d'article de prestations
    #TODO
    #Etape de la mise en place
    #Soit l'action d'achat de palettes est faite à EPALIA ou à un externe. Le traitement est le même dans les 2 cas, sauf que dans le cas
    #d'un achat à EPALIA, il faudra faire un BL en plus symbolisant la vente.




#    For[F:ZIE]ZIE5 Where [F:ZIE]CODE_CHARGEU=[M:ZAE0]ZBPCORD and

#
#
#
#
#
#            Raz [F:ZSE]
#            [F:ZSE]ZART = [F:ZTE]ZITMREF
#            [F:ZSE]ZARTPREST = [F:ZTE]ZITMREF
#            [F:ZSE]ZARTTRI = [F:ZTE]ZITMREF
#            [F:ZSE]ZDATE = [F:ZTE]ZDATACT
#            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
#            [F:ZSE]ZSAVDATACT = [F:ZTE]ZDATACT
#            [F:ZSE]ZNUMLIG = 0
#            [F:ZSE]ZPSLIG = 0
#            [F:ZSE]ZPSNUM = WYPSNUM
#            [F:ZSE]ZQTEATRANSF = 0
#            [F:ZSE]ZQTEKC = 0
#            [F:ZSE]ZQTEOK = [F:ZTE]ZQTY
#            [F:ZSE]ZQTY = [F:ZTE]ZQTY
#            [F:ZSE]ZQTYLIV = 0
#            [F:ZSE]ZSDDLIN = 0
#            [F:ZSE]ZSDHNUM = WCOMPTEUR
#            [F:ZSE]ZSOHNUM = ""
#            [F:ZSE]ZTYPPAL = 1
#            [F:ZSE]ZFACTRELOC = 1 #On force la valeur à 1 car un achat de palette par le chargeur à l'extérieur ne peut pas être facturé
#            [F:ZSE]ZTYPPREST = 0
#            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
#            [F:ZSE]ZSITECOLL = [F:ZTE]ZFCY
#            #--------------------------------------------------------------------------------------
#            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
#            [F:ZSE]ZPAYSCOLL = [F:ZTE]ZPAYS
#            #--------------------------------------------------------------------------------------
#            Local Integer WSTAT
#            Local Char WSEQ(15)
#            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
#            If WSTAT=0
#              [F:ZSE]ZSEQ = WSEQ
#            Endif
#            Write [F:ZSE]
#            If(fstat<>0)Then
#              WERRTRAIT = 1
#              Call ECR_TRACE(" [8] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
#            Else
#              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
#            Endif



    Elsif([F:ZTE]ZACT=3)Then
      #------------------TRANSFORMATION------------------
      Call ECR_TRACE("Exécution d'une action : Transformation de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF,0) From GESECRAN
      #Nous allons maintenant récupérer l'ensemble des lignes de la vue ZACTEPI pour
      #ce client
      #ce site
      #cet article final dont les Qté à transf. sont différentes de 0
      Local Decimal WQTYATRAITER : WQTYATRAITER = [F:ZTE]ZQTY
      Local Integer WCASE : WCASE = 0
      For [F:ZAEP]ZAEP0 Where [F:ZAEP]BPCORD=[F:ZTE]ZBPCORD and [F:ZAEP]STOFCY=[F:ZTE]ZFCY and [F:ZAEP]ZART_FINAL=[F:ZTE]ZITMREF and [F:ZAEP]ZQTEATRANSF>0 and [F:ZAEP]ZQTYLIV=0
        #On ne fait le traitement que si WQTYATRAITER>0
        If(WQTYATRAITER>0)Then
          #Les enregistrements sont triés dans le sens pour une même ligne de commande, la dernière traitée
          #concerne les palettes bonnes
          #2 cas peuvent se présenter maintenant
          #1er cas : La quantité à transformer est supérieure à la qté à transformer de l'enregistrement courant
          If(WQTYATRAITER>=[F:ZAEP]ZQTEATRANSF)Then
            WCASE = 1
            #On passe uniquement la qté à transformer dans la quanité bonne
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              If([F:ZAEP]COEFTRANS<>0)Then
                [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK + ([F:ZAEP]ZQTEATRANSF/[F:ZAEP]COEFTRANS)
              Else
                [F:ZSE]ZQTEOK = [F:ZAEP]ZQTEOK + [F:ZAEP]ZQTEATRANSF
              Endif
              [F:ZSE]ZQTEATRANSF = 0
              [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [11] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [11.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif


            #On va maintenant alimenter nos tableaux
            #On regarde si l'article de prestation est déjà présent dans le tableau
            #mais uniquement si la ligne est facturable et que le type de prestation est égal à 6
            If([F:ZAEP]ZFACTRELOC=2 and [F:ZSE]ZTYPPREST=6)Then
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #La ligne existe déjà
                  #On va juste augmenter la quantité
                  WQTY(I) = WQTY(I) + [F:ZSE]ZQTEOK
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                #Nous allons l'ajouter
                WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                WQTY(WINDTAB)      = [F:ZSE]ZQTEOK
                WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                #On augmente l'indice du tableau
                WINDTAB = WINDTAB + 1
              Endif
              #On va maintenant repasser le champ ZFACTRELOC à 1
#              Read[F:ZSE]ZSE3=WSEQ
              [F:ZSE]ZFACTRELOC = 1
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [14] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Else
                Call SET_HISTO_STOCK([F:ZSE]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Endif
            Else



              #On va également augmenter la qté de l'article de prestation associé
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                If([F:ZAEP]COEFTRANS<>0)Then
                  [F:ZPD]QTY = [F:ZPD]QTY + ([F:ZAEP]ZQTEATRANSF/[F:ZAEP]COEFTRANS)
                  [F:ZPD]QTYOK = [F:ZPD]QTYOK + ([F:ZAEP]ZQTEATRANSF/[F:ZAEP]COEFTRANS)
                  [F:ZPD]QTYKC = [F:ZPD]QTYKC - ([F:ZAEP]ZQTEATRANSF/[F:ZAEP]COEFTRANS)
                Else
                  [F:ZPD]QTY = [F:ZPD]QTY + [F:ZAEP]ZQTEATRANSF
                  [F:ZPD]QTYOK = [F:ZPD]QTYOK + [F:ZAEP]ZQTEATRANSF
                  [F:ZPD]QTYKC = [F:ZPD]QTYKC - [F:ZAEP]ZQTEATRANSF
                Endif
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [12] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                WERRTRAIT = 1
                Call ECR_TRACE(" [12.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif

            Endif

          Else
          #2ème cas : La quantité à transformer est inférieure à la qté à transformer de l'enregistrement courant
            #Dans un premier temps on modifie l'enregistrement existant pour qu'il représente le reste.
            #On recherche l'enregistrement correspondant de la table ZPSEPALIS
            WCASE = 2
            Local Integer WZTYPPREST
            Read [F:ZSE]ZSE3=[F:ZAEP]ZSEQ
            If(fstat=0)Then
              [F:ZSE]ZQTEOK = 0
              [F:ZSE]ZQTEATRANSF = [F:ZAEP]ZQTEATRANSF - WQTYATRAITER
              WZTYPPREST = [F:ZSE]ZTYPPREST
              Call SET_HISTO_STOCK([F:ZAEP]ZSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [13] ERREUR lors de la sauvegarde de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [13.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Endif
            #Dans un second temps, on va ajouter un nouvel enregistrement dans la table ZPSEPALIS pour représenter la transformation
            Raz [F:ZSE]
            [F:ZSE]ZART = [F:ZAEP]ZARTTRANSF
            [F:ZSE]ZARTPREST = [F:ZAEP]ZARTPREST
            [F:ZSE]ZARTTRI = [F:ZAEP]ZARTTRI
            [F:ZSE]ZDATE = [F:ZAEP]DATE_TRI
            [F:ZSE]ZDATEACT = [F:ZTE]ZDATACT
            [F:ZSE]ZSAVDATACT = [F:ZAEP]ZSAVDATACT
            [F:ZSE]ZNUMLIG = [F:ZAEP]ZSOPLIN
            [F:ZSE]ZPSLIG = [F:ZAEP]ZPSLIG
            [F:ZSE]ZPSNUM = [F:ZAEP]ZPSNUM
            [F:ZSE]ZQTEATRANSF = 0
            [F:ZSE]ZQTEKC = 0
            If([F:ZAEP]COEFTRANS<>0)Then
              [F:ZSE]ZQTEOK = (WQTYATRAITER/[F:ZAEP]COEFTRANS)
            Else
              [F:ZSE]ZQTEOK = WQTYATRAITER
            Endif
            [F:ZSE]ZQTY = [F:ZAEP]ZQTY
            [F:ZSE]ZQTYLIV = [F:ZAEP]ZQTYLIV
            [F:ZSE]ZSDDLIN = [F:ZAEP]ZSDDLIN
            [F:ZSE]ZSDHNUM = [F:ZAEP]ZSDHNUM
            [F:ZSE]ZSOHNUM = [F:ZAEP]ZSOHNUM
            [F:ZSE]ZTYPPAL = [F:ZAEP]ZTYPPAL
            [F:ZSE]ZFACTRELOC = [F:ZAEP]ZFACTRELOC
            [F:ZSE]ZTYPPREST = WZTYPPREST
            #---Le 09/11/2016 - Ajout suite à la mise en place du champ ZSITECOLL dans ZPSEPALIS---
            [F:ZSE]ZSITECOLL = [F:ZAEP]ZSITECOLL
            #--------------------------------------------------------------------------------------
            #---Le 16/11/2016 - Ajout suite à la mise en place du champ ZPAYSCOLL dans ZPSEPALIS---
            [F:ZSE]ZPAYSCOLL = [F:ZAEP]ZPAYSCOLL
            #--------------------------------------------------------------------------------------
            Local Integer WSTAT
            Local Char WSEQ(15)
            Call NUMERO("ZPSE","",date$,"",WSEQ,WSTAT) From SUBANM
            If WSTAT=0
              [F:ZSE]ZSEQ = WSEQ
            Endif
            Write [F:ZSE]
            If(fstat<>0)Then
              WERRTRAIT = 1
              Call ECR_TRACE(" [14] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
            Else
              Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"C") From ZWSEPALISB
            Endif
            #On va maintenant alimenter nos tableaux
            #On regarde si l'article de prestation est déjà présent dans le tableau
            #mais uniquement si la ligne est facturable et que le type de prestation est égal à 6
            If([F:ZAEP]ZFACTRELOC=2 and [F:ZSE]ZTYPPREST=6)Then
              Local Integer WARTPRES : WARTPRES = 0 #Si l'article est présent dans le tableau, la valeur sera passée à 1
              For I=0 To WINDTAB-1
                If(WITMREF(I)=[F:ZSE]ZARTPREST and WARTTRI(I)=[F:ZSE]ZARTTRI and WTYPPAL(I)=[F:ZSE]ZTYPPAL and WPAYSCOLL(I)=[F:ZSE]ZPAYSCOLL and WSITECOLL(I)=[F:ZSE]ZSITECOLL
& and WCODCLTCOLL(I)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM))Then
                  #La ligne existe déjà
                  #On va juste augmenter la quantité
                  WQTY(I) = WQTY(I) + [F:ZSE]ZQTEOK
                  WARTPRES = 1
                Endif
              Next
              If(WARTPRES=0)Then
                #La ligne de cet article de prestation n'existe pas encore dans notre tableau
                #Nous allons l'ajouter
                WITMREF(WINDTAB)   = [F:ZSE]ZARTPREST
                WQTY(WINDTAB)      = [F:ZSE]ZQTEOK
                WARTTRI(WINDTAB)   = [F:ZSE]ZARTTRI
                WZPSNUM(WINDTAB)   = [F:ZSE]ZPSNUM
                WZPDLIN(WINDTAB)   = [F:ZSE]ZPSLIG
                WTYPPAL(WINDTAB)   = [F:ZSE]ZTYPPAL
                WPAYSCOLL(WINDTAB) = [F:ZSE]ZPAYSCOLL
                WSITECOLL(WINDTAB) = [F:ZSE]ZSITECOLL
                WCODCLTCOLL(WINDTAB)=func GET_CODCLTCHG([F:ZSE]ZSOHNUM)
                #On augmente l'indice du tableau
                WINDTAB = WINDTAB + 1
              Endif
              #On va maintenant repasser le champ ZFACTRELOC à 1
              Read[F:ZSE]ZSE3=WSEQ
              [F:ZSE]ZFACTRELOC = 1
              Rewrite [F:ZSE]
              If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [14] ERREUR lors de la création de l'enregistrement de la table ZPSEPALIS",1) From GESECRAN
              Else
                Call SET_HISTO_STOCK(WSEQ,[F:ZTE]ZCOMPTEUR,"M") From ZWSEPALISB
              Endif
            Else
              #Sinon on augmente manuellement la quantité livrée de la ligne de la précommande
              Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
              If(fstat=0)Then
                [F:ZPD]QTYLIV = [F:ZPD]QTYLIV + [F:ZSE]ZQTEOK
                Rewrite [F:ZPD]
                If(fstat<>0)Then
                  WERRTRAIT = 1
                  Call ECR_TRACE(" [5] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
                Endif
              Else
                #Mise en commentaire le 22/04/2016 suite à l'action achat de palette
                #WERRTRAIT = 1
                #Call ECR_TRACE(" [5.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Endif
            #On va également augmenter la qté de l'article de prestation associé
            Read [F:ZPD]ZPD0=[F:ZAEP]ZPSNUM;[F:ZAEP]ZPSLIG
            If(fstat=0)Then
              If([F:ZAEP]COEFTRANS<>0)Then
                [F:ZPD]QTY = [F:ZPD]QTY + (WQTYATRAITER/[F:ZAEP]COEFTRANS)
                [F:ZPD]QTYOK = [F:ZPD]QTYOK + (WQTYATRAITER/[F:ZAEP]COEFTRANS)
#                [F:ZPD]QTYKC = [F:ZPD]QTYKC - (WQTYATRAITER/[F:ZAEP]COEFTRANS)
              Else
                [F:ZPD]QTY = [F:ZPD]QTY + WQTYATRAITER
                [F:ZPD]QTYOK = [F:ZPD]QTYOK + WQTYATRAITER
#                [F:ZPD]QTYKC = [F:ZPD]QTYKC - WQTYATRAITER
              Endif
              Rewrite [F:ZPD]
               If(fstat<>0)Then
                WERRTRAIT = 1
                Call ECR_TRACE(" [15] ERREUR lors de la mise à jour de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
              Endif
            Else
              WERRTRAIT = 1
              Call ECR_TRACE(" [15.1] ERREUR lors de la récupération de l'enregistrement de la table ZPSORDERD",1) From GESECRAN
           Endif
          Endif
          #Si l'article est un article de référence alors je diminue WQTYATRAITER de [F:ZAEP]ZQTEKC
          If([F:ZAEP]ARTREF=2)Then
            If(WCASE=1)Then
              WQTYATRAITER = WQTYATRAITER -[F:ZAEP]ZQTEATRANSF
            Elsif(WCASE=2)Then
              WQTYATRAITER = 0
            Endif
          Endif
        Endif
      Next
    Endif
    If(WERRTRAIT=0)Then
      Local Char WACTION(30) : WACTION = ""
      If([F:ZTE]ZACT=1)Then
        WACTION = "Réparation"
      Elsif([F:ZTE]ZACT=2)Then
        WACTION = "Relocalisation"
      Elsif([F:ZTE]ZACT=3)Then
        WACTION = "Transformation"
      Elsif([F:ZTE]ZACT=5)Then
        WACTION = "Entrée diverse"
      Elsif([F:ZTE]ZACT=6)Then
        WACTION = "Sortie diverse (Ok)"
      Elsif([F:ZTE]ZACT=7)Then
        WACTION = "Destruction"
      Elsif([F:ZTE]ZACT=8)Then
        WACTION = "Trasnfert (Ok)"
      Elsif([F:ZTE]ZACT=12)Then
        WACTION = "Trasnfert (KC)"
      Elsif([F:ZTE]ZACT=11)Then
        WACTION = "Sortie diverse (KC)"
      Endif
      Call ECR_TRACE("     -----> Action : " + WACTION + " de " + num$([F:ZTE]ZQTY) + " palette(s) " + [F:ZTE]ZITMREF + " --OK--",0) From GESECRAN
      #On va mettre à jour l'enregistrement pour dire que la ligne d'action a été effectuée
      [F:ZTE]ZACTOK = 2
      [F:ZTE]ZEXEACT=date$
      [F:ZTE]ZEXEACTH=time$
      Rewrite [F:ZTE]
    Endif
  Next
  #<-----MODIFICATION JBS DU 25/02/2019-----
  #On va lancer le traitement permattant la
  #création de la conterpartie du transfert
  Call SPE_CREATE_CTRSF() From ZCREATETRSFENT
  #---------------------------------------->


  #Nous avons maintenant alimenté des tableaux que l'on va écrire dans un fichier texte
  #pour les importer
  Local Char ZNOMFIC(250), WMESS(250)
  Local Integer WERR
  # Définition complète du nom du fichier
  ZNOMFIC=GZREPLIV
  If right$(GZREPLIV,len(GZREPLIV))<>"\"
      ZNOMFIC += "\"
  Endif
  If(WINDTAB<>0)Then
    #On va parcourir les tableaux
    Local Char WFICHIER(250)
Call ECR_TRACE("Etape 1",0) From GESECRAN
    WFICHIER = ZNOMFIC + "ZLIV_CEPI_" + WCOMPTEUR + ".TXT"
    Call ECR_TRACE("Création du fichier d'import livraison pour le client " + [F:ZTE]ZBPCORD,0) From GESECRAN
    # Création du fichier
    Onerrgo PBCREATFICTXT
Call ECR_TRACE("Etape 2",0) From GESECRAN
    Openo WFICHIER,0
    Onerrgo
    If WERR>0
      Case WERR
        When 20
          WERRTRAIT = 1
          INFO = "[7] - Répertoire inexistant. Arrêt du traitement."
        When 27
          WERRTRAIT = 1
          INFO = "[8] - Accès impossible (permission refusée) au répertoire. Arrêt du traitement."
        When 44
          WERRTRAIT = 1
          INFO = "[9] - Problème de place disque sur le répertoire. Arrêt du traitement."
        When Default
          WERRTRAIT = 1
          INFO = "[10] - Problème système rencontré lors de la création du fichier ("+errmes$(WERR)+"). Arrêt du traitement."
      Endcase
      End
    Endif
Call ECR_TRACE("Etape 3",0) From GESECRAN
    adxirs = chr$(13)+chr$(10)
    adxifs = ";"
    # Entête de la livraison
    # E, No livraison, Site vente, Site expédition, Client commande, Adresse client, Devise, Date expédition, Code chauffeur, No commande EPALIS, No export EPALIS
    Local Char WSITE(30) : WSITE = [F:ZTE]ZFCY
    If clalev([F:ZBPC])=0 : Local File BPCUSTOMER [F:ZBPC] : Endif
    #Lecture de l'enregistrement
    Read [F:ZBPC]BPC0=[F:ZTE]ZBPCORD
    If(fstat=0)Then
      If([F:ZBPC]ZFACTURATION=2)Then
        WSITE = "E"    #Facturation globale
      Endif
    Endif
Call ECR_TRACE("Etape 4",0) From GESECRAN
    #Lecture de la précommande
    If clalev([F:ZPS])=0 : Local File ZPSORDER [F:ZPS] : Endif
    Read [F:ZPS]ZPS0=[F:ZSE]ZPSNUM
    #<-------- MODIF JBS du 20/03/2017 ---------
    #On ne va plus chercher l'axe analytique 2 sur la précommande mais dans le paramétrage du
    Local Char WAXE2(10)
    If clalev([F:BPCA])=0 : Local File BPCUSTOMER [F:BPCA] : Endif
    Read[F:BPCA]BPC0=[F:ZTE]ZBPCORD
    If(fstat=0)Then
      If([F:BPCA]ZAXEMETEPI<>"")Then
        WAXE2 = [F:BPCA]ZAXEMETEPI
      Endif
    Endif
    If(WAXE2="")Then
      WAXE2 = [F:ZPS]ZAXE2
    Endif
    #client chargeur
    #------------------------------------------>
    #----------MODIFICATION JBS DU 14/11/2017----------
#    Wrseq "E","",WSITE,[F:ZTE]ZFCYF,[F:ZTE]ZBPCORDF,[F:ZTE]ZBPAADD,[F:ZBPC]CUR,[F:ZTE]ZDATACT,"00001",WCOMPTEUR,0,[F:ZPS]ZAXE1,WAXE2
    Local Char WZACTNUM(30) : WZACTNUM = [F:ZTE]ZACTNUM
    Local Date WDATEFFET : WDATEFFET = [F:ZTE]ZDATEFFET
    If(WDATEFFET=[0/0/0])Then
      WDATEFFET = [F:ZTE]ZDATACT
    Endif
    #<---------MODIFICATION JBS DU 17/05/2018----------
    #Il faut maintenant passer dans le modèle d'import le champ DLVDAT
Call ECR_TRACE("Etape 5",0) From GESECRAN
    Wrseq "E","",WSITE,[F:ZTE]ZFCYF,[F:ZTE]ZBPCORDF,[F:ZTE]ZBPAADD,[F:ZBPC]CUR,WDATEFFET,WDATEFFET,"00001",WZACTNUM,0,[F:ZPS]ZAXE1,WAXE2,[F:ZTE]ZDATACT
Call ECR_TRACE("Etape 6",0) From GESECRAN
    #Wrseq "E","",WSITE,[F:ZTE]ZFCYF,[F:ZTE]ZBPCORDF,[F:ZTE]ZBPAADD,[F:ZBPC]CUR,WDATEFFET,"00001",WZACTNUM,0,[F:ZPS]ZAXE1,WAXE2,[F:ZTE]ZDATACT
    #------------------------------------------------->
    #--------------------------------------------------
    #<-------- MODIF JBS du 14/03/2017 ---------
    #A ce stade nous avons un tableau qu'il va falloir compacter.
    #En effet plusieurs lignes font référence au même article et au même prix
    #Dans ce cas, nous allons condenser les lignes
    Local Char WTITMREF(60)(0..99)    # Tableau des articles de prestation
    Local Decimal WTQTY(0..99)        # Tableau des quantités
    Local Decimal WTPRIX(0..99)       # Tableau des prix
    Local Char WTARTTRI(60)(0..99)    # Tableau des article de tris
    Local Char WTZPSNUM(60)(0..99)    # Tableau des n° de précommande
    Local Integer WTZPDLIN(0..99)     # Tableau des n° de ligne de la précommande
    Local Integer WTINDTAB            # Index du tableau temporaire
    #------------------------------------------>
    #on va maintenant boucle sur nos tableaux pour écrire les lignes
    For I=0 To WINDTAB-1
      # Ligne de la livraison
      # L, Code article, Quantité livrée, Prix brut, Valeur1 remise/frais, Valeur2 remise/frais, Valeur3 remise/frais,Code art tri, qualité article
      Local Decimal WPRIX : WPRIX = 0
      Local Date WDATEREF : WDATEREF = [F:ZTE]ZDATEFFET
      If(WDATEREF=[0/0/0])Then
        WDATEREF = [F:ZTE]ZDATACT
      Endif
      #on va récupérer le prix de l'article de prestation
      #<-------- MODIF JBS du 24/01/2019 ---------
      #A la demande express de SLB, la date pour calculer le prix dans les actions
      #est la date d'action et non la date d'effet
      #WPRIX = func GET_TARIF_RELOC(WITMREF(I),[F:ZTE]ZBPCORDF,[F:ZTE]ZBPAADD,[F:ZTE]ZFCYF,WQTY(I),WSITECOLL(I),WPAYSCOLL(I),WTYPPAL(I),WARTTRI(I),WCODCLTCOLL(I),WDATEREF)
      WPRIX = func GET_TARIF_RELOC(WITMREF(I),[F:ZTE]ZBPCORDF,[F:ZTE]ZBPAADD,[F:ZTE]ZFCYF,WQTY(I),WSITECOLL(I),WPAYSCOLL(I),WTYPPAL(I),WARTTRI(I),WCODCLTCOLL(I),[F:ZTE]ZDATACT)
      #------------------------------------------>
      #<-------- MODIF JBS du 14/03/2017 ---------
      #On va rechercher dans notre tableau temportaire si l'entrée n'existe pas déjà
      Local Integer WLIGEXIST : WLIGEXIST = 0
      For H=0 To WTINDTAB-1
#        If(WTITMREF(H)=WITMREF(I) and WTPRIX(H)=WPRIX and WTARTTRI(H)=WARTTRI(I) and WTZPSNUM(H)=WZPSNUM(I) and WTZPDLIN(H)=WZPDLIN(I))Then
        If(WTITMREF(H)=WITMREF(I) and WTPRIX(H)=WPRIX and WTZPSNUM(H)=WZPSNUM(I) and WTZPDLIN(H)=WZPDLIN(I))Then
          #Nous sommes dans le cas où une entrée existe dans notre tableau temporaire
          #On va donc juste ajouter la quantité
          WTQTY(H) += WQTY(I)
          WTARTTRI(H) = ""
          WLIGEXIST = 1
          Break
        Endif
      Next
      If(WLIGEXIST=0)Then
        #On n'a pas trouvé une ligne, on va donc en ajouter une
        #dans notre tableau temporaire
        WTITMREF(WTINDTAB) = WITMREF(I)
        WTPRIX(WTINDTAB)   = WPRIX
        WTARTTRI(WTINDTAB) = WARTTRI(I)
        WTZPSNUM(WTINDTAB) = WZPSNUM(I)
        WTZPDLIN(WTINDTAB) = WZPDLIN(I)
        WTQTY(WTINDTAB)    = WQTY(I)
        WTINDTAB += 1
      Endif
      #------------------------------------------>
#      Wrseq "L",WITMREF(I),WQTY(I),WPRIX,0,0,0,WARTTRI(I),1,WZPSNUM(I),WZPDLIN(I),[F:ZPS]ZAXE1,[F:ZPS]ZAXE2
    Next
Call ECR_TRACE("Etape 7",0) From GESECRAN
    #<-------- MODIF JBS du 14/03/2017 ---------
    #On va maintenant écrire dans le fichier à partir du tableau temporaire
    For I=0 To WTINDTAB-1
Call ECR_TRACE("Etape 8-" + num$(I),0) From GESECRAN
      Wrseq "L",WTITMREF(I),WTQTY(I),WTPRIX(I),0,0,0,WTARTTRI(I),1,WTZPSNUM(I),WTZPDLIN(I),[F:ZPS]ZAXE1,WAXE2
    Next
    #------------------------------------------>
    # Fermeture du fichier
Call ECR_TRACE("Etape 9",0) From GESECRAN
    Openo
Call ECR_TRACE("Etape 10",0) From GESECRAN
    # Import du fichier
    #Call ECR_TRACE("Début de l'importation du fichier : |" + WFICHIER + "|",0) from GESECRAN
Call ECR_TRACE("Etape 11",0) From GESECRAN
    Gosub OUVRE From GIMPOBJ
Call ECR_TRACE("Etape 12",0) From GESECRAN
    [M:IMP2]MODIMP="ZRELOCEPI"
    [M:IMP2]TYPEXP=2
    [M:IMP2]NOMIMP=WFICHIER
    GSERVEUR=1
Call ECR_TRACE("Etape 13",0) From GESECRAN
    Gosub EXEC From GIMPOBJ
Call ECR_TRACE("Etape 14",0) From GESECRAN
    GSERVEUR=0
    #Call ECR_TRACE("Fin de l'importation du fichier",0) from GESECRAN
    # On va maintenant rechercher la livraison pour savoir si tout c'est bien passé
    If clalev([F:SDH2])=0 : Local File SDELIVERY [F:SDH2] : Endif
    If clalev([F:SDD2])=0 : Local File SDELIVERYD [F:SDD2] : Endif
    Local Char WSDHNUM(30) : WSDHNUM = ""
    #----------MODIFICATION JBS DU 14/11/2017----------
#    Filter [F:SDH2] Where [F:SDH2]ZSOHNUMEPI=WCOMPTEUR
Call ECR_TRACE("Etape 15",0) From GESECRAN
    Filter [F:SDH2] Where [F:SDH2]ZSOHNUMEPI=WZACTNUM
    #--------------------------------------------------
Call ECR_TRACE("Etape 16",0) From GESECRAN
    Read [F:SDH2]SDH0 First
Call ECR_TRACE("Etape 17",0) From GESECRAN
    If fstat
#          INFO = "[13] - Erreur de création de la livraison depuis la commande."
    Else
#          INFO = "Livraison numéro "+[F:SDH2]SDHNUM+" correctement créé."
          Call ECR_TRACE("La livraison " + [F:SDH2]SDHNUM + " a été correctement crée.",0) From GESECRAN
      WSDHNUM = [F:SDH2]SDHNUM
      #Nous avons maintenant le n° de livraison
      #Nous allons modifier le champ [F:ZSE]ZSDHNUM qui vaut pour l'instant WCOMPTEUR
Call ECR_TRACE("Etape 18",0) From GESECRAN
      For [F:ZSE]ZSE0 Where [F:ZSE]ZSDHNUM=WCOMPTEUR
        #On ne renseigne le N° de BL et la ligne uniquement pour les lignes facturable
        If([F:ZSE]ZFACTRELOC=2)Then
          [F:ZSE]ZSDHNUM = WSDHNUM
          #On va maintenant mettre à jour le n° de ligne de livraison
          Read [F:SDD2]ZPS2=[F:ZSE]ZARTPREST;[F:ZSE]ZARTTRI
          If(fstat=0)Then
            [F:ZSE]ZSDDLIN=[F:SDD2]SDDLIN
          Endif
        Else
          [F:ZSE]ZSDHNUM = "Fact à la prest."
          [F:ZSE]ZSDDLIN = 0
        Endif
        Call SET_HISTO_STOCK([F:ZSE]ZSEQ,WCOMPTEUR,"M") From ZWSEPALISB
        Rewrite [F:ZSE]
      Next
Call ECR_TRACE("Etape 19",0) From GESECRAN
      #Nous allons également renseigner le n°de la livraison dans la table des actions EPALIS
      For [F:ZTE]ZTE1 Where [F:ZTE]ZCOMPTEUR=WCOMPTEUR
        [F:ZTE]ZSDHNUM = WSDHNUM
        Rewrite [F:ZTE]
      Next
Call ECR_TRACE("Etape 20",0) From GESECRAN
    Endif
Call ECR_TRACE("Etape 21",0) From GESECRAN
    Filter [F:SDH2]
Call ECR_TRACE("Etape 22",0) From GESECRAN
  Endif

  If(WERRTRAIT=0)Then
    Commit
  Else
    Rollback
  Endif
  RESULT = WERRTRAIT
  If !GSERVEUR :Call FERME_TRACE From LECFIC : Endif
  TRA=1
  If(GWEBSERV=0)Then
    Call LEC_TRACE From LECFIC
  Endif
End

Funprog GET_CODCLTCHG(WSOHNUM)
  Value Char WSOHNUM
  Local Char RESULT(30)
  # Ouverture des tables
  If clalev([F:SOH3])=0 : Local File SORDER [F:SOH3]: Endif
  RESULT = ""
  Read [F:SOH3]SOH0=WSOHNUM
  If(fstat=0)Then
    RESULT = [F:SOH3]ZCODCLT
  Endif
End RESULT

Funprog CONT_ART_ACTION(WFCY,WBPCORD,WBPAADD,WITMREF)
  Value Char WFCY
  Value Char WBPCORD
  Value Char WBPAADD
  Value Char WITMREF
  Local Integer RESULT
  Local Integer WPARAMOK : WPARAMOK = 0
  Local Integer WRELOCAUT : WRELOCAUT = 2 #On initialise la variable à "Refuser"
  If clalev([F:BPC])=0 : Local File BPCUSTOMER [F:BPC]: Endif
  If clalev([F:ZLA])=0 : Local File ZARTRELOC [F:ZLA]: Endif
  #Dans cette fonction on va regarder si le site WFCY, le clietn WBPCORD et l'adresse WBPAADD
  #peut relocaliser l'aticle WITMREF
  #On commence par regarder si le client à le droit de relocaliser tous les articles
  Read[F:BPC]BPC0=WBPCORD
  If(fstat=0)Then
    If([F:BPC]ZAUTHALLITM=2)Then
      #Tous les articles sont relocalisables
      RESULT = 1
    Else
      #Il existe un paramtrage spécifique pour les articles à relocaliser
      #On commence par regarder si les 4 critères sont remplis
      For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY=WFCY and [F:ZLA]ZLABPAADD=WBPAADD and [F:ZLA]ZLAITMREF=WITMREF
        WPARAMOK = 1
        WRELOCAUT = [F:ZLA]ZLATYPE
      Next
      If(WPARAMOK=0)Then
        For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY=WFCY and [F:ZLA]ZLABPAADD="" and [F:ZLA]ZLAITMREF=WITMREF
          WPARAMOK = 1
          WRELOCAUT = [F:ZLA]ZLATYPE
        Next
        If(WPARAMOK=0)Then
          For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY="" and [F:ZLA]ZLABPAADD=WBPAADD and [F:ZLA]ZLAITMREF=WITMREF
            WPARAMOK = 1
            WRELOCAUT = [F:ZLA]ZLATYPE
          Next
          If(WPARAMOK=0)Then
            For[F:ZLA]ZLA0 Where [F:ZLA]ZLABPCNUM=WBPCORD and [F:ZLA]ZLAFCY="" and [F:ZLA]ZLABPAADD="" and [F:ZLA]ZLAITMREF=WITMREF
              WPARAMOK = 1
              WRELOCAUT = [F:ZLA]ZLATYPE
            Next
          Endif
        Endif
      Endif
      RESULT = WRELOCAUT
    Endif
  Else
    RESULT = 2
  Endif
End RESULT

Funprog SPE_GET_COMPTEUR()
  Local Char RESULT(17)
  #Cette fonction permet de récupérer un compteur unique du type : 20171013153657177
  For (Char MA_DATE) From "5" Sql "select substring(replace(replace(replace(replace(cast(SYSDATETIME() as nvarchar(50)),'-',''),' ',''),'.',''),':',''),1,17)" As [XXX]
    RESULT = [F:XXX]MA_DATE
  Next
End RESULT

